(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    391793,       7964]
NotebookOptionsPosition[    381458,       7613]
NotebookOutlinePosition[    381833,       7629]
CellTagsIndexPosition[    381790,       7626]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "3", ",", " ", "4"}], "}"}]], "Input",
 CellChangeTimes->{{3.723248680199726*^9, 3.723248684542807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7232486874208508`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "a", ",", " ", "cat", ",", " ", 
   RowBox[{"CurrentImage", "[", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7232491009949803`*^9, 3.7232491159638186`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "a", ",", "cat", ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzsvVd/I9e57rln5mYu5yvMt5jLOZdze+Y3F3PmbJ+9ve1t2ZZkK1hWsGRJ
VncrdaszOzDnCIAECTBnMIGZRM4ZqJxz1Zq3gO6WrNiSuplU/9/jchFEgwWI
D5/1rlrhf//1n/7rf/7P//Iv//La/wqH//rvf/0vr77672/93/8bfPH/vPza
73/38m9/83+9/Ppvf/fbV/+PX/8v8CAD//s//6d/+Rf7XL3QyLKsKMppX4WD
g8NPwfGvg8P5xTGvg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4PDT8C5yeLgcE7h
GYEiGJnSDMnQVR102lfk4ODwtBAVupipCHkdcchUTNBpX5GDg8PTguXpUgoT
EpJeVCzWsiTLSWEHh/NCJUmVE6RwzEghFmEW4p0UdnA4N2BRDgTmVSO8VtAs
3I5g0Glfl4ODww9DHknUsSyHWD0qiknJKJgQwUhAp31dDg4OPwxzJLDHghzm
tKgoxyUtpZpVFdHIkA3QaV+dg4PD98EfsSA5witRQYlKcljUkzzCEBJtnfbV
OTg4fB/CISuFeAn8GxOlGC9GOSPBW3nVIgxoSDt90Q4OZxnhgFHDohjh5bjI
x2mQEedsFVTEOn3RDg5nGu6YFiMcH+UECN84I8RoLc7rCd7ISqiqWaJlyU5f
tIPDGYUOU0yEZqMMSI6zYpSS47yaEKAKttIiRLBTBTs4nFm4MA1iozwb5cC/
cpxREoKWFPWkZKRkvaojyumLdnA4owhhmg9RbFRk7BKYVROcWvevllRBclpC
ZQsJlpPCDg5nECnMiCFGija6sBgtyctJXkkJSkoCSSlRy6kWpiEOGYoGOu3r
dXBw+BI5xIK0iKCGeSlG6ylBTHJSim9ITMKXgpEREY2QrINO+3odHBy+RDqm
5BCtRTjNvgXMgH/VJLSfBS0l2a3oFK+lBC0rGFUVMToSTTCw42EHhzOCeITL
IVINM1qUU2OsnuTNhAiykoqZkK0Uh9K8krWFqnp9dpJqOst1ODicDaRjToaW
c5RR4pySZJUkp6UULSnrKVVLKpDCelpWsgpIL+gmhizRsCSnL9rB4Qc4mWWp
pJAih1U+Tttlb5oVk4yc1qSU2jg2TpSMAYITPWchzpmd5ODwA4B5G3tvPW8X
yyFJjShijJMSgpQS61LktCplVDGlgOBEyehgXi0lmzmIYA0xyFB00HO9MAeH
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
ZSWohXW7mDUV8KKs/BOSrIiSJmqNF9Hr+fs1C6vwat/mYMjfe+1Dn93b//jO
zu3r0VtfhJtv7Xc9iHQ8TPS0pSZc9JxPHndhPjc+7WW8w7Xutmjb/cPe9kx/
Z250sLIdkAs5JAlI0AzBqYIdLiIQoE9itFHPNmrVhiRBlkWlcS6LEkiFClf+
0n2CICiMoLJiI1uf5OnXHNqoi7/2rS/9W3/Nb14b1L/3Ovo/bdoD/969HgXd
u7XX2RzraQ/3d0U9/eW5Cc7vJkFwMuNlejsjD+8GWx6mO9pyQ715/yi1s414
DgmqrZP/bB0cnjeaXZwqjfFRBlS7UOGClex4hcpUlSU7T+1hvrJa73iyu5++
uomp3RMlSKoo10NZ/6ZDH211Wn/N78L+7rc1oXFOnFtdv9Uc/Oz2ys3rCdD9
W8etTbGe5sRAe3qkrzDtpSbH6YlRcnKc8Hvx0eFST3vs1s1wU1O842F6sKsy
7xcrWbsjmlOdKtjhIlLvK9YFxRDVr2Zoo4X8rXH5rR78ajH7/Xz/c756aZKm
5sulh+1r125NXbueAj24GQX1NGUGm4uDPRmfB5uaZL1jxNhYGTTj49wD5U8+
2bl67fDuF/HmO1lXJx7fRVDHM4pTBTtcQBp9xarUCFxdf5yhal3fz6NX+Bl8
85//07VpKsXQge1M1+Dc1TvHn9zYv38z+eBmqqMp1f0gN9CdmXBjkxPkqKvi
GSmNusqTY+TkKHnv9tH1z7fvfBG6dzPa/7Cw4uPCEYNhnSrY4QLypK/4iYOe
JkOfuX+/mt1fu0JKUSaXlj67v/XRzZV7N7IPbuab7yZa76X7OzNeF+Yfq7kH
ciP9RUjeiZHq4iTf2xq7+Wng9rU9UMftxFBLac6vMBgSFFsn/fk6ODxPfo5P
n/6lvvndxiPf+g+/9rKCqsZSKe9C6nrLzI3bUdDDO1DeZvvbE96h8oSn6hks
jAyXPW5syoMvTfLewdKtTwM3P90CPbh+0HU/PjqEHe6INItEGSmarjzneQ0O
DifG6fr3W7/1zVcG4kWmuW+s0Rf94FasqyXf1xIe68+NjVQ8g6VhT3V0gpzz
Ukt+fmGCufXJ6vXLtm5+vvbg9m53W2LcjWMYkiQkaab0/Oc1ODicDE9p3p/5
4t/zyPc//wkYLW7sHDX37Vx/sNh0K976MNfbmnb1lsZGcO8I4fLUxifo+XFm
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
j/BrIW7lmF/Yp+cO6Jk9YmoHhPt2MW+wMr5V825Wx7Yqvh18aquyeECWeJPQ
zHN9T/+XBrSmNtZDb/710isv9r74u463/qPj7d90Xv6zp+mDpc4rO547ieGW
rKej6O7Oj/YVJwYqU8PYnMvWpKsEgiAGLQ4Vl0fKhXR9T+Ezs3ZlMlGbnlpP
7iIsiYwaQjhCogU6resBCx8eHq6PHU51r063Jyq7dqd0vV9a/ZpozQCRBqrL
xHWjIiFQmkZ7GWYtqa6n9LUkWo4aMweyd5Me3dGH18WuLbljU+pdVVpnmNZJ
rm2KvzNB3hzFrruIK73FDwZKf+vOvNWRebM99dfO6KvNR6/dP3z13gHo7fbY
35t3P+2PHxEop52h/4IOT0MuW3GNjF9+f+C1l5ve+c/ut3/b9f4fBj/9y8Sd
d+c7Pw323Y66W3Lu9ry3qzTeX/YP1aaGa9MubNxdBU2OYqBZV23WjW0FuEoB
sYo9x1DW1FPcYJmgxFgit7NZ21or1CKIyyKLssveZ1t1/lhkWS6Xy6mD/MJ4
wNe2uzmWjAWxYlhKZ+VMTgnlRdBhWtpLcOtJcS0hrKbllaS4mRLXk8JGXNpM
yIGIPLNNTmwS/i1qYovybhCeZXxksepaYUaW6b4loncRH1wg+uew/unywHS5
f7La56/0jVd7x6vd3ny3N9ftKfZ4ih3eTKs70eIOg1pdEdDdrt07nTtT+3xe
QYSGyHNyN9ChQaFQeHBr6O3XP//bC71v/WfXW//R9e4L/R+/5rr93nTnZ/uu
eyn3w9x4W9nba0cwtKL9I5jbg4P8o1RDPg85OlwM7SNGtFfqEHR7uPVpkSkw
U7Obc75q/AhJWaQW7YIX8V//nTyV7laO5gIra2Mti0N3p8Y7QsFJIhAQ19ch
RlmQa5nrm8Fb58nmWeLhInVvFu+eI7pm8YE5cnCBGp6neidr3ROZPn+u258E
9XjTfb7s0FTJNVsbmswO+jKu6ezofHFsJgaansnPzhXnp4uBJXx9LhNcKuzN
1w4X8eBKaXO5sB6IgzZXk0uzxyODO23NC63eSl5CZQ1VDMe/5wmKogJLe/fu
dL35YvfrL7S99cLwO390Xfrz4Cevue6+v9BzfW+4KeptzXi68uN9pdEBzDuE
j47Uxt2430OCJj2E342PD5dXZtlY1BLF06yCIeM2t4qLi/HjdQFPIbWEDByZ
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
vGRVtxh+qoIC8OPoiMEJNBjifJQC8YpPwo0oYWI5hyy4wuOc4FOfVN8DbJ+A
SZ/TF7wgDFvO0aazhW77eCf8vFLf0QJND6uDPc5n1Xv3bvbevPbq4eevkr7p
KYgafZy4UJl52FxhGRxWfQEV5jX82VX4B7FoOBciwt+ru53zhtOhfWzAJwF4
3ZLLwTEXHHqMuzYx+EQkL2XaKLNmDr8ggxYesUuQQ0RcgPgqF1QpRGFQlUVU
EVclQpQISaQEIFgCI4K+95fzl6NBDPpGf3lMgwgJADzQXEhhIYWDVPAexM/f
0xa8iuCkOB9wrwqwxhQmsYQksNralveusnlrX9qAiYhSPrPDduzxXkKohcEc
HNiOQikfu/I3ElvCpwH0LKTaVNWtqgElzF9ZYT/a/5IMt7GzW1i1mJg9mJS+
nZK5m5e1UlywPbnIwvTP8xec3em5p6t3Jid/Oep+7/Uvmm5df5maOBsfPR4b
PX739kD07d7MpOm2ku25DtfFVCC4I5E6EEULAvC//vdUuntz0WiaIggOY0SC
FyAuZA1yHlH0KyKsKITyyfoLemy/NWA8Nhm3IPMO2td63v/iouO5/XHhXntz
aKxf6HnlqC7fTbw3GvNdf9yXvfFf9SVe78l9MP4ocbWm4KSznTzYU9ywinKq
djP++bOz3vAIdJhAyzT/y2nF2TQodEDEwhY45FeCPjnglr1OnjRQnj3v4Yzf
dSATRpW2avUoJK9KQTLq430uxu9mMY9C+lUQh9OIyiAqpw3bSiomSwQvk0CF
ZYlR3svKq/b2sf24b//e/2ox/xvni4YRFMWQxID4IaQlgpKwGnkPOMv7RMEP
XnnazQFQThkABYcdCpc7Zn9q3RAXthiAcRIt0ggFPIXfTtgOYccxhlvCKvyR
K3+58LAzvOeidEHVrGoSHMlRZJRPWEEMk8yr3oEHqZPR6dOpaTsAeRkL+ZlL
L7sQhFQJXsNPfByc2uCErrC8Ny5h+auv+z/7W+XXn9elJI8mJgwnxPQ9uNMe
fac/LWGqNmt1otV1POG3r3PQAUPqZTo8YhmZMfzxCXJvPVCAxkiPwy0j2uj9
h3v8994S4LpZDm0HS0e7U17bnvjq5fnzxsO6x7pHWSuvmoKDXfSrZlv5o+3s
uJm0++Px14Zj/tl/6x9tsTf70h9MlaSvtzzzjQ/IJoeKMR8Umfzx2xUvIllY
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
CRiqEnYFtynglXQqpEPFbDIAalEQi4ybFcqqgt8TDsBWCbGIsFWFzApq4lAT
D5tkxKyEwG9sKmxRIBP4lAxYDFtkyAw+K5JWGbGrqEMbkwGBX9gjC5RDpLSZ
YuCvJTYkcpDMIAJPSB9VfUIbrQriiB9VCC2HnxK1Cl4c+4nlnwF/O8d34nPr
76Zt3EpajUueS0pfysxczc7eKMw7KSs67+/HzSb1wiYfXlB7h6H1LXfPiL20
ejm35Cy3WF9YYsgt0OcX7OXkbqdlHcUnbz2MWbt9a/a76yPfXhv88qv2zz5r
/vwfdTe/bfv28waAmKjem9dab3z9MiVh6lHWWsWjvaqK7bqnh8XF68XFG6Xl
e60v7C/aHS86HIO9npbn5+1tliEQWs/RK/PM3pqwucQszkDzU8HFSXh+PDTZ
HxjqcM2MYMvT3PB4aGaBmhrHJsex2VHi9TS3ssh0t9vLK3bTM2ZTYqce3B6I
ixrJT1utyDsoz9svqzwprTiprNY9rjktK9l7lL9ZVriXEDOZHD2bEb+UGj8Z
daPz9pctSfcH0mNnU2Omi7L1z2v8nT18/5AyOgE0V3sdnZTHJuXhMWHltWoH
NwOpVY0OT3/9+VzwD/KcmDfZTZG6lExIokMS6xMBfuND0qZK/ajbHYxkVkMu
KeQUgHRqAmoDrypi0ephAg1FLApslgGCBjVwqSDnKmHQfg8QNIqBSwE2KpBB
hi9JgIgLCxnBR8A/SwHtvarhQgmey0i4BDH4f2DTADCziphFAMzCAQB1xq08
bmPJsHHmg6pE/XwNiqsGri7iQymIlmhZCa9FBWEO6DA/7cqC6zMyt59WUHc3
Y+tWylpc5k7ao5Oi0v2KKl31s4u6JnN/l3N7TV1dE0bG/C9emmueHpZUWx5V
XmYUnaYX6gqKzzNzjwryNwGS804epu/eT1y983Dx5p2pL78Z+vvXff/5Zdff
/9l07XrHtX+03Pjy5b2bvV991nTjq5aHd/uykxeyEueLchY0Z5o3XVAwl5Qx
mV+ykluxV/xUV1N/Xv7kqPqJ7nmDcWoEBlhdpGcnoIFu20i/c6jLNdbne1Fn
eP74tL8zNDVM17RdDszibR2+5leenpfgN/xwD9RSbywu24tNmHgYNQT0NObW
SFnePvCzTx6dPWs01jy7aHt+XlOxnVuwmZ61Uly4HxszmRA1mhYznRw7+t3X
bd9+Vhsf1ZUSNwbwuMTQWu/v6eD7e+TBUXVkQpsCHh5XR8OYn1APt1QvpLlg
StDwSd/G79neSVP8PkdCy06MjBeBGJL5lePn9x4VjlMoSmAIC4CG2KCXCNi4
gJULAQE1K0GTGjJrLA4ZVP+FqBVX12tATwXiTMAMPEDwnA2eMdA5FdQTmB4D
AG8AAmd08JzR/v+UD+jFMLT3kF4DfM4iFxxk4EKXLGxgAEgDTRkZ2sKTJhax
8JhNxO0y5dImPcWQymOSFNZiDQwn0Mx761EDxoU8IRbnZFartkHTNIphPAp+
lD5k/pgTtMQWhpFwjA8GBYsVGZ40VD6dLq7UF5SelJYbKqrMFVXnlY8vH9dc
VNcZW5ssg72hvt7AixfWxtrzJ+UHJeXGotKLnLyT3DxdYcFpXs5xTtZaXu5G
eu5xStZBXPrWg6S1uw/mv/525Muv+r/4oveLL19+/U3X1581XP9H493rHTe+
aLnzZV3sd61pCeOZSZOpycOF+QuJ6dMpWfPRKdP3kyZTspfzSnaLivdy8kAM
sFVZetjeYnvVZOnvsna/MjbWHjbWHjTUHNZV7ZXlb5bmrjfWWbpeBhoarc2t
zmdPLqsrTqvLLjpbQt2dfkD/zLSFlMTp9ISZxJix5JixikfblUUnTysunteb
a2vOm6r1NaV7j8sOK4r3SrNX71/viL81lB03lxI3efdm983Pm+Ki+uJjJtOS
Fp9Uudpa8N4efmBAHhlVx8bVsRF1YuwNf8eG5clxZmNHODlTg5SK/TnHon+Q
e0wBF/pmdQALyUB/qYBIBX63BZORoyIIIhAIOCyY00p4DZKGSxUgeKn6zlSX
jnMcM/5DKnBEY0cUfkyjJyRA8IQII+A/8pHHMHEEBY79AL5jCCBwxPoPGW8Y
vmMaIHDC+Y5YSIfCp1jgHPfqUegMB2DOcPaCZC4Z+oIOmQQYKLIZaLTMmBXO
pvI+rXwQ0GKZVmWSEXDyvfWogbX3OX2R8pgAJIpB/oAYFFXqg/KfGUEkOZ4k
VL+XN5rEtQ3P0Ij3Zbuho9Xx8rn1ZaO/td5b/dRe9cQSZvFF9fd4XKmvKTqu
KtgvKTwHyM84LMw6Kco+BkhPfZ2TtZ6dcwSQnLMfl74dE7t8/cbYt58DC9z/
9dfdGv675tp/Vd/5qjXqWtv9zytjv65JfNibnjR878GrlLTh2/FT91Pmv4uf
+e8bPdGxE0AN01KWE+Lm0uLnc9NWn5QdVxbt1z7eqnuyXZS7mJc5k581mxo/
DCiZEjdRXHhY99Tc8tRVUaCryNwuTFpJi197Wm5pe+UuLNmJjRrISpp9lLWS
lTyXlTJRWbxeVXHyrNbQWmd5Vnn2rERXU3jY8uQMoDxl+vZ/1sR921+QsJga
Nxt9Z/i7L1/GRg09uDeTkbZVXQu1vRL6BvjBYWkcMHdUnRpSZ0be8Le3T2hu
hTu6aPDeBofzsj64bskfp/0ggqaoKxccyYWOPGP09z28SE0qOETBIRry8D47
5TbyjgvWrVfsJ5J1n7buU+49AiAAsE/4DzR49zH/IR44grwHgdBBMLgfCOyH
ggeQ7zDkPQz6DwnfAe7aR1wHqOdQQ/CACgAAmh9B/uNg4CSEHSPECUbqUADi
lMZ1FHRKwKcErmfxM469lDijLFgFxSnxAZHXHi7DSCFWxuXw6uAfPFleK3kV
QLR8JF4UOAH1QognJHtlFVcVTpRZAcF5X5B0uQWDETs8xo515PExfXCAA+zs
IDu7FMD2OrG6iExNoz19zsY229MGQ32d69lTR0Otq/aJvbzSXlZpL666KHl8
WVF1WVF58bjs4nH5xZOi07Lcg+L8o/IiXX7OUW7WQWHWaVGWPjttPTdzKz/7
BCA95zA5Yzcmaf1O9MKtG2PXgQv+ouOLz199/renf/9fVdf/UX3/RnPyreqU
2zVJ91pTo1/G3u9IetgT/XAs+uHorQejn1/vvHNr4GH0ZMLDsdgHw3F3B9Lj
J/MzX2vsS57MTpnKiJ9K18p6jCVGD8ffH0mOnSgu2H1WY6guOU2LX8hJWE2L
WQjz11z7+CwrZTE5ZiY/Y728YLu8YKc8d6uu7OR59eXLRltH7UXfc8t0l3u4
1TzRetpTs1US3Rv9n1WZ9yZKklfSYhdioyairg/E3ZtMiV8tLzpvfIZ1tktD
/dLYsDI2ooyNKlNDyuSgNDGqAPR2Mi9bkZ4uemRQXN7hD4AWBNQQrtJcpIb2
n6MO/A8W+4QLQzMExxAsjYgMKlGIRuHf+xj/NcCF47TfBzlNpPkMsRxLhn3O
sImbtgjbFgrgiGAb07AFe3Yx3wHi2g05d7wAgW04tIt69wOePb93H/bsQbZd
r33P59r3AwR3sNAuHvmrb8cZOvBSu0H2AMEOIfQgBB+S0AEB7wYA8H2MPCRY
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
8ze3eNpf+tta3M2tofZOor2H6uilB7vokR5urF8AfhkI92gftjjNbS6rO+uS
8UwNuVQGvtLl380vv8vft+piRZ5O8rsc1U83zUVilNcbRJ0c6ZU4p8Q4AEMl
AM7N8W5ecksAikfgHbTo5hSvoPgAPTnZxUiAxU5GclCym5VdrOLiFHeYs15J
8Yqim1d8YfIiigrLEibLhCIRvIhzIilo5TRZ8aPqKNI0rVXbBsyl6UtTcO/Q
MjBpr23eKq+6LCw5KSq5rH7qbmpFnrfAz5qhuuZQTQNS+xxreB5qfA7i50Bd
g6++3veszlNX52l8HnjW4K2pdVY8tZdVW4seWwsfW0qeWEqrrcWPzQXllzkl
FxmP9BkF++n5e/mFpyXlhsdl5vLCy9w8U2LSUUbCVlH2aX7BcV7eUVrefnL2
blr6QWr6QXLKZlr6dlrmbmrGDvgxIXn7YezGg+jVm/emv/x2+B/fNMaljTcX
zXQ9WZuvWV5u2NxrXT/rPdzt217vWJ1rXZ1qXBpuXhhtW+pvWOpvXBp6tj7c
sDnUsDpYvzLRtD/dejTVtjvVujPbtbsypNucMJ8s+y5XPYY17+WCw7TkNq46
zeuesxX73vSFbtZhXAmYdbTjQkCDEoNL2sIW4s1683CnjYcsPvOR4ahvvyu/
vTJh+knKXDYIxe/OPryzkBS9mpWhq37srW0KNrcT3b1cTx/f3Uf39DODg9zg
ANvVT7d3400N7qdPTM21wd6XLOBvUxtS3+x71uxtafE3NXkbm/zPmwP1bTDA
izaks53o6qJ7etneHrinKzQ0gEyMk7Pj7NqisLtKHu9Qx0e07pg+P2VNl9Kl
gTYYGYdDCgQkmpR4VvptnoT4zigWuOXePB0M5yiE/rX3/gkNHCSKkAE/jHk4
Ogg4KwKES1soXIBh/bToESSvqHh5TWG9gJKapCoeEahwBEB8VQ+vwafJtKDR
VgLQ3oQrQ2qVJbQiA1oteoEJl9v9Oal9bwPmlwqnWpEYPr1oautaf9ZoqarW
V5QaigpO8x+dPalxPW+FgbZWNweetoFXpKYFrW/0NzVDAODNswZP7TNXXY2z
4Zm35ZkPCEf1UydAfrU9u8r86LGlsNoKXvMqDJmlxtTC86T8k4eZe5k5F4+K
baVFJoD8Amti0nHc3bVHGefZuQcAGTkgYN5Jz9BnZp0nJm8kpWxlZO2mZ+5E
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
Ir201F8EIextex11k7Gsw7KEseFwdryettlEYkgC0cRxNGPQ5fT6JI4nCF1K
jyYtuoxZlzYRWaupYDHmrea8iUhZjBm3qeQykjZD3oSlDdoEpowQspBZEbUi
KQeW9dlrKz5qZblza4VaXaJXFjq3AvVPbtNrj+nDnW5ovxs7PW9URn3qV9HF
34nfi+7AzELo5hvVl/i/stfSfjDIV7+t6TGppVkr9euVwWQtaLM46FTOW7Vx
owrbEdUct1ujTue82xkNui9/hrz9N1br9R5tbhpte6hhixn2AUhSA3eLOqqW
HEuFMTE/whdEDETD7mhbbU2jNUtYMjpnFeJX7ywT7qrNXCT0GR2WMxKk3gCx
XMSNZcxAAgsDEDytQmA0yAAU6pxUmQHBK5TEBeIYiN951jGPH56AzT/iCI4F
/N3rU0/++8+LVz74jMtel4h2xEKmcdIMK3hzfvvGzeDVa+t//3D96uweT7Av
EB2K1XEAT5FkSWIWU/Lune7ep9njL0rFZ2e1rURvJzo+zY3D7XGEGifocXpw
TjIdnUat4cvO+aD7C2L1e9abtMMotRv5evTzw7vaRZT1qeLG7atX1uZmd0Sy
U3CFmcg5bGWno+n3dZ3uusNV8wRokLfLC/RSgHI6q0Yih6AVHK/bbOc+39gX
oIGIldooAIgb1eUma8gRIHEsZ8bSRjSpJ5IGYwq2uCEO32J4GhjZiucNWiaJ
Ypa3iU8RwQEmOjYqYnYt8y0wtd9fX5g8UPbWbgWqE6wu1O4t15/cGxYS437z
7evi1wKh32TaZPfafbr5O82fX7Nvfz9o929relCtQbvRbzV6zUa33Ri26kyB
3E5j1LoA1RrRnXOKGtL0sAc69+1pE6o/iCZTX2/mFleDejyEoceoNoIhUUwd
wzRxgFoekgmPJfxDifDUaqy47HWnrW62FYyWnN5WMjqrFlvJbCUtJtJoyINA
JoiS3lAgiKIBJ/W6Io6lASiW0SApvTaHa7JadUatTKkVSbk0xoMUWhhmCU45
ojBXdMwVnXCEu1zRHle0PzXz7B//+OLvf//8/Q8+m51bE3C2hJxtHveFgLcL
7Dw1u/XPG0/fm/56Zn6bLzqUquNybVKkSfHkMR0adbvKT1bJ/UdUcYOsBqvD
/dz4rDqO0eNkf5zvj0ujc6bXxssB0/x3OOj91LLWP2rMPdmBy9emch0yVHji
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
       "], {{0, 240}, {320, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "AbsoluteTime" -> 3.7232689209240528`17.323499394343038*^9, "Device" -> 
         "Integrated Webcam", "GeoLocation" -> {28.37, 75.60000000000001}]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{320, 240},
     PlotRange->{{0, 320}, {0, 240}}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7232491433740563`*^9, 3.7232491560840797`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "a", ",", "cat", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsvVd/I9e57rln5mYu5yvMt5jLOZdze+Y3F3PmbJ+9ve1t2ZZkK1hWsGRJ
VncrdaszOzDnCIAECTBnMIGZRM4ZqJxz1Zq3gO6WrNiSuplU/9/jchFEgwWI
D5/1rlrhf//1n/7rf/7P//Iv//La/wqH//rvf/0vr77672/93/8bfPH/vPza
73/38m9/83+9/Ppvf/fbV/+PX/8v8CAD//s//6d/+Rf7XL3QyLKsKMppX4WD
g8NPwfGvg8P5xTGvg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4PDT8C5yeLgcE7h
GYEiGJnSDMnQVR102lfk4ODwtBAVupipCHkdcchUTNBpX5GDg8PTguXpUgoT
EpJeVCzWsiTLSWEHh/NCJUmVE6RwzEghFmEW4p0UdnA4N2BRDgTmVSO8VtAs
3I5g0Glfl4ODww9DHknUsSyHWD0qiknJKJgQwUhAp31dDg4OPwxzJLDHghzm
tKgoxyUtpZpVFdHIkA3QaV+dg4PD98EfsSA5witRQYlKcljUkzzCEBJtnfbV
OTg4fB/CISuFeAn8GxOlGC9GOSPBW3nVIgxoSDt90Q4OZxnhgFHDohjh5bjI
x2mQEedsFVTEOn3RDg5nGu6YFiMcH+UECN84I8RoLc7rCd7ISqiqWaJlyU5f
tIPDGYUOU0yEZqMMSI6zYpSS47yaEKAKttIiRLBTBTs4nFm4MA1iozwb5cC/
cpxREoKWFPWkZKRkvaojyumLdnA4owhhmg9RbFRk7BKYVROcWvevllRBclpC
ZQsJlpPCDg5nECnMiCFGija6sBgtyctJXkkJSkoCSSlRy6kWpiEOGYoGOu3r
dXBw+BI5xIK0iKCGeSlG6ylBTHJSim9ITMKXgpEREY2QrINO+3odHBy+RDqm
5BCtRTjNvgXMgH/VJLSfBS0l2a3oFK+lBC0rGFUVMToSTTCw42EHhzOCeITL
IVINM1qUU2OsnuTNhAiykoqZkK0Uh9K8krWFqnp9dpJqOst1ODicDaRjToaW
c5RR4pySZJUkp6UULSnrKVVLKpDCelpWsgpIL+gmhizRsCSnL9rB4Qc4mWWp
pJAih1U+Tttlb5oVk4yc1qSU2jg2TpSMAYITPWchzpmd5ODwA4B5G3tvPW8X
yyFJjShijJMSgpQS61LktCplVDGlgOBEyehgXi0lmzmIYA0xyFB00HO9MAeH
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
ZSWohXW7mDUV8KKs/BOSrIiSJmqNF9Hr+fs1C6vwat/mYMjfe+1Dn93b//jO
zu3r0VtfhJtv7Xc9iHQ8TPS0pSZc9JxPHndhPjc+7WW8w7Xutmjb/cPe9kx/
Z250sLIdkAs5JAlI0AzBqYIdLiIQoE9itFHPNmrVhiRBlkWlcS6LEkiFClf+
0n2CICiMoLJiI1uf5OnXHNqoi7/2rS/9W3/Nb14b1L/3Ovo/bdoD/969HgXd
u7XX2RzraQ/3d0U9/eW5Cc7vJkFwMuNlejsjD+8GWx6mO9pyQ715/yi1s414
DgmqrZP/bB0cnjeaXZwqjfFRBlS7UOGClex4hcpUlSU7T+1hvrJa73iyu5++
uomp3RMlSKoo10NZ/6ZDH211Wn/N78L+7rc1oXFOnFtdv9Uc/Oz2ys3rCdD9
W8etTbGe5sRAe3qkrzDtpSbH6YlRcnKc8Hvx0eFST3vs1s1wU1O842F6sKsy
7xcrWbsjmlOdKtjhIlLvK9YFxRDVr2Zoo4X8rXH5rR78ajH7/Xz/c756aZKm
5sulh+1r125NXbueAj24GQX1NGUGm4uDPRmfB5uaZL1jxNhYGTTj49wD5U8+
2bl67fDuF/HmO1lXJx7fRVDHM4pTBTtcQBp9xarUCFxdf5yhal3fz6NX+Bl8
85//07VpKsXQge1M1+Dc1TvHn9zYv38z+eBmqqMp1f0gN9CdmXBjkxPkqKvi
GSmNusqTY+TkKHnv9tH1z7fvfBG6dzPa/7Cw4uPCEYNhnSrY4QLypK/4iYOe
JkOfuX+/mt1fu0JKUSaXlj67v/XRzZV7N7IPbuab7yZa76X7OzNeF+Yfq7kH
ciP9RUjeiZHq4iTf2xq7+Wng9rU9UMftxFBLac6vMBgSFFsn/fk6ODxPfo5P
n/6lvvndxiPf+g+/9rKCqsZSKe9C6nrLzI3bUdDDO1DeZvvbE96h8oSn6hks
jAyXPW5syoMvTfLewdKtTwM3P90CPbh+0HU/PjqEHe6INItEGSmarjzneQ0O
DifG6fr3W7/1zVcG4kWmuW+s0Rf94FasqyXf1xIe68+NjVQ8g6VhT3V0gpzz
Ukt+fmGCufXJ6vXLtm5+vvbg9m53W2LcjWMYkiQkaab0/Oc1ODicDE9p3p/5
4t/zyPc//wkYLW7sHDX37Vx/sNh0K976MNfbmnb1lsZGcO8I4fLUxifo+XFm
yS+szLBtTTu3P1+7dnnx2scbd77Ya3+QcA9gR3sKQyBFsWw5K2Y4XAh+jn9/
0N0/2b/f+gSe512+YFOr99at+L17mZ620mB3bWyY9rl5aDz7Jpj5cXbJL64t
cYM94aabG59dnvnkH5vXP91/eDs+0FmdHWdreaRKtpwVMxwuBj8zYU8SSZIO
o/nx6dU79/fvPjjoeJiDVvToADk9Kk2MYrN+ZnGKW5kRV+ZFr6vY15O637R3
5aPgP95fv3r5sPl2drgnv7PGl3L2BH+nL9rhYnCO/KvW7wgfhENNrWu3m1da
mlLNdxOeHmzeq0yP1ZammOU5fnVBWJyWZ3ycz8/19RcuXdp+4425v/9189rl
aPPdI89gZT+IZM6Zl+RwQThf/oWitVStLG6km3umm+5E79+LD3eQvmF5chRf
nOJX59jtgHqwpQcD6sqaOjnDtLTFP7268dH7m5fe37zxWaC7LbYyw2ciOkEh
SXZmBzuce86XfxvUWKl7ZPT6raO796N9LbSrW/J5yPlJMTBLHQfNXBzFj9B+
CG3sGONT1dauw08+3njn7elL7/vv3QpODJXXZuUyFMKCk8IODqcAKyp7R6GR
8Xhb7/ZwHz46zPg8xNQ4PenBF/xcYJ5fnhUm5gW3nx7yYB29mft3j69fDX5x
Zfn21Y2elsyMVwjvIarszGtwcDg1to5z/WOLo56K11vzebBxd22wuzLQVe7v
qAx21x70Ve905Dv78K5+YqAr29OevH9t+/rl1TvXIp4Bdm0GFaL1JrTs+NfB
4RTIV8jtg6h7LDnkigz1Y4P9tf5OsDA+0IsN9GHdg1hLZ6G1vdjdi7kGSqDe
5kjnvaP2pvhgZ2l2VDpct3ASCTKSNUN2qmCH88kzGadxWtA0PTK+39m/2t5e
A/W2Y0Pd9MAg0T+AjwwT3V2FB/dSPV1Ve5j0KOUdzIMG21PdD6KjveTihJEp
2GtkCZqt034rDg4/hfNrXkAQhL1IaWJ2q7Uj2dwe72iudrXivZ1YXxfR21Pt
aC90t2VdA7h/lJz2Mn4P5nPVPP2loe7cxBA55WY3tg3KuZfkcJ451/4FWE1b
399/2Ll7ry348F4Z1Hm/2ttMtLUUW5sLrt6C303OeJnZcXbGx02O0T4POTZS
m3KTY/1lz4RSo+xV5xmnF8vhfHLe/StqWrZUmgtkHnTN3mzK3WjK3b9TaH1Q
63yY724punpLPhc5M05Pe8mpcQb8O+HGfaPE3AQ7PUb5ZpRkrr46hzOv0OF8
ct792yBdpR/2jnx8N3nlTuKLG+m790rd97MDraWRnvL4MDk9QfrHalACg3+9
rurUOLU4Iy7NSrOLyt4R4iW7F+u034GDw0/hApgXIFhhc/fwftfRpS8Wvvg8
fvd2vvNuoud+erAt7+mpToFzR0n/KAHJO+qqjbmxiXHW7xNmF7X1oFUhEOeM
xXI4n1wM/6r12Q2Dnq0PP+m6diV894t0281Qx+1I7/30UEvBP0xNudnGPWK3
qzY0WB4YJkc83OyivrBsJvKIkZ1eLIfziazpT7cP7xkH/hAdhvKu0fnLHy3/
44OF6x+FH1zLdt5N9z8senpq3n7CO0JOuGkI3+GB0nA/5hokfBPiwpwZOkaF
gr33t+Tsl+Rw3mjsQHQxqmAgFou994HrT6+2ffBG+NbH1Zabqe77xYHWwnBH
2TNA+9ziuBu3F8vqLoPgkXm/ubtmhXcRUbN3auB0W6f9JhwcnhpB0yVDq29X
f9qX8gyo1Wq+2dDVm0PvvrX54Xu7Vz4M37qWb25K9XSUXf3V0SHcM4CP9NZG
+mrDPZXB3sqYi15bMHfXUTJiFTOIYu0UVlTje/cldnA4Kyj8owhupPBpX84z
gJT0wTH/W3+beeV17yuv7H34j+y165GW9vJQbxY03IWPdJNDA0R/b7W7K9PT
nZ2f1NcWUTBg7m4irGynsKTaOu334eDwwwiiLEqKKhq6ZF4M//KKdhiO9ruP
L33meevtrb++tfHBe3vXPkt0NCWHOipDPfhwLzE8gg0OVYf6igO9eb9bXJ1F
a0v6VsCKHlmVfH1QpYIaG5+e9rtxcPg+aEkASbyuXhT/NojkiHudI+//Y/WP
L7tf++Pae3/Zv3slOtRMDvRhg/34sKdqL1k5VB3uK7h76aVJtDSrrC2aoNAe
Inn7jhJj6KDTfh8ODt+HoMiCLImSJl+IXugnVEl+ffuwo/fgyuf+d97a+uvr
gX+8E7zxSezh3VRHc8E1jHvc1PgI5RnCR/upWa8671eWp43VWW13zUgkTIJA
gmqKqumsVOlwxoHYFVRbp30hzxhJkpY2Ul2DC/+4vPvnV6f/9PL8G38JfH5p
r+l6wt1PeUd4n5sfd3FjA6TPxc2MKXPj+vKktDarbqzopSxSRGelSofzQX2D
wYsG/F1K5fDV9cPWzuPPri29/dbKG39ZeOeN+Y/e33h4K9bTWnT32OE72lub
GKRmPMLsqDTvF1Zn1ZVl/ejAKuWQxDl90Q7nkgtTCxeLxcm5WO/g+qV/bPzl
9cnf/274lT+NX35vtenacd/DvKuz5u4seXtr0yPMjIudnmChEJ5f1JeWzcNt
xFNIletycDgnQHNRVC/IcA61Psc/HKtOTW89bDn69PPlN9+ce/W1yTdfX3j/
nbUbV0LNN3Od95P9bXlPLzYzKi5NCatz8ty8urhsbq1b8YhZLiNRdMZlOZwb
eE1hlUe7AZ72tTwbBEEObu2M+tKt3cHLH+++9sbsH/4w/cLv/G+/uvHJB9E7
Xxy2NMV72grT48r6nASamZUXlozlJXNxQT8KIZZ3Rkc7nBue5O+F8S/8Kcrn
CoHtwsh48EFr9PPrwb/9be2VV2b++ueFd/8S+PCd1WtX9pu+CA+0V+dGuZ1l
PbCirwWsDVvm5rZ+FJbiOZOSEK8ZvJPCDucB5SsbAZ/2tTwD4F1Ec9WZ1aDL
m+8ZjF29dvj22/Ovv+z78+9H//Q733tvrH3y3mbT5xFvD3m0hnY30c6Gfdzb
Qgsr0vgUsbyhYywiNVun/VYcHJ6Kc7203TepkWw0mV0IFL1T0c7uwvWb+59c
2vn728svv+h/9U8z77y6ePndYPON1Fg/sTBlbq2igy0U3kVbm/rUFDk5yQS3
2Ugc0TySVUN2eqQdzgMXzMKN9e4WN8L+ab53MN/aXLj62eFLf5787QueF3/r
e/2l+Uvv7lz/JOrp19YX0fEWSh6i4z00N0mO9BeHevOL04jF7aGVgrPejoPD
iQMVQbFKH4ZTi8uE15d1DWIdLenPrmx/8O7yG39aeO3F2ffeWP/sH8cDbdjM
mLA1Z4Q27BTeWJRmfNzYcM0/KgYDbCRqMSySVAPkjM5yOBdcpBQuFosbW6XF
5dScnx131wZas803jv/+5vqrf5x+4+XFS+/uddyNu7urC251Zw7trqLDdbSx
gibH6JE+3O6mnjQJ7NGqd87oLAeHE4am6WSGDGxGlhfZuWnC58JHevL3bkY/
/nD9w3cCn1/a72tKe7uxRRe3OSlvLRo7K9b6srEwLfhGafdg1TvGBbe4VBZx
zj7CDg6nAc0LW3v76xtsIEAtz4nzU8zoULXl3vHVK1u3Pt8fuZfzdxGLI1hg
jA7MKBvzxtqSClqY5qbGieGhyuBAcWMdcQziVFun/W4cHH5ZCJKcL5b2jonA
Zm59TVld4aEt7RkqdjbHH9w87LyddHfWZoep1XFpbRYkL88JizNgXnLcXR11
VUZd5ZlJen+HzhQRKyFRM0QnhR0cTpZIthLYOd7e0za3pY0VdXmO93uw9ntH
d6+He9vL/kFuecJYm+VXp9n5KWpqHPO6qu6Bgm+07B+rjAykQdt7iOERo9k6
7Xfj4PDLokwxR/GUbya7GKhtrRuBZXVhihruSbTei/V1FKZdwtKEHpjhVqaY
aT/t9dS8I4Srv+L1VCfGcO9IedxVWVwQwyG1WEaC9Gim0kXqkZZElWUEChOI
KsdgkkBrEierospzgihIiqzIkiyKoiAIPCcyNM8xIkvxAiGJlCwx9qJMqtqQ
g8OzR9DVbKXU3hfwzyW2gwhK2rUlzj9W6GlP9ndm5sakxQkNwndpkvJNMCPD
1bFhuwva7ap5x6ipUWra3s0Bm/FxkUMkc49WzbowPdKKonCsUq1QhTiVCeOV
BE8XdR4XFEYhMZqheEmQRV5kWZamaRJjK0UCLzPVPElneDYvchXD4pGq1OXg
8ByQNZVk6PX9rGdyY3AkNzsvbi6q8z52uCcz0JGcHucXppTlGXrOj02MEZ6R
6sQI6R3CJ1y4d7g2MUJNj/ITHgL8u7EiJyNaDUPiOd/Hged5mpDwKitTmsYa
EmtwlEzXJLIi/Lj8Je381UVd5FUSZ7EiTVY5jjA00Ulkh2cMper93okr11bc
E3hwAQWmUX2b4JjfR8/PSYuzxNRECSrfsZHKpAsHzbhIb2/R009NeSQ/pPAE
29hQKRFHgnC+164kSbKY5pLhmpDX9RpSGWQISFdM0NO/yJOhArIsQ0xnU4X4
XjEXxrEM0tkzlMgXZjzDLxxB1Q7CkZGJyO3m+eHe6vyUNTtOjg+VpibJ2Vlm
bhL3j5XGRqqjQ5WJEczvJqbcxMRQxTtMeYfhadjMGDs/wS74uLVlNhnVeRYp
8nnqkQaX0aRYLVMKY0iMxOAKUeEb+WuvSiobmqqDfsIrg0EgpkmcsvO3wpEV
pVYkSlkGL0syb7+yojV0Cj0GSn1+DvyfLmsgVdFBF2y08C+KwyT25ofXP796
4J80AvPKnI+ZnsZAU+PYuLs0OlR1D5Th6POQPg9WFzncV/B0l2dc7PKEMDdK
ewYKKzMSDbElIEa3ddrv6amA1m8px0SO8lLZQtyPTtunBExBU2w4HD3YyKWO
CZFAJrRVtIaeS4+B8r3Y89tFSZVkQ9RBqmSC5Md88/nP/vocnillnBv1zV36
eP7G7a32llxfd9U1kPEM5dz96eHuxFBvbqSv4OoveQYheTGfm/B5WM8QMdpT
9Q9Ri2MiCEw9M0FvrnOZFGIUxKpI1gz5rKawJKrFYrWU5aiaxlUUvMBC/hrS
T0/bH0QQxGq1VsqSlTxVTTOZUKGYlHgcmtOGrRPkiYdBmqSCFFlTJE2SJCjn
JamezLJWz+dflnnP9fvFMOy9fwz94U9Nb/9t8/rNTOe9o56Hke6HB13393va
44M9mcHuHMjdZ3de2VspuYTR3tpYPzbvkla8+oyPgTK5q7u4GkCMUF8EXrN1
2m/r2+FYZW8vfLCOV9MIkQiS92R+Lvx6MAyT2M8t+tYO5wkmgXTJ1sn89CfX
8GUKPwbMa3fE8bwgwB83TZZ0OJ7r3+dfGhzHTc0cfXSl9ZXXxt98e/bS23Of
f7jadGXpwWeB5lvb3c3Hg535kZ6ifQt4GPeOEGNw7K+ND2LTI+T8mN2LNeGu
jQxWJn3M8YHIkkhWbJ2dO8JwGRA1OMYlE8VsQood44WQyBcRom3/6ie1EyVk
HFYio0eJ4GzyeDWT2CPZEjJkA/SsfkTjM/+uT/7JaqtPjCzBVSmqIGuCrPKK
Lii6KJuSbMqqBnpWV+XwvOF5rbW153e/b/u3X9974b/3vvbC6Cevjd742/TN
y3OtNzfru4FXRvqL0Ir2DOXdA7mJwapvqOYbLkx5yvb+4PXSeLgvN+nC6aK9
fPSZWkEaLoNX5GQCX5jb3Q3w+RgS88jCEGJs/0IZaEon146laXp1KugfXpjp
j5ePkCXaelYv3vjMv+uT/+bjgqbXZbeXON1kNYOXG3fzddCzuiqH540kacHg
3r170y++9MVLv+n98wsDH/xx4PKfXZ+/43/4aaD3VtTTkhvpynt6y57+vKe/
AP6dHIb8rcy4q5Oemt8+Vr3DxdmRamyTpzDbv2dnjlINZyOxTDIkhnYqpYjK
5pFG2OY1RLvyPbH8bQCN1WQkG1jYXBoJ78/mk0GSz0MboNEvrX5NDX/xulGX
zmk6oxggQjCKhJjF1SyuZXEjXdPjJSWcE46L2kFO3skr23llP6Nux8XtmARa
j/BrIW7lmF/Yp+cO6Jk9YmoHhPt2MW+wMr5V825Wx7Yqvh18aquyeECWeJPQ
zHN9T/+XBrSmNtZDb/710isv9r74u463/qPj7d90Xv6zp+mDpc4rO547ieGW
rKej6O7Oj/YVJwYqU8PYnMvWpKsEgiAGLQ4Vl0fKhXR9T+Ezs3ZlMlGbnlpP
7iIsiYwaQjhCogU6resBCx8eHq6PHU51r063Jyq7dqd0vV9a/ZpozQCRBqrL
xHWjIiFQmkZ7GWYtqa6n9LUkWo4aMweyd5Me3dGH18WuLbljU+pdVVpnmNZJ
rm2KvzNB3hzFrruIK73FDwZKf+vOvNWRebM99dfO6KvNR6/dP3z13gHo7fbY
35t3P+2PHxEop52h/4IOT0MuW3GNjF9+f+C1l5ve+c/ut3/b9f4fBj/9y8Sd
d+c7Pw323Y66W3Lu9ry3qzTeX/YP1aaGa9MubNxdBU2OYqBZV23WjW0FuEoB
sYo9x1DW1FPcYJmgxFgit7NZ21or1CKIyyKLssveZ1t1/lhkWS6Xy6mD/MJ4
wNe2uzmWjAWxYlhKZ+VMTgnlRdBhWtpLcOtJcS0hrKbllaS4mRLXk8JGXNpM
yIGIPLNNTmwS/i1qYovybhCeZXxksepaYUaW6b4loncRH1wg+uew/unywHS5
f7La56/0jVd7x6vd3ny3N9ftKfZ4ih3eTKs70eIOg1pdEdDdrt07nTtT+3xe
QYSGyHNyN9ChQaFQeHBr6O3XP//bC71v/WfXW//R9e4L/R+/5rr93nTnZ/uu
eyn3w9x4W9nba0cwtKL9I5jbg4P8o1RDPg85OlwM7SNGtFfqEHR7uPVpkSkw
U7Obc75q/AhJWaQW7YIX8V//nTyV7laO5gIra2Mti0N3p8Y7QsFJIhAQ19ch
RlmQa5nrm8Fb58nmWeLhInVvFu+eI7pm8YE5cnCBGp6neidr3ROZPn+u258E
9XjTfb7s0FTJNVsbmswO+jKu6ezofHFsJgaansnPzhXnp4uBJXx9LhNcKuzN
1w4X8eBKaXO5sB6IgzZXk0uzxyODO23NC63eSl5CZQ1VDMe/5wmKogJLe/fu
dL35YvfrL7S99cLwO390Xfrz4Cevue6+v9BzfW+4KeptzXi68uN9pdEBzDuE
j47Uxt2430OCJj2E342PD5dXZtlY1BLF06yCIeM2t4qLi/HjdQFPIbWEDByZ
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
vGRVtxh+qoIC8OPoiMEJNBjifJQC8YpPwo0oYWI5hyy4wuOc4FOfVN8DbJ+A
SZ/TF7wgDFvO0aazhW77eCf8vFLf0QJND6uDPc5n1Xv3bvbevPbq4eevkr7p
KYgafZy4UJl52FxhGRxWfQEV5jX82VX4B7FoOBciwt+ru53zhtOhfWzAJwF4
3ZLLwTEXHHqMuzYx+EQkL2XaKLNmDr8ggxYesUuQQ0RcgPgqF1QpRGFQlUVU
EVclQpQISaQEIFgCI4K+95fzl6NBDPpGf3lMgwgJADzQXEhhIYWDVPAexM/f
0xa8iuCkOB9wrwqwxhQmsYQksNralveusnlrX9qAiYhSPrPDduzxXkKohcEc
HNiOQikfu/I3ElvCpwH0LKTaVNWtqgElzF9ZYT/a/5IMt7GzW1i1mJg9mJS+
nZK5m5e1UlywPbnIwvTP8xec3em5p6t3Jid/Oep+7/Uvmm5df5maOBsfPR4b
PX739kD07d7MpOm2ku25DtfFVCC4I5E6EEULAvC//vdUuntz0WiaIggOY0SC
FyAuZA1yHlH0KyKsKITyyfoLemy/NWA8Nhm3IPMO2td63v/iouO5/XHhXntz
aKxf6HnlqC7fTbw3GvNdf9yXvfFf9SVe78l9MP4ocbWm4KSznTzYU9ywinKq
djP++bOz3vAIdJhAyzT/y2nF2TQodEDEwhY45FeCPjnglr1OnjRQnj3v4Yzf
dSATRpW2avUoJK9KQTLq430uxu9mMY9C+lUQh9OIyiAqpw3bSiomSwQvk0CF
ZYlR3svKq/b2sf24b//e/2ox/xvni4YRFMWQxID4IaQlgpKwGnkPOMv7RMEP
XnnazQFQThkABYcdCpc7Zn9q3RAXthiAcRIt0ggFPIXfTtgOYccxhlvCKvyR
K3+58LAzvOeidEHVrGoSHMlRZJRPWEEMk8yr3oEHqZPR6dOpaTsAeRkL+ZlL
L7sQhFQJXsNPfByc2uCErrC8Ny5h+auv+z/7W+XXn9elJI8mJgwnxPQ9uNMe
fac/LWGqNmt1otV1POG3r3PQAUPqZTo8YhmZMfzxCXJvPVCAxkiPwy0j2uj9
h3v8994S4LpZDm0HS0e7U17bnvjq5fnzxsO6x7pHWSuvmoKDXfSrZlv5o+3s
uJm0++Px14Zj/tl/6x9tsTf70h9MlaSvtzzzjQ/IJoeKMR8Umfzx2xUvIllY
2swIyoahEJD4ZkW/Xw2FJ4IDToEzs8HDgHkLg84VziwKDkWGFAVWWVKkMB5D
OAAKFWlMJDERR3gKAfe8yCOyliaNSgohi5QkXzniiCnmOP5HX9a/k93vV16w
PMnxBBupxSfCgoSIwORKYcHlgjIZkilYoSGZCkqRunNAfHmfwHo00G6FcsmI
R8H9Kg+poLPiMS1/+98paSSQZknG7/F7rHTAxaN2BrJwjEsJ510o8seMG4MT
gWE4tOMijoNv9BeKrJID9/ZHKwLJ8BPT8w/SRqIzxlJSl5OSl9JTZrLS5htb
fN7gz/AXGECbw9HWuZ9fPPgwbunzL3v+67+qvvqyPv5hf1xMX9z9/od3e+/f
6nt4d7A0YanzsWmh03Q4DZtXg+5dInDK0HZFDoRH3n5ST1mKQWEEfO/hlbwf
lGMGLhFD0TRJa6lcpCTgAnjlMRHx4IZt1/r44cqQ+/Q109Njb2w8eVKlqyw/
6mvHBjqJ1gZjUc5qftLrnPiF9HvzSd9NPfi6O+qL9ujrvWkPJp9VOgY7uM09
NYiqmKDhY6/2H61d8SKcxQG0jGUxbUUwjQIBlbCgiPoFrTqlT4I9SsglSlYB
OYaCZyxtUxUrq7qkt58r9/YGSRLcpQQBswBAnWlYM8Xad02I2oBk2BG/McXf
ryF6h6r/TnyvMq8AIpmfUkhSICU87atGfC4ZlMBOAXBNdsWIBGvBs1cCYLwK
5ZZgt0Zh1h1eIOMLz1z/pJLiOG4ymS5PsYBHq7DKhOtSarz7yLwpcArBYNC/
6UQPAqoj7H/hcPYpx8sfP1PKcdLG+s6D9P7ojIHklOm4+LGE+ImUpJnqp3ar
/WfmPYEB3Dk8qH62kZ0/Gv1w4e//6PiP/676/FpDdFQHwMOogbj7Q8ARf/d1
R1bUXF2urqfucKHXuT9lOVv2mbdhyCCLjvDBUz9TqYP7yBlD7f5Bwc2DaxkF
sCoGRfD98j4ZNhFnK975nv2ZTufmODY4FKhvOC2rPHnWaBnrZ/rakee1Z7np
84VpGwD5KVsZscvx3w1987em6//ddPfrzsePTF3NxOik6vKpsKDho47qD9h+
QA2aoUny+0QINTIQDSQYBMYavCrkkninQJhIQqv7pMhuQUs8YN6Tqa71nwxP
kmCDHABDiDQgGgxcKg/6UlGbsRV4UhRAOK1RWHtq6ZvRae2NVtmDZ7l/zSCz
YZnW0pkETptSDM9MhbNNBCDusCBq2Rph2x5UIvylQ7ImviGJCGiyC8B5ecbN
0i6R8yiUTyE9gLwaGI9COETAaB5E2jCIE1SefH/WFk3TgHceN+VwoE4j5jTR
nF8J13lTPsq3RviL6EKshdKSXgKqhMsyKX9CMWlwnU/Pva86J+NSpuNTZ9IT
p9MSplPjJzKTZopKT/aPNKMH8O/WFyM0Nz6/VPFkJyd/PiFm8Zsvev/x9/pv
rrXdv9UVfafnflR39L3e+PtD0bf70u5NlGZs1Jett9cfj3UczQ9ebk3YDVtk
UKetDXwTG4fXj2iVJH/xwC44LwwhoCDCuMG3xlNOCbVw9kP8dMW9NGTrbdx5
UXs60uHq6nBXle9Vlp42Nzq72qGXLd4npYfpibM5CasFKZtFqTuPkrfSo6ei
vuq490VrzDevKvJP+18Sw+PqzoHqwlSI/9OvUfqBujEMDVxwmBcUIhAwH6Ew
5hcwbSJJ01/GK9Ae/mogF2jWT1cpvNo+iM8xBCcxbU4wXEAe6JkkEHwEUmRo
mhZ5SgIGWWB4gMgMcuT91V85ErwKYeUFG6EBcwEiM7z/Gl72v3HBZEAkNf7y
AKyHJR1azwPuN8Kn4F7gfwF/Jdoj4w4ByDHhEgntBBUOVn8iawt47kuLdWPV
frgXpH2qgqnv7cF+ooFQJxAIUFYSKEvkKQ+ROOQTVgGDTQ1OHOcUvkxKWEtJ
XM+Knc5LmM+Kn8hNmsnIXp1bVEOchn+3ZQ/KNHcPFZXu5+RvpD5Yivpq6Npn
bd9d64r6tvvB7YHbd15F3e3ISJhIjhlJfDCYlTRdmDNX+mipoXr5RePOaNvp
5oT/co1DjKroV7WJIQzcD4rECj8xv/CBDXwWgnCvNwQZSQ0G2X6Ab016ZrrO
u5sunpVulOSvAalta7Q9ylp7XHj2ssH3/Lmjvt5SmL2ZGDMFziU3cassbbcy
8zAveTHu9mDi9Rfx37SV5u4Nd+GDo+rQmHrp0a7Mn90Fv83f7+tSalnQBEwD
kLAangsWACCvFHQBaRZYlOcA+zBBiDzU9cOqBGvyTtFa9XgKkFmrbsFosbo2
YsajkkjKUmRaLjxSLZG8pDGU5zWZBhotfh9vixwpRMasJEzgEVYMAs19M8P7
psp6QOIBf30SG5AZn4Zw2Axsr0g6OBAqUy6FcMt4BC7wo0zYBcol0W6ZdGqv
XEAbuKZQhcYU0GO8UwWRZrlACLJZYZsFdpsxpzHI4pFn5n7oajWGpII+P+fR
1iyIhARAsyDQEEDPRH4kf8FV7Rk/TM1riYlffpiwnB47lhk/kR43npkwmZqx
0vrC64G1WWBakOgfqgyIZXwB//ae99nzydKio/zcnfTYlQc3xr/94tVNoFbf
9cfcGYq603vzZmfsXaC//Q9vdWXEjZfmzT3KmizLG6kume5u2JvptWzNoRd7
nPtMCllU3q/wfpXy8xqCHAPxPBr+NqmwLrPatWNJlqU4kdbmICIPiRfCwQEw
bjRGC+BSICyLigBBJ+0yIeZD3HZCmQ/FvYXgTJ+pu3G3vni9LH06I36sPH+1
tkpXmLP2tPysvcnd1GypqdWXlmwnJown3Z1Mi5krS96oSt95lLaeGj2TfKM/
8Xrvk+Lz0W52ZFwdn1J3TlS9WTV7VIT7c6vw2yE0CBEj7KAx4FspBlLooMT4
RdovIn4R8rypVhd5CuendbDfu2OSIAgSYQBY7TFDamQNr4IKGjAOgEO0G4DD
tNSp73OJNdCoNlWtoJI24fvW9G4ErF8EoF1hq+tRAABzNYR9LiAv7pAiIL8H
EGXwynnUyI/gPymnDHkVxKcNnsv/xtmhKKo7tm+un6EhlWfevzr1vY3G8KDH
G1nTGrn4GAh5tGej8cTH87d9dC82q+F23AJAcuxgGKMpcWNJqct5Bfs2p0rQ
KsNrePuDJMfqLy/6u8+eVMyXF+gKsw4yEtdio2aA1b3x5csHt4ceRo3cvT3y
9Vedt77pBop891pb2oOhivzZnKSBzLi2/JTO5idrfa0nU6Pe5Xl8f5U3HmtL
wgmrGrrkADATS9kE3iMpwfDsAwmiay12oSCaRhjgF4BfBr8BCIdVWhob7sPE
kIo7aRALgaDIf8Hbj7D9FVS3RYPtT/Y7e9pO6iqWihJGsu/3xNx4kRk7VJK/
UZS7Vl991tHqaGo1VD7Zq6zeSUwdibvdH39noCzhdVXKWnHGXk7CWurNyeRv
x+srHWM90vikOj2rzi6oC6/VjWM1+AGzbH/kFrmFIpTUXgkuMqlKwGQk/xCE
o7zvzVj02x/5JXtk3tSh5hjQIeOiVowaY1iU5gFnEV6CBQECIZQoIjKLaQAU
1lgMgIkszAFIEIic/xUza8NTbyAD0G6J8WhiymgOF9AWMBr4XIl0gmhZROwC
6hBRl4w6JWB+AYAQEy4JvAJRJj0KeIN6ZMKnMtrQtMoS4dCdlYS3Ig0QqwB5
s9t8FAH+JEbKcX3I6VMoHnAD/ipXMy/ac4bD1v9jMwrAlRyaO47NrLmb+PpO
wlJi3BhAQuxQYvxIStJKdub2gV5FGRUXNbzZl8C7/L6NQ9fI7GFrk6G8dLu4
4CQvaz87ZTPxwcKd691Af+9813c/aigtafrGNy/ufP3izrUXd75qjLn5Ii91
JOlBR/yDjvTEgfrK3a7my8mRwOw4vDyFHazxLp3s0imXu4TxgHLoeCDKkEUh
XSruEamAyoUkwsNiTh5z8TQwKQEVdbK4m4cdEuKQfGbeeUl5LgXbKW0/Fa0n
nHGPP9+iX09Ai2PBudFQR9NZXcVaQcZodsxI5v2hxLuDmfFTjzJfl+au1VYd
ttRfvGizlhZvFhbtpqQsxH43Gv3tUP7DxYq0rbLsw0ep2/G3p1MfLDY+C44M
KIC/UzMaf+eX1Nebqs6gBnGt7tGfWoWvRncjGgf4S6E0C4sMJIBwFPCC8ImY
539+v9z3mfw4MMcYQUEsADCzjI/jApIEqTSIY1GFR1UADlFYSHO7XECIMPf7
uSGJ9fCUmwPePKK5oAOPWFrwCgAcLqExV5NdzC4EbRzkEEJuOegK/8klom4R
cnDADkdMMex+44VJv0wHtSCER1SWUoT3Of0r98H+6Lnz720EjPucHmDbfzxz
+gltZlUfm17xIGU1KvF1XPwUwMPY/tj4wbT4FSCpcxtqiFHBrgAi/w+E/uBc
/6zjsPz5+pPHlqIifUH+cVbWbm7adsrD13dv9AG1/fZG1507AyUFi7e/bYr6
quHutcbvvnh68/OapJiu+zebom73xMeO15Qev2y0TQyHRvv9472+15OEbk08
3ZA2FqCdFUy3Lej3ZJte9ZlVt1Hw2xTKEZFmCQAxqbhFdR7SHh1n35dch8rl
gXy6zR1u0AfrFFDbzQVy7zUPMNoV6GmxdbeZn5Zv56VNxN5tT747knZ/PO3h
XGbCErD55bmrT8q36h7vd7a5HmWtZKbvpiVvxXw7FfXlSNq9+dKMvYrc45LM
g/tRs+D3TW3E4Ig6NqFOTqsz88rcosZiAIdfW6v1Z1fhK/5erQWmUXCzsSAc
DQ9bgVv6V9w1TQMW08AUa74Y5fAgQfl4JiCE6SPzkDZRS8MKGRR5v8j5Bd4L
AmOZATrrBuSVOU1kgY0VGZcMAJRX87OavdUAFBZ1Kohdxm0SAGwTEYcccilB
LZyWNThFzCEgbgkNm2LNGntk0qsyPoX1K8BBsEGJBVqsre0VJfrdisRvz1z/
bCNgwu/yybCmv78wiw/ssXf6ICbz6f2UtTuJy3FxowCxsWMAaQ83sxJ2xue0
hYQR/kYyfi0eeGhqqapeV1JzUFFhKSy6yC84zszazU7bTY5djbk1feuroZtf
99z5diApZuD65/U3P3969/pzwN8b/6xOjO65d7P11s2u1OS5qqKD1npLZ4et
o936osnc+cIxPYxsvVbW5omVeexghV2dhndXKP2ecH4kGU9V95lqO5bMx6Lh
gLUci8YD9nyL1W/SujWgs7JuV9lfYw/WNeyt8FtL9NGOtDSNvXhuePbk6GnF
QW7afHr8WFL0YF7yYk7ifGbqSnbGRnb2WkXFcU3FfnX5XmPNRVbSfEbyJkDi
vel71wfjb43kJb4uTN3OS1hPjFkvzr9o62QGxoD5lSdnlKlZaXpOnpqVx6cE
vUHF/+QZHVf85bXHBDNhCrMMxgF/CtSHCkiMT6S9v27C6NUxADmGIAjz0AAR
JeX8KhfO6QIx/JvxqLBLjThW8ObKvV79BgTMV/8AAIH+36ZgFgm3KpHSkUGn
Btyhgh8jFhhxagBvwGdRrwoQUfPIqLtWtc+tGYrwWqFPfNoCF87g9bv82swm
qX6C5327AdFv7N+8n9V4N3ntVsJyXGy/hoczsdHTaQ92s+OO+odVjFRDooZI
X7F95Kyq6yksPQcoLjEXFBryCo4zsnYz0/YT49YTotZufTF56/O+O1/2f/t5
0+d/q7n296q7NzT+Xv/scfyD3rs3X3z7TUd25kppwU5TrbGu8fTZc31F5Ul5
+XHzc8fcjLo8x85OYFtz1HC7ZXLQvzJLba/J+5vq6Y6q21YPtvnNFWJvnVlb
QHaW+dVZYn2O3nkt7m8p60sMUN6DNQH8fvs1e6pTR4a9VZXbBQVLOalL0XcG
E+6NpMdNl+fvFGatZedu5+bvZRQfVDRYn1YcVxbvVjzaTY6eAFFHVtJ6WsLM
/Vt99693pkaPZT1cBkKclXhUV+l71c/3T6gT0+LkjARoG8HgCLW1q40S/Gyu
2h+5/Yu/jJZLeSXBV3UpI+NCv8FhXA1wUSgLeg/Ux0BuEvOKAKhfhj1AZGXK
CRiqEnYFtynglXQqpEPFbDIAalEQi4ybFcqqgt8TDsBWCbGIsFWFzApq4lAT
D5tkxKyEwG9sKmxRIBP4lAxYDFtkyAw+K5JWGbGrqEMbkwGBX9gjC5RDpLSZ
YuCvJTYkcpDMIAJPSB9VfUIbrQriiB9VCC2HnxK1Cl4c+4nlnwF/O8d34nPr
76Zt3EpajUueS0pfysxczc7eKMw7KSs67+/HzSb1wiYfXlB7h6H1LXfPiL20
ejm35Cy3WF9YYsgt0OcX7OXkbqdlHcUnbz2MWbt9a/a76yPfXhv88qv2zz5r
/vwfdTe/bfv28waAmKjem9dab3z9MiVh6lHWWsWjvaqK7bqnh8XF68XFG6Xl
e60v7C/aHS86HIO9npbn5+1tliEQWs/RK/PM3pqwucQszkDzU8HFSXh+PDTZ
HxjqcM2MYMvT3PB4aGaBmhrHJsex2VHi9TS3ssh0t9vLK3bTM2ZTYqce3B6I
ixrJT1utyDsoz9svqzwprTiprNY9rjktK9l7lL9ZVriXEDOZHD2bEb+UGj8Z
daPz9pctSfcH0mNnU2Omi7L1z2v8nT18/5AyOgE0V3sdnZTHJuXhMWHltWoH
NwOpVY0OT3/9+VzwD/KcmDfZTZG6lExIokMS6xMBfuND0qZK/ajbHYxkVkMu
KeQUgHRqAmoDrypi0ephAg1FLApslgGCBjVwqSDnKmHQfg8QNIqBSwE2KpBB
hi9JgIgLCxnBR8A/SwHtvarhQgmey0i4BDH4f2DTADCziphFAMzCAQB1xq08
bmPJsHHmg6pE/XwNiqsGri7iQymIlmhZCa9FBWEO6DA/7cqC6zMyt59WUHc3
Y+tWylpc5k7ao5Oi0v2KKl31s4u6JnN/l3N7TV1dE0bG/C9emmueHpZUWx5V
XmYUnaYX6gqKzzNzjwryNwGS804epu/eT1y983Dx5p2pL78Z+vvXff/5Zdff
/9l07XrHtX+03Pjy5b2bvV991nTjq5aHd/uykxeyEueLchY0Z5o3XVAwl5Qx
mV+ykluxV/xUV1N/Xv7kqPqJ7nmDcWoEBlhdpGcnoIFu20i/c6jLNdbne1Fn
eP74tL8zNDVM17RdDszibR2+5leenpfgN/xwD9RSbywu24tNmHgYNQT0NObW
SFnePvCzTx6dPWs01jy7aHt+XlOxnVuwmZ61Uly4HxszmRA1mhYznRw7+t3X
bd9+Vhsf1ZUSNwbwuMTQWu/v6eD7e+TBUXVkQpsCHh5XR8OYn1APt1QvpLlg
StDwSd/G79neSVP8PkdCy06MjBeBGJL5lePn9x4VjlMoSmAIC4CG2KCXCNi4
gJULAQE1K0GTGjJrLA4ZVP+FqBVX12tATwXiTMAMPEDwnA2eMdA5FdQTmB4D
AG8AAmd08JzR/v+UD+jFMLT3kF4DfM4iFxxk4EKXLGxgAEgDTRkZ2sKTJhax
8JhNxO0y5dImPcWQymOSFNZiDQwn0Mx761EDxoU8IRbnZFartkHTNIphPAp+
lD5k/pgTtMQWhpFwjA8GBYsVGZ40VD6dLq7UF5SelJYbKqrMFVXnlY8vH9dc
VNcZW5ssg72hvt7AixfWxtrzJ+UHJeXGotKLnLyT3DxdYcFpXs5xTtZaXu5G
eu5xStZBXPrWg6S1uw/mv/525Muv+r/4oveLL19+/U3X1581XP9H493rHTe+
aLnzZV3sd61pCeOZSZOpycOF+QuJ6dMpWfPRKdP3kyZTspfzSnaLivdy8kAM
sFVZetjeYnvVZOnvsna/MjbWHjbWHjTUHNZV7ZXlb5bmrjfWWbpeBhoarc2t
zmdPLqsrTqvLLjpbQt2dfkD/zLSFlMTp9ISZxJix5JixikfblUUnTysunteb
a2vOm6r1NaV7j8sOK4r3SrNX71/viL81lB03lxI3efdm983Pm+Ki+uJjJtOS
Fp9Uudpa8N4efmBAHhlVx8bVsRF1YuwNf8eG5clxZmNHODlTg5SK/TnHon+Q
e0wBF/pmdQALyUB/qYBIBX63BZORoyIIIhAIOCyY00p4DZKGSxUgeKn6zlSX
jnMcM/5DKnBEY0cUfkyjJyRA8IQII+A/8pHHMHEEBY79AL5jCCBwxPoPGW8Y
vmMaIHDC+Y5YSIfCp1jgHPfqUegMB2DOcPaCZC4Z+oIOmQQYKLIZaLTMmBXO
pvI+rXwQ0GKZVmWSEXDyvfWogbX3OX2R8pgAJIpB/oAYFFXqg/KfGUEkOZ4k
VL+XN5rEtQ3P0Ij3Zbuho9Xx8rn1ZaO/td5b/dRe9cQSZvFF9fd4XKmvKTqu
KtgvKTwHyM84LMw6Kco+BkhPfZ2TtZ6dcwSQnLMfl74dE7t8/cbYt58DC9z/
9dfdGv675tp/Vd/5qjXqWtv9zytjv65JfNibnjR878GrlLTh2/FT91Pmv4uf
+e8bPdGxE0AN01KWE+Lm0uLnc9NWn5QdVxbt1z7eqnuyXZS7mJc5k581mxo/
DCiZEjdRXHhY99Tc8tRVUaCryNwuTFpJi197Wm5pe+UuLNmJjRrISpp9lLWS
lTyXlTJRWbxeVXHyrNbQWmd5Vnn2rERXU3jY8uQMoDxl+vZ/1sR921+QsJga
Nxt9Z/i7L1/GRg09uDeTkbZVXQu1vRL6BvjBYWkcMHdUnRpSZ0be8Le3T2hu
hTu6aPDeBofzsj64bskfp/0ggqaoKxccyYWOPGP09z28SE0qOETBIRry8D47
5TbyjgvWrVfsJ5J1n7buU+49AiAAsE/4DzR49zH/IR44grwHgdBBMLgfCOyH
ggeQ7zDkPQz6DwnfAe7aR1wHqOdQQ/CACgAAmh9B/uNg4CSEHSPECUbqUADi
lMZ1FHRKwKcErmfxM469lDijLFgFxSnxAZHXHi7DSCFWxuXw6uAfPFleK3kV
QLR8JF4UOAH1QognJHtlFVcVTpRZAcF5X5B0uQWDETs8xo515PExfXCAA+zs
IDu7FMD2OrG6iExNoz19zsY229MGQ32d69lTR0Otq/aJvbzSXlZpL666KHl8
WVF1WVF58bjs4nH5xZOi07Lcg+L8o/IiXX7OUW7WQWHWaVGWPjttPTdzKz/7
BCA95zA5Yzcmaf1O9MKtG2PXgQv+ouOLz199/renf/9fVdf/UX3/RnPyreqU
2zVJ91pTo1/G3u9IetgT/XAs+uHorQejn1/vvHNr4GH0ZMLDsdgHw3F3B9Lj
J/MzX2vsS57MTpnKiJ9K18p6jCVGD8ffH0mOnSgu2H1WY6guOU2LX8hJWE2L
WQjz11z7+CwrZTE5ZiY/Y728YLu8YKc8d6uu7OR59eXLRltH7UXfc8t0l3u4
1TzRetpTs1US3Rv9n1WZ9yZKklfSYhdioyairg/E3ZtMiV8tLzpvfIZ1tktD
/dLYsDI2ooyNKlNDyuSgNDGqAPR2Mi9bkZ4uemRQXN7hD4AWBNQQrtJcpIb2
n6MO/A8W+4QLQzMExxAsjYgMKlGIRuHf+xj/NcCF47TfBzlNpPkMsRxLhn3O
sImbtgjbFgrgiGAb07AFe3Yx3wHi2g05d7wAgW04tIt69wOePb93H/bsQbZd
r33P59r3AwR3sNAuHvmrb8cZOvBSu0H2AMEOIfQgBB+S0AEB7wYA8H2MPCRY
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
8ze3eNpf+tta3M2tofZOor2H6uilB7vokR5urF8AfhkI92gftjjNbS6rO+uS
8UwNuVQGvtLl380vv8vft+piRZ5O8rsc1U83zUVilNcbRJ0c6ZU4p8Q4AEMl
AM7N8W5ecksAikfgHbTo5hSvoPgAPTnZxUiAxU5GclCym5VdrOLiFHeYs15J
8Yqim1d8YfIiigrLEibLhCIRvIhzIilo5TRZ8aPqKNI0rVXbBsyl6UtTcO/Q
MjBpr23eKq+6LCw5KSq5rH7qbmpFnrfAz5qhuuZQTQNS+xxreB5qfA7i50Bd
g6++3veszlNX52l8HnjW4K2pdVY8tZdVW4seWwsfW0qeWEqrrcWPzQXllzkl
FxmP9BkF++n5e/mFpyXlhsdl5vLCy9w8U2LSUUbCVlH2aX7BcV7eUVrefnL2
blr6QWr6QXLKZlr6dlrmbmrGDvgxIXn7YezGg+jVm/emv/x2+B/fNMaljTcX
zXQ9WZuvWV5u2NxrXT/rPdzt217vWJ1rXZ1qXBpuXhhtW+pvWOpvXBp6tj7c
sDnUsDpYvzLRtD/dejTVtjvVujPbtbsypNucMJ8s+y5XPYY17+WCw7TkNq46
zeuesxX73vSFbtZhXAmYdbTjQkCDEoNL2sIW4s1683CnjYcsPvOR4ahvvyu/
vTJh+knKXDYIxe/OPryzkBS9mpWhq37srW0KNrcT3b1cTx/f3Uf39DODg9zg
ANvVT7d3400N7qdPTM21wd6XLOBvUxtS3+x71uxtafE3NXkbm/zPmwP1bTDA
izaks53o6qJ7etneHrinKzQ0gEyMk7Pj7NqisLtKHu9Qx0e07pg+P2VNl9Kl
gTYYGYdDCgQkmpR4VvptnoT4zigWuOXePB0M5yiE/rX3/gkNHCSKkAE/jHk4
Ogg4KwKES1soXIBh/bToESSvqHh5TWG9gJKapCoeEahwBEB8VQ+vwafJtKDR
VgLQ3oQrQ2qVJbQiA1oteoEJl9v9Oal9bwPmlwqnWpEYPr1oautaf9ZoqarW
V5QaigpO8x+dPalxPW+FgbZWNweetoFXpKYFrW/0NzVDAODNswZP7TNXXY2z
4Zm35ZkPCEf1UydAfrU9u8r86LGlsNoKXvMqDJmlxtTC86T8k4eZe5k5F4+K
baVFJoD8Amti0nHc3bVHGefZuQcAGTkgYN5Jz9BnZp0nJm8kpWxlZO2mZ+5E
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
Ir201F8EIextex11k7Gsw7KEseFwdryettlEYkgC0cRxNGPQ5fT6JI4nCF1K
jyYtuoxZlzYRWaupYDHmrea8iUhZjBm3qeQykjZD3oSlDdoEpowQspBZEbUi
KQeW9dlrKz5qZblza4VaXaJXFjq3AvVPbtNrj+nDnW5ovxs7PW9URn3qV9HF
34nfi+7AzELo5hvVl/i/stfSfjDIV7+t6TGppVkr9euVwWQtaLM46FTOW7Vx
owrbEdUct1ujTue82xkNui9/hrz9N1br9R5tbhpte6hhixn2AUhSA3eLOqqW
HEuFMTE/whdEDETD7mhbbU2jNUtYMjpnFeJX7ywT7qrNXCT0GR2WMxKk3gCx
XMSNZcxAAgsDEDytQmA0yAAU6pxUmQHBK5TEBeIYiN951jGPH56AzT/iCI4F
/N3rU0/++8+LVz74jMtel4h2xEKmcdIMK3hzfvvGzeDVa+t//3D96uweT7Av
EB2K1XEAT5FkSWIWU/Lune7ep9njL0rFZ2e1rURvJzo+zY3D7XGEGifocXpw
TjIdnUat4cvO+aD7C2L1e9abtMMotRv5evTzw7vaRZT1qeLG7atX1uZmd0Sy
U3CFmcg5bGWno+n3dZ3uusNV8wRokLfLC/RSgHI6q0Yih6AVHK/bbOc+39gX
oIGIldooAIgb1eUma8gRIHEsZ8bSRjSpJ5IGYwq2uCEO32J4GhjZiucNWiaJ
Ypa3iU8RwQEmOjYqYnYt8y0wtd9fX5g8UPbWbgWqE6wu1O4t15/cGxYS437z
7evi1wKh32TaZPfafbr5O82fX7Nvfz9o929relCtQbvRbzV6zUa33Ri26kyB
3E5j1LoA1RrRnXOKGtL0sAc69+1pE6o/iCZTX2/mFleDejyEoceoNoIhUUwd
wzRxgFoekgmPJfxDifDUaqy47HWnrW62FYyWnN5WMjqrFlvJbCUtJtJoyINA
JoiS3lAgiKIBJ/W6Io6lASiW0SApvTaHa7JadUatTKkVSbk0xoMUWhhmCU45
ojBXdMwVnXCEu1zRHle0PzXz7B//+OLvf//8/Q8+m51bE3C2hJxtHveFgLcL
7Dw1u/XPG0/fm/56Zn6bLzqUquNybVKkSfHkMR0adbvKT1bJ/UdUcYOsBqvD
/dz4rDqO0eNkf5zvj0ujc6bXxssB0/x3OOj91LLWP2rMPdmBy9emch0yVHji
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
      "], {{0, 240}, {320, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "AbsoluteTime" -> 3.7232689209240528`17.323499394343038*^9, "Device" -> 
        "Integrated Webcam", "GeoLocation" -> {28.37, 75.60000000000001}]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{320, 240},
    PlotRange->{{0, 320}, {0, 240}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232491574510508`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", " ", "+", " ", "1"}]], "Input",
 CellChangeTimes->{{3.723249164183588*^9, 3.723249170560115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"1", "+", "cat"}], ",", 
   RowBox[{"1", "+", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzsvVd/I9e57rln5mYu5yvMt5jLOZdze+Y3F3PmbJ+9ve1t2ZZkK1hWsGRJ
VncrdaszOzDnCIAECTBnMIGZRM4ZqJxz1Zq3gO6WrNiSuplU/9/jchFEgwWI
D5/1rlrhf//1n/7rf/7P//Iv//La/wqH//rvf/0vr77672/93/8bfPH/vPza
73/38m9/83+9/Ppvf/fbV/+PX/8v8CAD//s//6d/+Rf7XL3QyLKsKMppX4WD
g8NPwfGvg8P5xTGvg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4PDT8C5yeLgcE7h
GYEiGJnSDMnQVR102lfk4ODwtBAVupipCHkdcchUTNBpX5GDg8PTguXpUgoT
EpJeVCzWsiTLSWEHh/NCJUmVE6RwzEghFmEW4p0UdnA4N2BRDgTmVSO8VtAs
3I5g0Glfl4ODww9DHknUsSyHWD0qiknJKJgQwUhAp31dDg4OPwxzJLDHghzm
tKgoxyUtpZpVFdHIkA3QaV+dg4PD98EfsSA5witRQYlKcljUkzzCEBJtnfbV
OTg4fB/CISuFeAn8GxOlGC9GOSPBW3nVIgxoSDt90Q4OZxnhgFHDohjh5bjI
x2mQEedsFVTEOn3RDg5nGu6YFiMcH+UECN84I8RoLc7rCd7ISqiqWaJlyU5f
tIPDGYUOU0yEZqMMSI6zYpSS47yaEKAKttIiRLBTBTs4nFm4MA1iozwb5cC/
cpxREoKWFPWkZKRkvaojyumLdnA4owhhmg9RbFRk7BKYVROcWvevllRBclpC
ZQsJlpPCDg5nECnMiCFGija6sBgtyctJXkkJSkoCSSlRy6kWpiEOGYoGOu3r
dXBw+BI5xIK0iKCGeSlG6ylBTHJSim9ITMKXgpEREY2QrINO+3odHBy+RDqm
5BCtRTjNvgXMgH/VJLSfBS0l2a3oFK+lBC0rGFUVMToSTTCw42EHhzOCeITL
IVINM1qUU2OsnuTNhAiykoqZkK0Uh9K8krWFqnp9dpJqOst1ODicDaRjToaW
c5RR4pySZJUkp6UULSnrKVVLKpDCelpWsgpIL+gmhizRsCSnL9rB4Qc4mWWp
pJAih1U+Tttlb5oVk4yc1qSU2jg2TpSMAYITPWchzpmd5ODwA4B5G3tvPW8X
yyFJjShijJMSgpQS61LktCplVDGlgOBEyehgXi0lmzmIYA0xyFB00HO9MAeH
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
ZSWohXW7mDUV8KKs/BOSrIiSJmqNF9Hr+fs1C6vwat/mYMjfe+1Dn93b//jO
zu3r0VtfhJtv7Xc9iHQ8TPS0pSZc9JxPHndhPjc+7WW8w7Xutmjb/cPe9kx/
Z250sLIdkAs5JAlI0AzBqYIdLiIQoE9itFHPNmrVhiRBlkWlcS6LEkiFClf+
0n2CICiMoLJiI1uf5OnXHNqoi7/2rS/9W3/Nb14b1L/3Ovo/bdoD/969HgXd
u7XX2RzraQ/3d0U9/eW5Cc7vJkFwMuNlejsjD+8GWx6mO9pyQ715/yi1s414
DgmqrZP/bB0cnjeaXZwqjfFRBlS7UOGClex4hcpUlSU7T+1hvrJa73iyu5++
uomp3RMlSKoo10NZ/6ZDH211Wn/N78L+7rc1oXFOnFtdv9Uc/Oz2ys3rCdD9
W8etTbGe5sRAe3qkrzDtpSbH6YlRcnKc8Hvx0eFST3vs1s1wU1O842F6sKsy
7xcrWbsjmlOdKtjhIlLvK9YFxRDVr2Zoo4X8rXH5rR78ajH7/Xz/c756aZKm
5sulh+1r125NXbueAj24GQX1NGUGm4uDPRmfB5uaZL1jxNhYGTTj49wD5U8+
2bl67fDuF/HmO1lXJx7fRVDHM4pTBTtcQBp9xarUCFxdf5yhal3fz6NX+Bl8
85//07VpKsXQge1M1+Dc1TvHn9zYv38z+eBmqqMp1f0gN9CdmXBjkxPkqKvi
GSmNusqTY+TkKHnv9tH1z7fvfBG6dzPa/7Cw4uPCEYNhnSrY4QLypK/4iYOe
JkOfuX+/mt1fu0JKUSaXlj67v/XRzZV7N7IPbuab7yZa76X7OzNeF+Yfq7kH
ciP9RUjeiZHq4iTf2xq7+Wng9rU9UMftxFBLac6vMBgSFFsn/fk6ODxPfo5P
n/6lvvndxiPf+g+/9rKCqsZSKe9C6nrLzI3bUdDDO1DeZvvbE96h8oSn6hks
jAyXPW5syoMvTfLewdKtTwM3P90CPbh+0HU/PjqEHe6INItEGSmarjzneQ0O
DifG6fr3W7/1zVcG4kWmuW+s0Rf94FasqyXf1xIe68+NjVQ8g6VhT3V0gpzz
Ukt+fmGCufXJ6vXLtm5+vvbg9m53W2LcjWMYkiQkaab0/Oc1ODicDE9p3p/5
4t/zyPc//wkYLW7sHDX37Vx/sNh0K976MNfbmnb1lsZGcO8I4fLUxifo+XFm
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
j/BrIW7lmF/Yp+cO6Jk9YmoHhPt2MW+wMr5V825Wx7Yqvh18aquyeECWeJPQ
zHN9T/+XBrSmNtZDb/710isv9r74u463/qPj7d90Xv6zp+mDpc4rO547ieGW
rKej6O7Oj/YVJwYqU8PYnMvWpKsEgiAGLQ4Vl0fKhXR9T+Ezs3ZlMlGbnlpP
7iIsiYwaQjhCogU6resBCx8eHq6PHU51r063Jyq7dqd0vV9a/ZpozQCRBqrL
xHWjIiFQmkZ7GWYtqa6n9LUkWo4aMweyd5Me3dGH18WuLbljU+pdVVpnmNZJ
rm2KvzNB3hzFrruIK73FDwZKf+vOvNWRebM99dfO6KvNR6/dP3z13gHo7fbY
35t3P+2PHxEop52h/4IOT0MuW3GNjF9+f+C1l5ve+c/ut3/b9f4fBj/9y8Sd
d+c7Pw323Y66W3Lu9ry3qzTeX/YP1aaGa9MubNxdBU2OYqBZV23WjW0FuEoB
sYo9x1DW1FPcYJmgxFgit7NZ21or1CKIyyKLssveZ1t1/lhkWS6Xy6mD/MJ4
wNe2uzmWjAWxYlhKZ+VMTgnlRdBhWtpLcOtJcS0hrKbllaS4mRLXk8JGXNpM
yIGIPLNNTmwS/i1qYovybhCeZXxksepaYUaW6b4loncRH1wg+uew/unywHS5
f7La56/0jVd7x6vd3ny3N9ftKfZ4ih3eTKs70eIOg1pdEdDdrt07nTtT+3xe
QYSGyHNyN9ChQaFQeHBr6O3XP//bC71v/WfXW//R9e4L/R+/5rr93nTnZ/uu
eyn3w9x4W9nba0cwtKL9I5jbg4P8o1RDPg85OlwM7SNGtFfqEHR7uPVpkSkw
U7Obc75q/AhJWaQW7YIX8V//nTyV7laO5gIra2Mti0N3p8Y7QsFJIhAQ19ch
RlmQa5nrm8Fb58nmWeLhInVvFu+eI7pm8YE5cnCBGp6neidr3ROZPn+u258E
9XjTfb7s0FTJNVsbmswO+jKu6ezofHFsJgaansnPzhXnp4uBJXx9LhNcKuzN
1w4X8eBKaXO5sB6IgzZXk0uzxyODO23NC63eSl5CZQ1VDMe/5wmKogJLe/fu
dL35YvfrL7S99cLwO390Xfrz4Cevue6+v9BzfW+4KeptzXi68uN9pdEBzDuE
j47Uxt2430OCJj2E342PD5dXZtlY1BLF06yCIeM2t4qLi/HjdQFPIbWEDByZ
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
vGRVtxh+qoIC8OPoiMEJNBjifJQC8YpPwo0oYWI5hyy4wuOc4FOfVN8DbJ+A
SZ/TF7wgDFvO0aazhW77eCf8vFLf0QJND6uDPc5n1Xv3bvbevPbq4eevkr7p
KYgafZy4UJl52FxhGRxWfQEV5jX82VX4B7FoOBciwt+ru53zhtOhfWzAJwF4
3ZLLwTEXHHqMuzYx+EQkL2XaKLNmDr8ggxYesUuQQ0RcgPgqF1QpRGFQlUVU
EVclQpQISaQEIFgCI4K+95fzl6NBDPpGf3lMgwgJADzQXEhhIYWDVPAexM/f
0xa8iuCkOB9wrwqwxhQmsYQksNralveusnlrX9qAiYhSPrPDduzxXkKohcEc
HNiOQikfu/I3ElvCpwH0LKTaVNWtqgElzF9ZYT/a/5IMt7GzW1i1mJg9mJS+
nZK5m5e1UlywPbnIwvTP8xec3em5p6t3Jid/Oep+7/Uvmm5df5maOBsfPR4b
PX739kD07d7MpOm2ku25DtfFVCC4I5E6EEULAvC//vdUuntz0WiaIggOY0SC
FyAuZA1yHlH0KyKsKITyyfoLemy/NWA8Nhm3IPMO2td63v/iouO5/XHhXntz
aKxf6HnlqC7fTbw3GvNdf9yXvfFf9SVe78l9MP4ocbWm4KSznTzYU9ywinKq
djP++bOz3vAIdJhAyzT/y2nF2TQodEDEwhY45FeCPjnglr1OnjRQnj3v4Yzf
dSATRpW2avUoJK9KQTLq430uxu9mMY9C+lUQh9OIyiAqpw3bSiomSwQvk0CF
ZYlR3svKq/b2sf24b//e/2ox/xvni4YRFMWQxID4IaQlgpKwGnkPOMv7RMEP
XnnazQFQThkABYcdCpc7Zn9q3RAXthiAcRIt0ggFPIXfTtgOYccxhlvCKvyR
K3+58LAzvOeidEHVrGoSHMlRZJRPWEEMk8yr3oEHqZPR6dOpaTsAeRkL+ZlL
L7sQhFQJXsNPfByc2uCErrC8Ny5h+auv+z/7W+XXn9elJI8mJgwnxPQ9uNMe
fac/LWGqNmt1otV1POG3r3PQAUPqZTo8YhmZMfzxCXJvPVCAxkiPwy0j2uj9
h3v8994S4LpZDm0HS0e7U17bnvjq5fnzxsO6x7pHWSuvmoKDXfSrZlv5o+3s
uJm0++Px14Zj/tl/6x9tsTf70h9MlaSvtzzzjQ/IJoeKMR8Umfzx2xUvIllY
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
CRiqEnYFtynglXQqpEPFbDIAalEQi4ybFcqqgt8TDsBWCbGIsFWFzApq4lAT
D5tkxKyEwG9sKmxRIBP4lAxYDFtkyAw+K5JWGbGrqEMbkwGBX9gjC5RDpLSZ
YuCvJTYkcpDMIAJPSB9VfUIbrQriiB9VCC2HnxK1Cl4c+4nlnwF/O8d34nPr
76Zt3EpajUueS0pfysxczc7eKMw7KSs67+/HzSb1wiYfXlB7h6H1LXfPiL20
ejm35Cy3WF9YYsgt0OcX7OXkbqdlHcUnbz2MWbt9a/a76yPfXhv88qv2zz5r
/vwfdTe/bfv28waAmKjem9dab3z9MiVh6lHWWsWjvaqK7bqnh8XF68XFG6Xl
e60v7C/aHS86HIO9npbn5+1tliEQWs/RK/PM3pqwucQszkDzU8HFSXh+PDTZ
HxjqcM2MYMvT3PB4aGaBmhrHJsex2VHi9TS3ssh0t9vLK3bTM2ZTYqce3B6I
ixrJT1utyDsoz9svqzwprTiprNY9rjktK9l7lL9ZVriXEDOZHD2bEb+UGj8Z
daPz9pctSfcH0mNnU2Omi7L1z2v8nT18/5AyOgE0V3sdnZTHJuXhMWHltWoH
NwOpVY0OT3/9+VzwD/KcmDfZTZG6lExIokMS6xMBfuND0qZK/ajbHYxkVkMu
KeQUgHRqAmoDrypi0ephAg1FLApslgGCBjVwqSDnKmHQfg8QNIqBSwE2KpBB
hi9JgIgLCxnBR8A/SwHtvarhQgmey0i4BDH4f2DTADCziphFAMzCAQB1xq08
bmPJsHHmg6pE/XwNiqsGri7iQymIlmhZCa9FBWEO6DA/7cqC6zMyt59WUHc3
Y+tWylpc5k7ao5Oi0v2KKl31s4u6JnN/l3N7TV1dE0bG/C9emmueHpZUWx5V
XmYUnaYX6gqKzzNzjwryNwGS804epu/eT1y983Dx5p2pL78Z+vvXff/5Zdff
/9l07XrHtX+03Pjy5b2bvV991nTjq5aHd/uykxeyEueLchY0Z5o3XVAwl5Qx
mV+ykluxV/xUV1N/Xv7kqPqJ7nmDcWoEBlhdpGcnoIFu20i/c6jLNdbne1Fn
eP74tL8zNDVM17RdDszibR2+5leenpfgN/xwD9RSbywu24tNmHgYNQT0NObW
SFnePvCzTx6dPWs01jy7aHt+XlOxnVuwmZ61Uly4HxszmRA1mhYznRw7+t3X
bd9+Vhsf1ZUSNwbwuMTQWu/v6eD7e+TBUXVkQpsCHh5XR8OYn1APt1QvpLlg
StDwSd/G79neSVP8PkdCy06MjBeBGJL5lePn9x4VjlMoSmAIC4CG2KCXCNi4
gJULAQE1K0GTGjJrLA4ZVP+FqBVX12tATwXiTMAMPEDwnA2eMdA5FdQTmB4D
AG8AAmd08JzR/v+UD+jFMLT3kF4DfM4iFxxk4EKXLGxgAEgDTRkZ2sKTJhax
8JhNxO0y5dImPcWQymOSFNZiDQwn0Mx761EDxoU8IRbnZFartkHTNIphPAp+
lD5k/pgTtMQWhpFwjA8GBYsVGZ40VD6dLq7UF5SelJYbKqrMFVXnlY8vH9dc
VNcZW5ssg72hvt7AixfWxtrzJ+UHJeXGotKLnLyT3DxdYcFpXs5xTtZaXu5G
eu5xStZBXPrWg6S1uw/mv/525Muv+r/4oveLL19+/U3X1581XP9H493rHTe+
aLnzZV3sd61pCeOZSZOpycOF+QuJ6dMpWfPRKdP3kyZTspfzSnaLivdy8kAM
sFVZetjeYnvVZOnvsna/MjbWHjbWHjTUHNZV7ZXlb5bmrjfWWbpeBhoarc2t
zmdPLqsrTqvLLjpbQt2dfkD/zLSFlMTp9ISZxJix5JixikfblUUnTysunteb
a2vOm6r1NaV7j8sOK4r3SrNX71/viL81lB03lxI3efdm983Pm+Ki+uJjJtOS
Fp9Uudpa8N4efmBAHhlVx8bVsRF1YuwNf8eG5clxZmNHODlTg5SK/TnHon+Q
e0wBF/pmdQALyUB/qYBIBX63BZORoyIIIhAIOCyY00p4DZKGSxUgeKn6zlSX
jnMcM/5DKnBEY0cUfkyjJyRA8IQII+A/8pHHMHEEBY79AL5jCCBwxPoPGW8Y
vmMaIHDC+Y5YSIfCp1jgHPfqUegMB2DOcPaCZC4Z+oIOmQQYKLIZaLTMmBXO
pvI+rXwQ0GKZVmWSEXDyvfWogbX3OX2R8pgAJIpB/oAYFFXqg/KfGUEkOZ4k
VL+XN5rEtQ3P0Ij3Zbuho9Xx8rn1ZaO/td5b/dRe9cQSZvFF9fd4XKmvKTqu
KtgvKTwHyM84LMw6Kco+BkhPfZ2TtZ6dcwSQnLMfl74dE7t8/cbYt58DC9z/
9dfdGv675tp/Vd/5qjXqWtv9zytjv65JfNibnjR878GrlLTh2/FT91Pmv4uf
+e8bPdGxE0AN01KWE+Lm0uLnc9NWn5QdVxbt1z7eqnuyXZS7mJc5k581mxo/
DCiZEjdRXHhY99Tc8tRVUaCryNwuTFpJi197Wm5pe+UuLNmJjRrISpp9lLWS
lTyXlTJRWbxeVXHyrNbQWmd5Vnn2rERXU3jY8uQMoDxl+vZ/1sR921+QsJga
Nxt9Z/i7L1/GRg09uDeTkbZVXQu1vRL6BvjBYWkcMHdUnRpSZ0be8Le3T2hu
hTu6aPDeBofzsj64bskfp/0ggqaoKxccyYWOPGP09z28SE0qOETBIRry8D47
5TbyjgvWrVfsJ5J1n7buU+49AiAAsE/4DzR49zH/IR44grwHgdBBMLgfCOyH
ggeQ7zDkPQz6DwnfAe7aR1wHqOdQQ/CACgAAmh9B/uNg4CSEHSPECUbqUADi
lMZ1FHRKwKcErmfxM469lDijLFgFxSnxAZHXHi7DSCFWxuXw6uAfPFleK3kV
QLR8JF4UOAH1QognJHtlFVcVTpRZAcF5X5B0uQWDETs8xo515PExfXCAA+zs
IDu7FMD2OrG6iExNoz19zsY229MGQ32d69lTR0Otq/aJvbzSXlZpL666KHl8
WVF1WVF58bjs4nH5xZOi07Lcg+L8o/IiXX7OUW7WQWHWaVGWPjttPTdzKz/7
BCA95zA5Yzcmaf1O9MKtG2PXgQv+ouOLz199/renf/9fVdf/UX3/RnPyreqU
2zVJ91pTo1/G3u9IetgT/XAs+uHorQejn1/vvHNr4GH0ZMLDsdgHw3F3B9Lj
J/MzX2vsS57MTpnKiJ9K18p6jCVGD8ffH0mOnSgu2H1WY6guOU2LX8hJWE2L
WQjz11z7+CwrZTE5ZiY/Y728YLu8YKc8d6uu7OR59eXLRltH7UXfc8t0l3u4
1TzRetpTs1US3Rv9n1WZ9yZKklfSYhdioyairg/E3ZtMiV8tLzpvfIZ1tktD
/dLYsDI2ooyNKlNDyuSgNDGqAPR2Mi9bkZ4uemRQXN7hD4AWBNQQrtJcpIb2
n6MO/A8W+4QLQzMExxAsjYgMKlGIRuHf+xj/NcCF47TfBzlNpPkMsRxLhn3O
sImbtgjbFgrgiGAb07AFe3Yx3wHi2g05d7wAgW04tIt69wOePb93H/bsQbZd
r33P59r3AwR3sNAuHvmrb8cZOvBSu0H2AMEOIfQgBB+S0AEB7wYA8H2MPCRY
vQAgnNGKgWMsLGWiOTutFaIMl3N/58nyJEkyKB2ps6GVL7b4MEe4Cgeigl9K
tOj082cmaP9ImJn3tnf5uvuh7m7sxQsQAAcaG53NjVBbM9ryzNNU66p+6qys
sgIzC1BW7gaoqrKWlRoeFduKSp35lZcFVYbiisui8ovKwgtgACuLzgqzDopy
tiqLDvMKjtMzdx5lnBdmXuSl7wAALgMACU7P3ItJ24pO3bh7f+abb4f++dmL
v/9X83//v0//1/9R/s+/FcTcacyLq82Ork7+7qmGe13xt14mPhiMud1961bv
11+/+vaLju+u9Ty40w4Qdb0l4X5PQvTQA/DXr17dvtYRe3M4/rsRbU1i1BBA
YsxEcd7msyfnj7LWbl/virs7H317GvC3psxUmrGReHskI3GtOPeouuSo8clF
Y4mhpdLa+cw60OLpqzlZ6vJcrNF704Hd/uPx2tnCG88T/7OsKH6xMm097eHr
+KiZB7em4u8v5KXvPa9xv2wg+9uVsT5NdkdGZICpIXm0jwevAD0viM5WdKCT
Gu5mXnYSwBqfnqtunzapFK6h/aGZdb9v+wF/wwkJNMFROEMjTHhdsELCfxRH
wGll91gMI+Ag43fjXitv1MGGfdJyxDoOMPs+5j2EfUeI7xj1H2NBHQGdkpie
hI7R0DEEncC4JqbACyOoDob0WOgUDZyGgmcQpNeA6zDiFEfOQPyMQLoAegYx
Fzh7SVAXOHmBIWcgIEfhEwg6DuE6hjrnyQuWOGdAXC2YedrKURaWdRCKn+dD
gowrIitIP+QvMCaR32hj0QEE9oQYE+s+8lzshC53oe11cmUxNDtNDfb7X7T6
X70IvWhDmpuDzS3ehkZnY2OwtRVtbYabG4NPa12VVZbiSgNgaEmprazcWV1p
ryw1F5VYAfKKzwvKLh+VXxRWXFaVGJ6UmytKzI9y9JmZuwUFJ7n5+qxsED9r
eJS1lQskOGO3IPsgJ3c/O3c/MXMnPm3zfvz8zXvjX3756p//bPv732r+n/+z
5B//8ehhVHNxfHNl6quqpJay2MbcmN70268S73XFfPci6vrLW1+33rv+Kura
izvfNj+49fLBrc7kh8Ox9wYAf2O+64m+2ZMcNZZ0eyTmVn9c1HD83YmE+1M5
ySvl+QeZsXMJUWOZcbNZ8XPF6cvPK3RPC1Yf5yzVV50Ak9v8VNfVYh7p8M0M
oLO9rt05Qrfitx4S3ktav+naHzsYaxgvudeS/W1tUcp8adpS6sOlh3emYqOm
spLWKovOW+q8L5vJvk55dECdGNb4OzqqTA8LYwPMeL803M21NeMvW8mBHn6w
l+/qJvoH2MVldmObPdBxJ2eC7lI4Mylmq+gPSlquHaM9Hof7Q1aTfmcUiyE5
mmAYTHtAEoOpfxz+8m8dqlbIEWKMFw7DCW29EJ063HGMhc6C8AUEXyDIJUqa
GQDeyFHnJHWOM5cUbyAFIyWYCN6AEyYSNxKEGaWsOGVCAVgjypswxkJT2p9Q
woyzLo5xMqydBkBNhF8fgi6Q4DmMXYq0VUWNFHwJtsPSVoGycQC0A5WDLBmg
BUx6ZxQLWPi30zxAOA0cPaxHdkZ2R55fTrSZh15AA63Bzlb4VVOwpS4A0FAf
Aqh/7nzW4HjW4GtpQ9pe0s0teF2dq7LSVFZhKC49LywylpbbaiucT0psxSVm
8GNu3mlB4UVu6RlQ56py05NKa3mZqyDPFJe2n5p7mpN7CVCcuwdQlLORk7qU
nrqSm72Vk7eTV7Cflr2bnL71IHXpdvzMtesdX157+dnfq//v/6vws/8N+Nta
kdDRlD/eWdjdktlWFtefd+dVwp3WmBuN975sePD184Rbbfev1d/4su7+zdbY
e4Op8ZPRd3rv3+pKvj+YcLc/88FEatRI7K2BhKjhxHtzQCVT7s/nJq4n3BzJ
jV0sTp2uzF6szVt4WbXTXLbUW7833m0demXobtGP99m3XtO6PfVg3u8/V3lM
eyY4BdFmveVwZne0abAs/kXJw9bCjJlHadPJMYsPbk0k3Jssyd5pqLa3Nfhe
tJE93dLwkDo6EuGvOj3CjA+SIz0CEN9n9VhLKzvQL/f1SX09eE8n2tWroWcQ
Gxyj+6bY0UXl9ap8YVLRkMqS2sOVmD9kNem3yRt2wSxNaosFNPzB+HvVtKeH
oIzN4nZfsn6zBBvY0AVNGgjKSBImijIznF1gbbxo4xkTxZopwcqKNka00pKV
FMwEayE12AjWTnIWXLBRoo2W7Izg4Dgbw9po3smKPlH0CYJXEHwC42EJO0G7
aMpFs15JCKpUgCH9NB3k2BDPQBwL8SxMidrsOaste+R+UFkL9DZX78GlNjmh
lW3dwoSzq/Wg5amh/bm9sw3paIFetCDNz4MNtVDjM7ixEapvCNY1umvrXfX1
/ufPQ89bkKYWtKbBXVFtLX1sAgpbXGYqq7Q9qbJXVVhLy82FJZd5j/QAuUWH
hWW68vKzqqrLJxX2koLL1ExdcgawurpHefqigqPCvMPsvJ30zPW0tPX09I3M
rO2c3L3ULMDf7djUrbtxyze/G/vm+tDnX7T9f/9R99nfyx/GdDxJ62stnhko
HesrHul+NNXzaLr+0WhVRk9+bFdOTHtOYldWfGfKg5fpDzuyHg4Vpkxlxw9n
xPTnx47mPhzOjR7JBKY4pj8nYSQ/daE8b7OxdOdl9Unjo7WX5XudNVv99QcD
9bsDDXt9T7dHGo9m+zwLA77NheDpLmY6or0m1WugKK/K05LIiKgPNZwYzqYP
R572lsd2VyX2P0pdykmYi7s3G317Mj5mqaTgtL7W1docau+ge/uk/kFpYEga
GZJGh+WxQXZ0kB1sp141BBrqgu1tdE+f0N3Ld3bAr14GOzuh9vbgqy6kZ4Dq
Hmb6x4WpCX59VTrZky9OFL2O159wpkvebpEcNjHokwhE4sgrXf7d/PI7+ssy
2qI/IL7h0ljAAv8uB/UzLTzHRLtcPsTK4Q6JtUuUhQehrGgRWKsg2GXJJYtO
SXYLwJYKDga8kT2c6KRlOyVaCclGAoAfBQcF3qguTqus6BbBv0kuXqtRoD1Y
UAGQIEVGVBkRRYgDrwoqKZSs0u/W8vrpQ32bv6DnWTl2NXbPlT09L6g4Ki03
1tS6m1vQpmYE4FlDoOYpUvcMb2yCwfun9d6aZ56GOn99ra+2wdfYAj1+7imr
sxfXWIDPLa00lT+2VjyxAJRVmQpLz/OL9Nn5J7kFm4XFeyXlRxVVutpKc8Uj
fXb2RWLS4aPMvZK848JCXUH+cXL+QWLObkraZmLyWmrqZmbmTkoG4O9OYsrR
/YdbUXeWb96Y//Kbgf/6R8ffv6qOSeytzRl+UbEwVrkwVbOy9mzl8OXe3Iu1
wadTjYXjNdkD5fmDj4vHyrMGSjJ6SxOHqzOnH2dNlqUMVyZNVCSOF8QM5Nzt
fpTcW5418rhwqeP56VzX+eqQ9XXH+WrX5Vr/xfaweW3wcvrlwXSTDuD1QGhn
kvaYVDKgIlaKD/5rtbVWBsHpPz88M02dDJd1lscM1aZO5yeupz9YAOIL+BsX
vwlCkbp6L4hYunrYvgGxu58DGB4QRgbFgT7tTV8r0vTYBgwyUOGOXra9m2lr
8ze3eNpf+tta3M2tofZOor2H6uilB7vokR5urF8AfhkI92gftjjNbS6rO+uS
8UwNuVQGvtLl380vv8vft+piRZ5O8rsc1U83zUVilNcbRJ0c6ZU4p8Q4AEMl
AM7N8W5ecksAikfgHbTo5hSvoPgAPTnZxUiAxU5GclCym5VdrOLiFHeYs15J
8Yqim1d8YfIiigrLEibLhCIRvIhzIilo5TRZ8aPqKNI0rVXbBsyl6UtTcO/Q
MjBpr23eKq+6LCw5KSq5rH7qbmpFnrfAz5qhuuZQTQNS+xxreB5qfA7i50Bd
g6++3veszlNX52l8HnjW4K2pdVY8tZdVW4seWwsfW0qeWEqrrcWPzQXllzkl
FxmP9BkF++n5e/mFpyXlhsdl5vLCy9w8U2LSUUbCVlH2aX7BcV7eUVrefnL2
blr6QWr6QXLKZlr6dlrmbmrGDvgxIXn7YezGg+jVm/emv/x2+B/fNMaljTcX
zXQ9WZuvWV5u2NxrXT/rPdzt217vWJ1rXZ1qXBpuXhhtW+pvWOpvXBp6tj7c
sDnUsDpYvzLRtD/dejTVtjvVujPbtbsypNucMJ8s+y5XPYY17+WCw7TkNq46
zeuesxX73vSFbtZhXAmYdbTjQkCDEoNL2sIW4s1683CnjYcsPvOR4ahvvyu/
vTJh+knKXDYIxe/OPryzkBS9mpWhq37srW0KNrcT3b1cTx/f3Uf39DODg9zg
ANvVT7d3400N7qdPTM21wd6XLOBvUxtS3+x71uxtafE3NXkbm/zPmwP1bTDA
izaks53o6qJ7etneHrinKzQ0gEyMk7Pj7NqisLtKHu9Qx0e07pg+P2VNl9Kl
gTYYGYdDCgQkmpR4VvptnoT4zigWuOXePB0M5yiE/rX3/gkNHCSKkAE/jHk4
Ogg4KwKES1soXIBh/bToESSvqHh5TWG9gJKapCoeEahwBEB8VQ+vwafJtKDR
VgLQ3oQrQ2qVJbQiA1oteoEJl9v9Oal9bwPmlwqnWpEYPr1oautaf9ZoqarW
V5QaigpO8x+dPalxPW+FgbZWNweetoFXpKYFrW/0NzVDAODNswZP7TNXXY2z
4Zm35ZkPCEf1UydAfrU9u8r86LGlsNoKXvMqDJmlxtTC86T8k4eZe5k5F4+K
baVFJoD8Amti0nHc3bVHGefZuQcAGTkgYN5Jz9BnZp0nJm8kpWxlZO2mZ+5E
XpPSdhNTdu4nrt64P/vPGy8TshfbK1b6a3fX69d3W3Z1XVvmkRPDxIFx8hDo
oGHi6HRqF2B3/Ohw+lQ3YziYONsfPzqeOjUuux1bIf+RDzoNIWch1kaB8AZ8
C4yFxC5h7BSizv//6q7DuW0zy/+XNzs32d3bu2xzEse2bFmFvXcCIEiw96Jm
y3ESx0nsuMSqtKwukWLvBHsDWGXeg5jNOE6y4yROLvfmNxgKnBGIB7zv934f
PrxXZz6EqvmjYmInVTltjArjXveHuwd2LzoPVkL59G70qX3dNuvSzjxW3ngw
N/Xs/b/eg7NjX9+VieJmQwNz1MwBGhJjoGD/YnNxub18i4atY7lpcBdVaFiJ
nNr0jSX3COIXkhyNKa81FwzGCXIIllDoIc/JwVdwXUyuutnTcLjzdlfO7sq4
fflFV3PF11lwFZa85Iq/dCtQ/vhW8+G9wb37jftftDc3X4ZCTAO1PvUbdUL8
/iz0tw1K2rXOr330n2HwOzttutloN8t0u9rtV86ZVgttBkw7p3IbROvgQr12
M91udjjInw9yo35m2IeMOtPvQ7xnBuegcHP9EWzzjNQdFYcj8nxYHL2sMpUh
X7bPX7YgcgcDpjbXm/b2/X6MQ/im09mD54XtrxMr/oTdfGDQxRFNSAPxyz8Q
CI/1+qLRUSFsJQhe3FXTOWq4sw7pn9VeNZpLwL965qYqmvCcEc8a9XmDLqMl
clpDVqJLCdG4AkvIsbhaG5ErT0XyKF8SnuPvX59/zp7fEwtOZZKIVHzGFZ3N
sA8vX924OrU1wwvOCV7MC9bmBM/mOfvznL0bM5tT05BIr03PbMzOr8+zN2fZ
OzOs59fmg5dvbvzP+3c/nH3s1+/ftp1tOF8EfQexO3uZeyfJzw9yX52STyKA
4kac3E5mt+OFF6n8bi4dTKW30+ntDLlXqZ20OtEWnaKoXHtQ7g1q/WF90C3T
nWKbyre7xQ5FtgGNQrOSqbZh4G2M+r0f5iyq3S4XyWa4HH12cgd7SMx6ZTef
SW48ZU9vzV5b48zvSwQhjSZtsTSs7pZ7occE7wIdWKYXlru3lnori7TLV8VN
KS0Wx/RJp7nhd9F2WxXHMrghByk3QWSNxqyZyOBoTKfPAoxEwW6t2GxVh7Pu
tGddjpzbUfQ6ST/wMjPZmHeZsz5zNmAtLLrKt/2Nj1Zb9z7pPXwwXHs2Onrx
8mTv/HCvd3Y6LpPMDDZzXr9Ox8ZX771v1mIxdSnpLlNv6veYP/f/9WsnbxD3
Oy+/rWbT7far1UaPHHSLfSo37GQHIJCp3LiTHrZTAyozgm0n8xIweYN4UqZy
WLooFl06H1XGk56DQLuAN1G4r9o3K1FfMdDpu7uHC/Zjp2HHqU3b1Em9OoEp
IlpZWMLZE/CPTcaqwVHGbUUIXr2nPtl6fB0IYdC8QAG4kSTMFWBeI5oGscw8
AjYXVKa8HE/JdEkET6qxuF4TRuRHKlkM2JbD3Z+de86Z3hSzd6WSiFgUZolO
AO/NbP/x0oOr3K1p4Ys58VcsySMWb+di2jl45fraBx8+vja1dnP2yTxnncXb
BcwKjgAf3PgaiHjBlrrjK20tngZXzgqfh8gvzwpfndbXE3Qw198pnIea4xh1
nqqMs/VBrtFNVbtJqh1jpgeHud6YHDGVrqnhOT16w0mDH7zcrVq9lMvT4frJ
/V27+BN0NsC/scm7vsGbeSHhHClUcY02Be6yOut+H7W42PcFOv4FaoGRwIPV
QB/gdpCoNgwONJpJt6MOAJfC5YCUxqLLGQ1JM5GyGVIEErHgGQD43G2uuExl
r63mMqc91qzfWvFZyh5r2WbIWfVZAknY1HEXknbocwAg5U9ujT5a7QFAMoNw
vhVofvnpOBYad1vjfvcCv5q9Gr/9To9uduh6l2lH9Tu2yRvEfXo4YKphMFWl
Kapbrzfpcp8u9TrkiClBkB+2yPN2YdjKD9r5YacwapPjVvElzRR+H9GVYbc2
6tdHAxj5m0MmYZ5ULe4Ohz+xw1H/u/wLiUs0lVrbyNz5mCkWYdIdmpCUQZPQ
q+OILKSURCS8E4EgZDTWzXAjgf51kIBJ/Fo9DbOrZjIV9YYcri8YTWWToUjg
OZ2hiOnzCJEHClbjaQWW1KFpFEkhmoRKEZXJ4hJJjCc4nWcfsGd3hdwjkehM
KAyzhcds4clN9s4/P3x06cPPp2a+ZvOf8sXrfMFzNnfz5nzw+szm1an1a1Pr
H15/Ns0Kcvh7XME+VxYG3OQdXGfvuS2pj5abO6vxvY/TxUfhytNYY/2su5se
HlRGR7WX0c44CaqEGpPdYYUelql+BZJdulelB/X+qDm88OcPrAx/c4OcsF1p
VvNlciv1zPvAyP9Uc3N5dmqDfXNbwDtUyiMYliYMebOl4vK0Pd6W19fxBijf
Ir201F8EIextex11k7Gsw7KEseFwdryettlEYkgC0cRxNGPQ5fT6JI4nCF1K
jyYtuoxZlzYRWaupYDHmrea8iUhZjBm3qeQykjZD3oSlDdoEpowQspBZEbUi
KQeW9dlrKz5qZblza4VaXaJXFjq3AvVPbtNrj+nDnW5ovxs7PW9URn3qV9HF
34nfi+7AzELo5hvVl/i/stfSfjDIV7+t6TGppVkr9euVwWQtaLM46FTOW7Vx
owrbEdUct1ujTue82xkNui9/hrz9N1br9R5tbhpte6hhixn2AUhSA3eLOqqW
HEuFMTE/whdEDETD7mhbbU2jNUtYMjpnFeJX7ywT7qrNXCT0GR2WMxKk3gCx
XMSNZcxAAgsDEDytQmA0yAAU6pxUmQHBK5TEBeIYiN951jGPH56AzT/iCI4F
/N3rU0/++8+LVz74jMtel4h2xEKmcdIMK3hzfvvGzeDVa+t//3D96uweT7Av
EB2K1XEAT5FkSWIWU/Lune7ep9njL0rFZ2e1rURvJzo+zY3D7XGEGifocXpw
TjIdnUat4cvO+aD7C2L1e9abtMMotRv5evTzw7vaRZT1qeLG7atX1uZmd0Sy
U3CFmcg5bGWno+n3dZ3uusNV8wRokLfLC/RSgHI6q0Yih6AVHK/bbOc+39gX
oIGIldooAIgb1eUma8gRIHEsZ8bSRjSpJ5IGYwq2uCEO32J4GhjZiucNWiaJ
Ypa3iU8RwQEmOjYqYnYt8y0wtd9fX5g8UPbWbgWqE6wu1O4t15/cGxYS437z
7evi1wKh32TaZPfafbr5O82fX7Nvfz9o929relCtQbvRbzV6zUa33Ri26kyB
3E5j1LoA1RrRnXOKGtL0sAc69+1pE6o/iCZTX2/mFleDejyEoceoNoIhUUwd
wzRxgFoekgmPJfxDifDUaqy47HWnrW62FYyWnN5WMjqrFlvJbCUtJtJoyINA
JoiS3lAgiKIBJ/W6Io6lASiW0SApvTaHa7JadUatTKkVSbk0xoMUWhhmCU45
ojBXdMwVnXCEu1zRHle0PzXz7B//+OLvf//8/Q8+m51bE3C2hJxtHveFgLcL
7Dw1u/XPG0/fm/56Zn6bLzqUquNybVKkSfHkMR0adbvKT1bJ/UdUcYOsBqvD
/dz4rDqO0eNkf5zvj0ujc6bXxssB0/x3OOj91LLWP2rMPdmBy9emch0yVHji
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
       "], {{0, 240}, {320, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "AbsoluteTime" -> 3.7232689209240528`17.323499394343038*^9, "Device" -> 
         "Integrated Webcam", "GeoLocation" -> {28.37, 75.60000000000001}]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{320, 240},
     PlotRange->{{0, 320}, {0, 240}}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232491711775475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.7232491939759564`*^9, 3.723249201147049*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellChangeTimes->{3.7232492017414694`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"3", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232492108059955`*^9, 3.7232492175718*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7232492180881667`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"3", ",", " ", "2"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.723249224887495*^9, 3.723249237413395*^9}, {
  3.7232500270059566`*^9, 3.7232500476041536`*^9}, {3.7232501561871004`*^9, 
  3.723250192623187*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"cat", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{{3.7232501815357327`*^9, 3.723250193552842*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"cat", " ", "+", " ", "1"}]}]], "Input",
 CellChangeTimes->{{3.723249271885328*^9, 3.723249277361209*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "cat"}]], "Output",
 CellChangeTimes->{3.7232492777715073`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.723249245095956*^9, 3.723249250209591*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvVd/I9e57rln5mYu5yvMt5jLOZdze+Y3F3PmbJ+9ve1t2ZZkK1hWsGRJ
VncrdaszOzDnCIAECTBnMIGZRM4ZqJxz1Zq3gO6WrNiSuplU/9/jchFEgwWI
D5/1rlrhf//1n/7rf/7P//Iv//La/wqH//rvf/0vr77672/93/8bfPH/vPza
73/38m9/83+9/Ppvf/fbV/+PX/8v8CAD//s//6d/+Rf7XL3QyLKsKMppX4WD
g8NPwfGvg8P5xTGvg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4PDT8C5yeLgcE7h
GYEiGJnSDMnQVR102lfk4ODwtBAVupipCHkdcchUTNBpX5GDg8PTguXpUgoT
EpJeVCzWsiTLSWEHh/NCJUmVE6RwzEghFmEW4p0UdnA4N2BRDgTmVSO8VtAs
3I5g0Glfl4ODww9DHknUsSyHWD0qiknJKJgQwUhAp31dDg4OPwxzJLDHghzm
tKgoxyUtpZpVFdHIkA3QaV+dg4PD98EfsSA5witRQYlKcljUkzzCEBJtnfbV
OTg4fB/CISuFeAn8GxOlGC9GOSPBW3nVIgxoSDt90Q4OZxnhgFHDohjh5bjI
x2mQEedsFVTEOn3RDg5nGu6YFiMcH+UECN84I8RoLc7rCd7ISqiqWaJlyU5f
tIPDGYUOU0yEZqMMSI6zYpSS47yaEKAKttIiRLBTBTs4nFm4MA1iozwb5cC/
cpxREoKWFPWkZKRkvaojyumLdnA4owhhmg9RbFRk7BKYVROcWvevllRBclpC
ZQsJlpPCDg5nECnMiCFGija6sBgtyctJXkkJSkoCSSlRy6kWpiEOGYoGOu3r
dXBw+BI5xIK0iKCGeSlG6ylBTHJSim9ITMKXgpEREY2QrINO+3odHBy+RDqm
5BCtRTjNvgXMgH/VJLSfBS0l2a3oFK+lBC0rGFUVMToSTTCw42EHhzOCeITL
IVINM1qUU2OsnuTNhAiykoqZkK0Uh9K8krWFqnp9dpJqOst1ODicDaRjToaW
c5RR4pySZJUkp6UULSnrKVVLKpDCelpWsgpIL+gmhizRsCSnL9rB4Qc4mWWp
pJAih1U+Tttlb5oVk4yc1qSU2jg2TpSMAYITPWchzpmd5ODwA4B5G3tvPW8X
yyFJjShijJMSgpQS61LktCplVDGlgOBEyehgXi0lmzmIYA0xyFB00HO9MAeH
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
ZSWohXW7mDUV8KKs/BOSrIiSJmqNF9Hr+fs1C6vwat/mYMjfe+1Dn93b//jO
zu3r0VtfhJtv7Xc9iHQ8TPS0pSZc9JxPHndhPjc+7WW8w7Xutmjb/cPe9kx/
Z250sLIdkAs5JAlI0AzBqYIdLiIQoE9itFHPNmrVhiRBlkWlcS6LEkiFClf+
0n2CICiMoLJiI1uf5OnXHNqoi7/2rS/9W3/Nb14b1L/3Ovo/bdoD/969HgXd
u7XX2RzraQ/3d0U9/eW5Cc7vJkFwMuNlejsjD+8GWx6mO9pyQ715/yi1s414
DgmqrZP/bB0cnjeaXZwqjfFRBlS7UOGClex4hcpUlSU7T+1hvrJa73iyu5++
uomp3RMlSKoo10NZ/6ZDH211Wn/N78L+7rc1oXFOnFtdv9Uc/Oz2ys3rCdD9
W8etTbGe5sRAe3qkrzDtpSbH6YlRcnKc8Hvx0eFST3vs1s1wU1O842F6sKsy
7xcrWbsjmlOdKtjhIlLvK9YFxRDVr2Zoo4X8rXH5rR78ajH7/Xz/c756aZKm
5sulh+1r125NXbueAj24GQX1NGUGm4uDPRmfB5uaZL1jxNhYGTTj49wD5U8+
2bl67fDuF/HmO1lXJx7fRVDHM4pTBTtcQBp9xarUCFxdf5yhal3fz6NX+Bl8
85//07VpKsXQge1M1+Dc1TvHn9zYv38z+eBmqqMp1f0gN9CdmXBjkxPkqKvi
GSmNusqTY+TkKHnv9tH1z7fvfBG6dzPa/7Cw4uPCEYNhnSrY4QLypK/4iYOe
JkOfuX+/mt1fu0JKUSaXlj67v/XRzZV7N7IPbuab7yZa76X7OzNeF+Yfq7kH
ciP9RUjeiZHq4iTf2xq7+Wng9rU9UMftxFBLac6vMBgSFFsn/fk6ODxPfo5P
n/6lvvndxiPf+g+/9rKCqsZSKe9C6nrLzI3bUdDDO1DeZvvbE96h8oSn6hks
jAyXPW5syoMvTfLewdKtTwM3P90CPbh+0HU/PjqEHe6INItEGSmarjzneQ0O
DifG6fr3W7/1zVcG4kWmuW+s0Rf94FasqyXf1xIe68+NjVQ8g6VhT3V0gpzz
Ukt+fmGCufXJ6vXLtm5+vvbg9m53W2LcjWMYkiQkaab0/Oc1ODicDE9p3p/5
4t/zyPc//wkYLW7sHDX37Vx/sNh0K976MNfbmnb1lsZGcO8I4fLUxifo+XFm
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
j/BrIW7lmF/Yp+cO6Jk9YmoHhPt2MW+wMr5V825Wx7Yqvh18aquyeECWeJPQ
zHN9T/+XBrSmNtZDb/710isv9r74u463/qPj7d90Xv6zp+mDpc4rO547ieGW
rKej6O7Oj/YVJwYqU8PYnMvWpKsEgiAGLQ4Vl0fKhXR9T+Ezs3ZlMlGbnlpP
7iIsiYwaQjhCogU6resBCx8eHq6PHU51r063Jyq7dqd0vV9a/ZpozQCRBqrL
xHWjIiFQmkZ7GWYtqa6n9LUkWo4aMweyd5Me3dGH18WuLbljU+pdVVpnmNZJ
rm2KvzNB3hzFrruIK73FDwZKf+vOvNWRebM99dfO6KvNR6/dP3z13gHo7fbY
35t3P+2PHxEop52h/4IOT0MuW3GNjF9+f+C1l5ve+c/ut3/b9f4fBj/9y8Sd
d+c7Pw323Y66W3Lu9ry3qzTeX/YP1aaGa9MubNxdBU2OYqBZV23WjW0FuEoB
sYo9x1DW1FPcYJmgxFgit7NZ21or1CKIyyKLssveZ1t1/lhkWS6Xy6mD/MJ4
wNe2uzmWjAWxYlhKZ+VMTgnlRdBhWtpLcOtJcS0hrKbllaS4mRLXk8JGXNpM
yIGIPLNNTmwS/i1qYovybhCeZXxksepaYUaW6b4loncRH1wg+uew/unywHS5
f7La56/0jVd7x6vd3ny3N9ftKfZ4ih3eTKs70eIOg1pdEdDdrt07nTtT+3xe
QYSGyHNyN9ChQaFQeHBr6O3XP//bC71v/WfXW//R9e4L/R+/5rr93nTnZ/uu
eyn3w9x4W9nba0cwtKL9I5jbg4P8o1RDPg85OlwM7SNGtFfqEHR7uPVpkSkw
U7Obc75q/AhJWaQW7YIX8V//nTyV7laO5gIra2Mti0N3p8Y7QsFJIhAQ19ch
RlmQa5nrm8Fb58nmWeLhInVvFu+eI7pm8YE5cnCBGp6neidr3ROZPn+u258E
9XjTfb7s0FTJNVsbmswO+jKu6ezofHFsJgaansnPzhXnp4uBJXx9LhNcKuzN
1w4X8eBKaXO5sB6IgzZXk0uzxyODO23NC63eSl5CZQ1VDMe/5wmKogJLe/fu
dL35YvfrL7S99cLwO390Xfrz4Cevue6+v9BzfW+4KeptzXi68uN9pdEBzDuE
j47Uxt2430OCJj2E342PD5dXZtlY1BLF06yCIeM2t4qLi/HjdQFPIbWEDByZ
omlKz36cxk9AEqR0KjM/tjnUNuF+uDPbH1/013ZWxK19CbS+za4F6eUdYTHI
Le5yC9vMxjYL2trmtna4nR1uc5NcWiosLuTXN6rrm7XNdWxrAw9uEjtb1NpG
zX4kiG0G8Z3N0vZmaXetsrdRPQhUjzfx0FopslE5Xq+FNrCjzcLBRv5gI7O/
njlYKwQX0/6x486WhXtDqeMyKuqoaJyhfkiHp4GmeN/E9Ot/7vjTHx6++dI4
6IMXe959ofOT10earywO3Noba46OtGfGegr2pKR+wjtgD5D21TXlxvwjVd9w
ZbQvvzRjyCwSVFsn/y4gT6HG9Hoi6ys4HkF6BelQ+bJIV/ST7K36fqAhvbV+
MNQ3OnB7dfjexkx/8nCBz4Z1UCZMFxN8OakV40opKYLwhEQmZThicZGCL2Ns
ersSW8/XYjw8QiYkIi7iUR6Ui7Lwb0FwUomw5TCTO8Dzh0RhHwfl9zBQbL8W
3avG93Kx3Wx8qxjbLETXsdBqdXEq3tO6cLPzMBBCOd0Wp6vcWfnAHH4YQZDC
4WhX+9Jbb9x99Xe9r73Q9+7vO9/9fddHr/Rd/5v34ZX53pubw/dDEx2psd7y
eF/FO1CbdFGTI1X/MDSnqxNDFd9Qday/OOPlePzRveCTfxf5Ira2sbu+jEcO
RAGSl0IaaxiioamadmbubMIfmXy2FNzc9XatDrfMz/ZEguPlxLZQi5u1hEyk
VTKjkxkNz4ggOq0yGY1OKyA+rbAJIb+PxdZzWIwjEiKVksHd4GtQJS7Xkiqo
mlAqCaUcVwoRFlQ+FiohoXzMlo7Y3DGTOaQSh5XYfim9W01ul5NBIraJbSyn
h7qXbnXsTKzgcRmlDcRpBqc7vdDnCUmSDvezH35w48V/a3r51/ff+s+2d//Q
9feXOj56pefqOyMPPp4auhH0t0T83bnJnvxYPzY5wkwNlSYHixNDZe9ACeri
sf4yHO17waexjyH4YnsvOT2/BWVvOYMM3u7dPeFreHowDJsbWx3q8M52HK70
x8LLJJtCfBYJOSTkdbFgsHkRxOeMujSQktGklFw+JmPrWQhi27ZpBcRmZBCZ
NKmURaUQqJJBpTQqpqRCUqxFDSxm1mJKNSKDyiEhcUzEDjFI58xeLbtHpXaI
/a386ODK7fb17tHIIY8SBmJVi3N6sc4V8PtfKhJut//aR8Mv/cdnr/668/Xf
dL/1Qvff/th76bWBL971dlwJeO4ejbelfZ258d7C9FDVP1SxNVKbGKqOD5U8
fTnvIE4WkaTYOuHrtyvfzez6eioXQUwZal5knuxIxR8Fx3HhvZjPPT3ZsjXb
sbvqSkaXcCqN2Mf+5fMqiMsZIDGng6SsLqSVWkRIbJSrYYFKPMplJmOLSOsg
Km2A8IyBgeDJKbmaMGtJq5bQKlG1FgUXS/kwnTkisyEqfUhAHKf2iaPt4tzE
7oOO1a7BnY0ySumI0hDt+Pe8ARZOJpPu/sU//ubdP/5rD+jV/+h97Td97/6h
56NXhpvenR+4tud5EB9vzfi6kjP92caILCiE/SOYdyg/0pv0DJJY8dF60Sd8
8UdHR2srhaN9pppAGolM2dYJX8OPgiKoxbnF8fvLoLH7W/M94VoSUY/9K+RN
EJszQHLWFgQxm1aJmJ7cxEuHEhm3mJQCaqQwlrHVOKczakNwXkmZ1YxVTRrl
mAYpbAdxlCse0+kokwQLh6jkIR7eKW8sRNs6ljq7VuZiKK0iXLN12p+Qw48G
x/HtjUjTrc43X+x+8d/uv/7r3tf+veevv2l+5/ftV9/wtl5eGb6x722KeNsT
U73Z8cGSb7jic+MTLmxiKD82kB0fYiB/T37XFZJkg8G97TU6cqDwRWQySFcM
/WRn+vxYBF5IxBObvqPpvlV/y/ZMx/7OVJmMgX9NqWhJRUMq6nzeBMnwiN2K
1llwaELL7ZH5IwGL63TKFpXSQI38xTPyE1F2HOvltAGqJMC/es2OYLUY43Jh
JhNhUiEqc8ylDpnYLrG3mu/sXOnuWnVtSCnJ8e85plYll5fXP3q766Vff/6X
f+959Vddf/7VzVf/7fY/Xu67+a6v/0pg7PqepyXu68p6B/O+4dK4G/e6MN9g
3j9c8A/zUP9Ksq2TvOZctra8HDzc0BKHyCK/5W7v2USSpNRRYWEiAE1of/Pm
6N1tYh/8i+QSUsqaXFLFggWSi5DFOpTAUOdC4JaPoQHMluMK1Lx16XXZ9W8l
K9lKi6DGI6W0Xkxp5Rj416hGVFA2xkL4ZsI0hG/2SEodCIk9NrRJ9HQGQK1+
MsEjTLN12h+Pw0+BZfl4PDncPXfl7/f+8rvWV//j4Yv/egv0txeaP39rpOfK
3OBny657IV9bcrw3NzVY8rur9ljokfykKz87bvc/n3D+CoIQPi6tBULHmwqe
Qxb3LGcHPFegYMHL1OFOaNW96+9cGr27u+etUgkkFZBUNJWSIZUsW0VdKGhC
3uCyGpuVK2EytVetJQQ6rVFJFcxLpYyGl7G0VEuK8C0QnlCIhFpNKpWkUo5r
oGoE6l8F/JuK0KkQCfmbD6vg3+guc7xFuAZ3ujtW77hyhxgq67Yke3LTWem3
d3h6WJY92gl3POz6y4tNr7xw64X/fvs//9uN1//9xuXXuzsuT4CGb+5NPIxO
dGRm+krTrtKMuzzlyU+6c4szrMyd9E4NNE0HN7Kb65nQlqjR56Dy/Sp2t2Gp
FJzd8fdPjd7ZB1WO673QOaSUkFS2QEJRAUEQQwnMFaRKBI8H03iShjimkuIT
/+IJg0xIjdvBWISrxfjGbWIQhDWo0QUN/oXKN36Ew7EY1cG/x9vU4RbhGwt1
ti1/3nO8kUM5wxavqM6MpPOIKIqlfGV+ZqHps6F3/vTFH35153f/382X/vXG
m79vab483vaxv/fqprvpcLQlMdmd9w3mJocLUyP5GXdxJ6Do/EmP30in0xuB
/EagkI9qhr0qjq0T++k/HxzHw8Hoin91qnVv+MbK9iRGxxGTR1wRiUVNKKhc
vq6cxWQMKqOWw0x0PV84JGtRqRzii0dCJSyVjsXCkVA4ZDM7RGqXigWxZBBL
75LpHSazy8Z2ufgeFwsSsW0ytFM72qocBWuhHSK6yx1tkfvr2G6gOu2P9XWv
3+g9XAwpWR2BOEU7LyubOXwNWZYTicTkwPylv3z2x/9xF/z72//3+u9/defu
pbHmTyfbP14euBkcuR+BCB7rTY33ZyYH83PucnwXWfxJr0u5s7MTWC6urZTp
ErKEM7Tq41MCrZ1cPL+7trfUu9v3+cTow1DtCBF5W3xOZDM8k9Xs/uS0BVGL
xfXisRheKSU2sNy+kNphEltEZpdObpNwEtsgDpdKuyvVjfn87lzuaLl8sIAd
LRHby/juCrG5kNtazG8tZjcXMsGVyk6gtr1a3VwuB5fKW4vF+ZnUUH/wTu++
f4NNawjEwh/js7T+bZk22Pr0RmeG4w8C7ToMw/YC+90Pei691vb6r6+99K9N
L/3q3sdvDzy8Otv6yVz39dWRpoOJtthoZ3ysK+HrKS2PsuWUvQqropqgk7lO
kmDX14Lry9jRDi/VELLHbJyzVZehtUPUyGQ0uTcdHm+bdbfsb04W0xF7FAoY
iU2rTFatW9igUhqeUCsRIblVTe/gxZBaCMmlY6kShiNXPLIFmRvbZ8M7VGwH
T+xRSbD2HhOtK7ZdA4W28dA2Ft5lQrv00Q69H6QON+0IXl8uuAaCTZ0HrqlK
lEE5Ffxrcuqpzbj8Jkclq+rMcHxq7NIsl1+eX2i90vf+C5+8/m+tr/zq4dt/
anvwxcLDTybbrs6O3N6aaD70tIRB423Vda/BEvaKlKq9KNwJ1U3ZTHVxYXNz
iclGkHl+ep6/BrR2arVacie9OLo83BYcaN7YD6JsAlEJxKYQk1XYnNa4n4sn
JKhqcwc4qBI3q8lHY67IZH0sZVqBareQVOuCE7GcEkpJHk7yCSiH2WqUyUZF
UC6mpsJiLCxFjsXYAR/aofc2aqMDwfutBz0DqcMyKsiIke2VCU/7s/kS754x
E9WDSRQnEKcaoNOdqXr2oUkqFolMDczfu9Ly3h873/ztw7+93H77kr/5ig80
8sXG5IOjldbkZnc+NCcUDiyRqy+kYw82PomPVZKkvcPs/NLexhKbTyAdt2cr
GLIOOoGf/gyBP5UkSeYO8mu+9bHO49GOo+1Vs5RGVBYxOcQXdL5gD8RisjqV
VsmUUjymMnu1SlyppXUiY4DskRspe+QGkZRrKbvbuZqUQDX7RCkm1EJCqcbk
SkzKRZVsRM5GjeSxEg2pETgeiaE9bn+TmBo7bm7f7x2ILYRQRkS4jEj1RP8a
fz83p9RrPqlrDi2nEKYgXD3lmarnApqmj7dC7h7Plb/0vPfiw/debL/6jrvl
I+/9D9zDn6xNNx2H2vK5IUpK2HPkT7j25Hl+PhCdWQmtLXH2AiBVhChoQhtI
PBOzBZ8e8C9UweVQOTi97e9OTfak1+d0LIuoIoKiXiyZIKFgcY9HZJXDTHK7
Uo7z9rCrrApqpHPjCGrEcX3ukgEqxm017gLnIlo2rKTDKH6gRY718BEc5eMD
YX+LWpxOtXXs9vaHhlasBI/KEqoqSLGHwZyJz/OW37gxod/zo/51tBJBSQbR
ukE78yy+F0EQyrlKcC040jp/+3Lv5T/33Hl/vOfj+a7LM7t3QqkxDJtnmXVZ
r1qIs0649oTMWlpJzi5EjtbUWhKpBYSgBOYsJJyhqu0psavgDL67vDvvSo13
H82PMTVoGOcRU0JyyQKJRVMoGnYQ541qlIX8LcVlPGfU6v6l0vUCOauRWRXP
KbWMjGXkakqqZTRQKauCqmD8jJZPy4Wsms2ZyZSSSOvxlBZPqbGkEokJO3vY
5GJ2LlBeCptZCdXUxiiOs5K/t8YR6OqoreYJtFNGNc3WaV/XWQfSoVwuH65H
Bts9V18baPloauTzjeHP1pmOAtpBKIVQ/nRSD65qdSkzNx3NbCEqjpQ0soqP
Vpg84Sv5+dgRXKMPtvZX/Ul35/pEb7Eas9vPbBEpJQsklnQQWJgr6FDJ5g+x
Ylwj8qhaj2AyqTNZROQ0UKWglHJSOS/n0wIcbZVEEFbVyyU5XxLKmJontHRV
TFc0ULIMRwNO4kXpIMMd56VwzShBA1W3QKf9wXzJZ170KciDrnrR/Uk0n3T8
+7QwDFPKVDZXt2e7Nwdu+nzXN5YeHipDuO3fOEJZhPiTXh1OVJWDcGhuLrew
UEhsoUoEiUlLzT5a4fkkr+SZYI/FKpGHwaPpwZi7bdfdXc2GEIMjlkQqbYBk
WqtLlyiNrYlUmaMxjacMllA5UuVxTSQN+4TUGEqlSYWhFIqQ4WiLlkEcqzG0
QsE5p1K8RrAywWgg3D7qcILRSomQKpRSZXVaNexZwGfpTs2HY+iDUXTZha5O
oDvTyHVotxBqZ6mH7Swjy3K1WsVD1Ym2sYXb66HBFJrgbP+G6xHMNe7dnByM
Ks+urU5M5pdWqPAWyh4jNmbwCeskd1h4hti9/VnscNvuzHc9PO7vwCP7iJVs
feuTv+tFnvNlniYtq+Inntzfh9HlMfRgGvkjdvca6fj36Wj0sXAV9njzaL5r
I+gJKS4SrSEURShj37hBJzvqmJHVla3tqfnKwip5sK7H9i02aiiZevv5O+4i
wVvQVU0/ib7xH9cDb2+LIEmVFB7fTy2NV2ZcOf8om42dzkzMM8tkGL/uWn5z
0HrPjdqm0WLS3nuLcT6fHwnP83Njm0u+Hbaviubr7ecchK910v4VtM2do9lV
fC5ABFelw6DJhA2z8O0tgSd7AJmKbj7ntbDqIfgj+nwa5hUEoRbH80fFg6C8
vkgGFuVq/qRHkp9xvHv43bHdSx50YwZ5ttAehhjV1mlf1zkDftlWpnY3F4+V
NQHaz3KQQ+lvX6P1ucIJWmB9e26+Oj1bXvKTewGdDBtWzW4GoMdtzkeba3My
jdE8pgigqsEUFbpkgLCiTpYNmTB0xnhWq0NLvFSr1MpJupbhmJqu8o0NB3/g
lUVR5DiumqIiwdTGLDHryW4u6FjG8e8/MbKBN/tiNyZQ1zpaiqM0hK9m67Sv
6/yxuXh4sJlAJYQSiJ4p2RHM2DrJaxAEdXFxdW6y5PdmfIPF4IJaCxmIRpZs
q/Gcxv62Ii6UkyUqaU+exaNGYU8o7qPSAUrsGtlDJKSRWbEj+5nU7xzJx0Px
w4VCNFArxwyVtLc4/8F74hC+DMNUMmxwJTQ/nB1tO9qZR3jSaT//E8OBQud0
rHkBuY9QpIIqChI1C3Ta1/XDnKm9HSF/txcPo9sZe1OSMpJijFk1DMFe6fEk
L4PnlenpBf9YbmQg4unOb8zpfMayx18phlFfeYMgiFqWrGZIOi0yGU4oaGJR
pwoanpWJvEkWzFreqOV0oaSJZVmnNMRZ9kqzP+9eJ+QvVsHKSaqWYZ8+f+Ej
tf2b5UK72YCvsjia311FtYw9fPFMjWA8XQaXEn1z0d5NNJNGpNCofM0zMrbk
e3iyeesZsTDUv7sLh5m9gp259nhFzd4V+uT3MuCk8fGp0eFUV+veQGs2MG3Y
+xxxX7ac0+l0YqMQXcvVDiQ1h1TMBDGkzDOQdzpIEg2WkXlcIEuUVBEs2t7a
zFRO4fehsVMw+DcdxYKL1O4Ks7uJynmnvvsndtPYdqK6kdGOcYNRLNZO3rMy
tuT7AfNCE0sWZFVSf35G/EwgLPYXj1M7ucZICV3RtNP4u8IIyvjkrHso3tu5
P9ie3Vm2DLo+f7AOz/CFXIFMsUSaYUuKShpqfVFykVckET5PDaTIuigqEifz
tKAwsiHop/jZQv2bT5Cxo9L2Mre7KmxtmJmUk7//BKspjCrXRIFUFE43Qad9
RU8L+JdlWZEWFV49rYz4KgdLoXgwfbojJUhJ9c7OjwyEB3oOhjoyx1v21EWz
3gcOcUZVqWqhCs2DE+4V/8nYe4yGK8e7me0VcTcgr61p0ahT//4TomYP2mFl
mbf3NT5PuxXbnTCieEbyF9hbjx5sxvV6exUu5lSuh1fUpcBaX+9Rb8+hu6+a
CtnmtR77F/KXpVh7t9+T3XNQgVhXtJ+w+iX8iS5ksO31w415ZmdFXF3SM8lT
WAnQ4TlxRorfBjvb8Y31kFy/2QqNgdNqD+zu7rZ37Xf2HHpH2FLmy33tv9nd
dzIdgPadXFGTJf2nrcFVqxAri4HVKXx7iV+aMcrZ+mTMM7wKvcM5JXSc2duN
2f7lT9O/sVisZ3C/o3fbO8gQBWRJtr72HNu2oqwIks7pEikJhFzLEZkjopIU
uKphcMaznTOFY0wins2HWCZv0eVGn/zT9rHUquTK0tqct7IfUKOHFoudzk40
DheeZKIYOk6dun8LhcKgZ6+9LzDWR3EVe8OUb+6ZYvfbMwLIIiwuy9EZMbqR
Xh1JH89TWARZ+DOes5zNlOfnVtfH8vkds3ho98837nE8Tfo3Vt72DReONhFV
Rfo5XMvL4VxQwahiBVco+4bLadW/av0Or3tir713cdLDCQTSZVtfew7P82yR
rsRLfExSS6qMaUSGPlov7q/mSjHDYJ6xR0gC8jcd363W0gpTavSnPW3+UhQf
DO7PTpRyccSy9YEf520tL4dzAavIvKac+qgSQRDGp3bbe6bnJ0WJ+ZbWJlwe
TdNYFAuvhqsBEmH1cVYiyuew4NZRNqGozyHjIPGJGsVQ/NdWsv3Bz4rnleOj
6NJchcZPbQ9lh18CoqpI2umPCoNsnfBtDwwsbgc0lft2J4LH2SpbSVfoJGMw
OjQYDNmgSC6fL5MYmO0Z179qo/ebFUQBPiFD+zGvLElKOBTdWq+yFBJVW8/w
qhwcvkZjYNgpWpjjON/Y1thIIHb4fdVi4zpFnlelszKG7VuBa4tEIkcHVZ49
6TW0HX6ZnG4ES5K0thryeVczSaSK39cSti0s2aM8T/gKfyzpdPr4qCyJSFFt
nfblOFxwTr0JHQ5lpqdWSmUkSReht7ZYLIaOi4/eyDl/Lw4OP0ghjy0urNv+
tXuuLPUs7RfwE6AoKpvF6u/C6Xl2uPgwtLAW2Co+8u85mE32/UCdjuP0eX8X
Dg5PCc+LweBOtWopF8K/UIwQBF1P3hPaw8LB4RSxJzPu7+M1Q70Q/lXtQSnU
4yEf52Z+jYPDTwMC6+joCK9p6jlZjeEHIQiy3iN4Ed6Lg8MPEg6HsZp8YfyL
4zhUwU7/s8MvhEQiUSmJF8a/BEEIgnAB+tIdHJ6GbDZbyHEXxr8kSbIsezHe
i4PDD1IsFjNpUpGe8f3fx/2/394P/Px6hyvlGsNwTv46/EKoVquJeFV61jOJ
Hvf/fns/8PPrHc5mijTFO/Wvwy8EiqJCxwWa1NWnWCn9aRB4IZvJhjfSkc1s
La4ZnPnV3Rk4js9kspk4wRDPbNeGJyiKkk2XBE755fnX/ovYWJVOVm2Jss4J
Cs0ZBKPRpEFg52A02lmeHXNm4Xl+bzddLUt2E/pZrDZDEdT66rqnaWXs/lp0
Rn00a/jxyrQ4TgYC68szmVK6vlfLM13fUpblbKqkSuYvz792vd9YFVZQDRAr
mjgtF3ErU9GKOZROnMVqAv57SZJU31sLvno8Jf7pll+z55nyEkWyMmfosvG1
nfVOfWbBiSEIAvi3kGM1ARk/b7W3xofWyN/QRjps56+qs49mDTee08jfdJyg
n0P+wt+iXLIqMvrX5v6fLxrLpfI2cBQ5TmUZmWNVntPgnKHhl1axRegErkGw
gnDMIjCrilkVzCpVrWLZyGa1aJRbW8dXA7X1FTqwRJ/22/o69q+KIHAcBxaW
RPhKa9j5yW4LT/jmI40HCYLP56oCjkwBPdlZ76v/5LTf4kkAn+HuTiqVJAzu
0fqTP5lv/dBOco4zTdO5BMZg6k9bwfJUaHw4X/vNZFmWJEmCYEE4plTLAlZV
CVyH83KJz2dlWxkzndQgWEGpOCQsSsVQMopCYXR0ZOwF5cAS2d8VBQ32ZIZ6
s6f9Rr+FH8zfr34mj62tShL80kokSecybOS4ko+oWMbgSqZOm/aKx4KhSfWl
ruFvgqio0v/P3XtwR3VtW4O/rkeP7v7663ffe9f3OmBjMCCChHLOQjmAhIQk
lADlnHNAOcdSKVTO+eScT+9ThXUx5tqAn+Mec9QohTqpztxzzb3XXocX2L9y
Ji24LHtHVt2ZG/RjEv2L6lH/uzjnFx/jh7ZgMOgwhrCg8CfV36vbNfJERRyn
AAiUx2AWgzkANCRCAS7g4f1uzuuQ3XbRbZPdNslhVR1WxWpUAZGNl+rluaI/
Fg92qLlx1+SQdWbQvTDq/71P7lPa2/wF4UhYqQWK0tbduFy+8xN0f8t7tEqc
7/Bencp7ws8BRFWRlARC5EiewRnwKtB/5UxacHG2j62bB+aQWxWo37Me5i9v
Ho/HbgD8Ff+k/vcdFWbCDdyBkVuRRCgCkgHQgID4+KBLiiDgFNxOxWWXIloM
WAxU2HCmnp2Ie6vwyqx7c8J/MP+Hi58/qnHhpzyHrwsIs3maYhEEsxiR3S3z
wQqm32YdxypuV7mAKkGqjCkSKvOAwhgvYBwAgwscIX7CcwH++A1ckp0T28a+
yWFSaVRVGAXgl2+TY7lwvY7fbh0QCK/sNofLSOCBP/341Q98XzgOZEmWwmka
ESlEwENSmMIS5BFD4Qcxe1yyxyk5bAqA3QJUWDFfypenvH6X3ljwLY965wec
v/c5/Q83cH3cLnh762RvGTnZpEwHqt+o4g6VD6gKpEHAJB4VRYjhQzThF5iQ
/CdyVR/eIvxd2zNc6FQ0qJWk/uVP8tVuO5oJ18sSfrN1QCRJGw1mj4nHfX/6
+hs/Hr1haY4maQ5ICcoCCQYxBmAxUGHIK4U8otctAQAVBnDagBeWbEbReMaY
T6SdpeDsoLunWf97n9P/fEMR0mZzG07R8+OQ+URxnMs+kwo7VNat8l5VgBQR
lsWQIAR5xi9yAYlHJA4SOCqiwn+RFabgDtnT2Ze3z/VHitepKsSnz+mATQHX
RiEcGiDpkChhosDK4m8VjaMocXFuNJ4wkPtPz1/+hxTWWMxwDM1wBM/iHIUK
BMRFWIz4JdgrBL2i3817nZLXIXrsqsui2M2y+ZI36ZX9dXRu2Nn/4i/IXz48
euP1okaD06yXjCeCRa86LlXMrJI2lfepUlAVAzIA7xMBaDdHOmgGjTyn4C+y
whTcG/unjoV13fG+bDGoEvbp/A2XvwghLtZrREm7qgS1CanfLGIJhdBT3cXh
FuFz/BWenPLj6ZKIF2YJ7m0vrFHYx2t22E37HbzPzvntqs8WHs4yScZz9XCX
mh+xD7Wf/t4n9Ks0TitRTvm8IZ+DdxgIq563X/ChCxU1qbhVRswcauEYtyJ4
ZN4tc26RdQlsQGX8Ag1LEi1/bI3iP2ADV2DzyDK3drK9xhrPVD4cQkucJH2Y
0wdxHUWAuI4nQ5TPSrlMmN8keg1syKAKPvW9jiM8wApsHSuEH+cqcj+Yef/k
s/B70Eu99XCThL1/Bf5G2tsU1iZQaI4hGUBhGmNJWAbAQyIa4MOBNBtySUGn
ELCrfpviBhQ2yWaDoj9h1uZ8w936H8/O/DUapyVykARM+xwBq56wnZNenRo8
VwNngv0Ad56QmE0VXCrvAK+y6FZYp4IYaNwhqbj6J52neLuB01/eu5xeOXo9
h52fqIxbG4RXWA0f8lkKZ5AQzvg42IKeb2CmXcpxqnovVFd4Uz/mb+Q+ZHAK
QIQ4ra9ghcjM+y9pQJ48NtR87jlYp8i/0JPL3uEvaNqT6AkBgIQlAAISsSAf
kWDEo0CAwnbFb5OABLtMsibBF+zuOjLSd6Y9mfWvyF8+HEXTJIvBeMBN2s1B
yyFp2EUs26xhgzJvE16diF8KrAVQWOGdKueQSTNP2gTOzbMBWSbVP/u49OGp
fWJmc2rQf7Ah4kZVDYUzG38yF0tjLkZDfiRgo3xmMmQQHUf42TJ2sUqYdwTL
Lu87U8TA+/UXcI1CKQLGBS8n+AUBkRUa2GRJYEWOYnma52lR/Mi8LAzD3FZU
t2852OAY5K/D30h7eyDrKoqmUZ5CeMBfPCREZpRgrwIk2O+UgQsGUbTHojjM
svWSP94hp4eNEstJbyUxXW351z7sX3sv/Fu9nJaA53Cc7vq2l8zH85RukTl7
jZvWWd8+TRlU1qaBs0kAtJnDLkjCKKrI++/SP1EzGf0jQwuDL2zrMwx0rKoe
7cHEP+GCI1qAeHH7pcuyT9gOKNuefLZM6Oew01n04jWtXyRCl5IKv9//gpuQ
gEnEj3A2ljZTnEd7zqDEKAItMyjN4xyPS9LHjIGD4wkEAk4zurWi398Qefyv
yd9/zSiR4ArSwAXTKA34G5ZgMRxCK0FXZCCaj7hgN6CwQTw74BYnbDIhKqSW
mwT6SZ7lBW1q4Ldg1m+wl6sGbksIglwmRL9n1S1Ch7P+o7nA6SJiWsd8RwJq
lAizQts0MFaBMnO0RZT8ihLOPBR4QfhIH/cHiWSM1sDQ2ELXK9PESMCyLtCW
MH+pf3tGGEr6fSGHLrQ5fbw26Noa9e2Oh9YHPQC7Y6HzGfxsBvNtk6pfVaj3
5GRquTQQCXsgzsAiRzBpFBVtqFBm3CxuJQLnIesh5LugmZCWC/chsY02Feh2
Wy/h/U3T+blM0yrNK/Rfa/3v2xTmKe2JzNpYNMZRCEfCLBESMT+P+KWQm/e7
JR9wwQ4VUNhrUd0m2aQTthZBbK0ArRFJbdwmklX4Gzhi7n3tV9oX/72ykCHK
dmHXv3btThi2Jxy7U+6j+ZBhg/bpOcgg41YVgLVLYQi8U1Ig7YYXOVH8GB8X
2devdy4f3gzOwMDkQlvHRXu36WCaDp1pgvjvzig8UgQbL2yni+7+Z4u9Vfqh
WsPEc8N44+VEm3G5z6sfhc/GEOd0UHWF+wHyffwNkiFHkDtlfSse5IiRLKpk
lYhTPLSPGOYtq/2mk7kQYdFy4X42tonc0lar1XgaOt512rwqxqmYKAP8D1+m
37X9gL80AyAQINIQQMRCwSQZEnA/B6LokIeJZGQFnKrfofgsqtesOC6k482g
GJQlSBERUcIkEUQ4pCwwYZ8C+PQry8g7/BXeAMQAv8q+aJwJeIJOPWQ8cF9u
+HWvnWerqGWX853xIYOMWRXMqlJ2hXIonF2U3IoalLU7jRZk5uNcmxYMCfzv
nl5t9gT7x2fqWw4bWo8WhzHjvsp4VAG4V0qWtTH2H6gwiqIXe6b9leP59tOO
ysW+x6cTjZb5FtNIzfFA7dFUq3GzK3AyStmWaG3EIKiIkMqR3NvrjDT+ImTA
7UfOcfu2y39IIHoGv2CxMwbR0fYN//aICeB8GSGs2iOAlZ9z4ihEGc6tZwfI
+RFq86g4p+KijP91+csxAAxPCkCCGYyhEIqEJCIIomgB9rGQRwy6uaBLCTgl
v031WVWXSTnbR9lwDoPgF8SgCIisaHnCCri8QIjf1uJf7+DZ75vAhMFyAvur
7DGSLI0GqKAH9Z0hhi27cZt0HAm+cyFwKSEWCQUUtmvJWsAIq15V9YsqkGCc
V6mP4682CiTy1O89jWzzh3pHJ6rq1itr1wa7Q9urKmwAHZQmf++oMDhgr9e7
Mbq91LfyqmS1pWCx/4luttW+2mYeLNtqL10bqDmYbnLvj/DmDRW9UEmHxLpV
BmLfdtOa/yUIsB3XZchwaHfsI/Zd2HNEwBcCdil6j4iDSeNS197sK7PnQJVJ
LQj/iYMHW/M5MP2h5WgLM+slq0slWDWyEvbXvWq/bXvHAr93Ljg8kMUBI3yl
wiCE1gayrKpRR5EumXIrrFtmPTLv1/KEBVSRMBUIsdZLf8/i3+DgAXm1+IHi
AESSEyktmP+o2PW9u8BxnCRAjyBpJ0JzJMagEI44Cfel36On3aek55j2n3Kw
UUbMKm5TSacq2GXFA/grhfkrqaQicrz4wdcA9BLhTuh3FmA/Rg5NzpTXrhc/
WX7RaF2YYOzbHHKuakvvkfD3S8kai8GZ0ZzZaF7t3519tTxSdzLTYtgfCZzN
Yaa5kH7cdTTpOF/2mrYJ76kUskmUX2JgkUOld/Q3YhwwDEMCRMANwy4KdpKo
myH9Ah0QUDft1AcOlvSrAybvkSCjkXzO92fLsAxLYITXRJztOraWAYtlX0gl
WZURJIDf8BL+do17K6OSIRkO52gUSLBIwSIJiViAw/wC7OUgjxJ0iQGH7HdI
gL/Wcx61qhi4ae0aaLeWJ8wHZTGkyojWS2trtBnpN+MvR1LhgUpORjQItLZI
/JfsAmzW7/dDIZpl3pxLRIVphEH9GGZnvOeQawf1HZChCwU2ahaYdqqiQ5Hd
gL+yNueCha9DeJT+A3cKwzA48t99fRPGCuOzC8VP13MrFp+Wnwx3wbop3L+v
Km6Nwtr3i2nXROZk0OHrDnSvO/cmGl8vvbKdTlPQsYqdqdSZIJhAb6aq8M/P
Pf10075lgjOdm/cmjd5jWgpFHPR76klqToekoQDk1pPnm56lWWx/S0EJlWL/
OtlxP25vS7BWKVezwCyD8jTMUZAIXDDuF1BtOlh9I8EOHvDXaVRCFwJsEHGT
CkDYVMalcl5F9KvA4IDvV6ZBLK38dvpL0TzBcwQXWR/Ek7xA8iIhaqt3gRZ/
/HcHNg4UgcAZAMyPMggjgrgWbBb0bzBJ+mjYgUIXVOiMCJ5ywVMmZBARs8RY
JNEV5i8UHvMh1Yg3/5A9ghMJBAIiIsik/MmrbrV7mOU5QWQ4wR+Ezi7gECyx
vIYP3wg4y+3Do4KK+aziyfLCkxdN3uUez9kii+pVzg6+ZS2PVMEUhVSYEGs4
NG4N6ffHDKYVNHAs0C6V9aqsTxCCkgBLEhmuqvHLZsM5hg/6Q/azgPsS4kNy
OPZ+93mCXDjXGvLjHkfIrOP2VnzjY6Hl19zxIe9xqxwt86z8l3wK4RUXtKQF
GrBAYHGOxXltXQMsoUEB09KxWNinhtxywCX4nbzPpnosqu+YDupY5FwBQA0K
aVFZIEAeLeNOQcIzBZT6K7ngd/gbGX+LxP8RcBgDIIUkYNmAnH3aClbuTVEO
yGVwYl40wkcFBOfaui2KDBG0m0MseOAI9+7D7lPWe8bhBoF3fM9fQgH//+Hj
5KDz9Hg8kpfXer9PWnX7JhClOAb0Aax4brSOTDrMDpXiNHz4dhiBtzgd2YWj
aXmD+TnH1Y9tg42G1SHEvq7iZyphVTn3m1iactO2I8fhlMW1R3A2VQ2Ex5d+
nZlWimIddhcTEtX3ZZtHcq2dZth6GdQfS8sL/u5+7/g0PtpHnB+rDKby/9MV
Nf8g7W3+XrngiBFGYRmGJGCBIS8NeRXAX79b8Lm4iAt27ZKefTpwJEI6QGFt
qIE1y6JdFX3hjJ3w3S6ywIr+z09r/oi/nAZSAJ0Pp6kwz2EsizJiUJIhRcQk
mZB5SouBBV4UPkbXIr16yBtCAjAfJGkvIkK0jHICKvAwz0EC5WNQIwlfYAE9
5T5CKb3MG1XVKakeRYVkFVF4ggV+HCgIAM+wP6HFYEc+n08JaHmYMqso3KfM
V2rjbBRndflW1uzDo4ctbbatHRVnVYJTgav+QGMN/i2EwNWNs4lZLVnZB4VF
+pdPdOOv3JujIcM6HTjTzILsVZWAytpY66bVugXhVl4MWwbxF6vtv2ssy8Ew
whGC9MPVXiywODSDB0iv1W/UYWY9ebTDrcwHBwf8Y6NQc52p+6Vxedq9swKZ
LlQcVhleYv5CKvw2F7T5R1KLQsPrklgcltGQhAd41M/CXgHyCAG36HfxPqfq
tavWNcy+Qbi2ucChDJ8yAOy5KBpVGQSQPq1zBu5PZgSJfne655cf6rvHTAkA
AiFGpsAAOIwDRlXwS2JABioMwCEg3lNF7qPXr0VsL+jbSZc3aLCwblyFRQVV
w+PtEtgX7aZJB4mc4c4dL3Ok8qeqYhZUq6x4RCDEfIhWUCFSMwGYdC3U/zfn
haIocNxqSNH4yyifpmJgIzDJbeydPH68UVKyVFpiHh1REVrFtDEcTVg/vLUP
rjxMrUzN2gGoK9rrqDMOtJ6vjIds+0rgQnP6kksVjJxl0QRfCFqONPMzMzv8
r5CgwmkZ1xSJkUET4jjx6LZI47G4s0quzIXGBgMjfb6i3LXU+MnS7J3GSsPi
lOJ3aF0Z8RdS4Xe4IBB8eCBIo0BkORIR4AFgDwN/Pwrtcakuu+I7BPqLe/co
AM8e7NoJYYc0cyayVlUBnXNIm26QKBk4UJ7hNLDavPA73+DHfqE/5q/mfymA
H+gvj7EMQotBRQoqYkgG4CFFQhUBlwC+z6f9oBW7kcgEx3EmBGMeH+dDOR/G
eykVEmRCknCRDQLjylIuBjLCokOW3IoUEiRIlFAB/BXorwS6F01836+/ke2D
4JlCKSyEyeHQRWbkT9NfsBmHHx+cWMwrWs3KXyosuOjuZCBck2BKlAA+ZCME
x19YrOU1s9EJTWmpq2lpa+XZC/WlW01Vm30t+p2pgP1QYi4FwaKIBta/5WYc
sjaixcnSj/rGyPer9bFaGrNWj5gH0QgJojtwWaRfOMbIh4MW1IshHtR5gln2
QscbzO5rbGWeWJ7FxgYCHa2mrJjJ5DtDBbFTT3M2OxpNq9PuvUPKG1QZTgL4
8Jjkj9yu6AD8r0AC8rIcsMAY+zZ/UR+HeNmQRw66RL9T9DlEzEAHT1H/Iebc
DprX3JdLNv8mgh+zuEGRPKrkV0AULRBApID14DT8KEcrQsCPovD7+UtSIvUD
/8tjDAtTUkgF4IPyWxA14JJM//yY5LvHSVI0hvMBCLe7KbNfDdDaDBHoDUA4
jQsAdIhSSfFj53zfTC6jKIfwLMxFotDI6O5HbeeqnVkCdS29CVmv4zOX8rJP
mhuhAKQSjEqIGj5kC0GGm1xejU8euRfdkxY/n564kJc0UJo1UZY9WVO0OPZC
f77OYUcg3JLFS5o8hiOD7T++nlffLzhBIAdAFGRSu1wMxBJ+SgnPJn/aOV41
CIICxhCAYRO/XMcOV/nZQffsBLY0Q4/2++trDhO+6gLIvNFeETdWnjnTVLHT
3uE3msKTwh8fk/wx29VdCnpvgWR5/CoXOlyXQxuC1kahES8XyYgOOlgA+oIj
9DR2QsGHuH8f9e7CyCEG7aOBU54KD0cLPlVAtAXgHCEB8MSbTEsNkTSjj3fH
7w2hQb/DUXSEv+HgnxNRjocZQF4ZUsWQEoEQlLVBUW1cVL7SYoH5Gb/2r46C
phnQUWAU6YdZVxAyOLxnXtyOS7Ak4yDMAN0Cp80ysh83bgw2jPlw2I1IINoH
hj2oaLlbjKR8En9BnDC3clHyuCs+cy0xez0vZ7+2xmawqyj7ofy12+3za+ba
5smYBwP37/WlxS8lxcymxE6kxE1kxg+VZM8PPT/Zm0Z86xitU4QLmtUT2ngd
rEqsLLE/OOar64aD3gliQECiwBLtoSg3S3t4KRCO0H5BzWeGZIK+YNCAOk58
G6Ou3Sn/ygTZ12Ie7kXmJ4ThPk99zcHD6z33r3Ukf92eFzVYHD9Zl7vW8MQ0
P4Ecn6owpgIzrfnpP7kKX3FBi59plv9+LQMbkpmgxARE2sfjfk2CQz456JH8
LsHn4PgzEYDVcwDUmQBAnhHeba/9gIIMqpZS6NQmhSVIG/0DAA5UBv1txKuG
ZzkFhpe+V+T3HtV7D/LH/I3EnxH+RmaBJZgXIQ7wV4HUiAoDREpnRACsccQd
gwjhZ/PxrvYCGlBGcGWACht2DvZnjlxHXvVNxCt9bLYkfzXEbUSCl5DqVMO5
W7K2ggnwl/0U/gIH3dqxkZH3Ki59MzlnNy9ns6LsZFuvhgB/BQ0/ezxbW1sV
T14npHbfvdHz4PZAatzywztTD+7P3/puIvpWV3byTO/Tg9e9LstMkDxU+XNa
vGRVtxh+qoIC8OPoiMEJNBjifJQC8YpPwo0oYWI5hyy4wuOc4FOfVN8DbJ+A
SZ/TF7wgDFvO0aazhW77eCf8vFLf0QJND6uDPc5n1Xv3bvbevPbq4eevkr7p
KYgafZy4UJl52FxhGRxWfQEV5jX82VX4B7FoOBciwt+ru53zhtOhfWzAJwF4
3ZLLwTEXHHqMuzYx+EQkL2XaKLNmDr8ggxYesUuQQ0RcgPgqF1QpRGFQlUVU
EVclQpQISaQEIFgCI4K+95fzl6NBDPpGf3lMgwgJADzQXEhhIYWDVPAexM/f
0xa8iuCkOB9wrwqwxhQmsYQksNralveusnlrX9qAiYhSPrPDduzxXkKohcEc
HNiOQikfu/I3ElvCpwH0LKTaVNWtqgElzF9ZYT/a/5IMt7GzW1i1mJg9mJS+
nZK5m5e1UlywPbnIwvTP8xec3em5p6t3Jid/Oep+7/Uvmm5df5maOBsfPR4b
PX739kD07d7MpOm2ku25DtfFVCC4I5E6EEULAvC//vdUuntz0WiaIggOY0SC
FyAuZA1yHlH0KyKsKITyyfoLemy/NWA8Nhm3IPMO2td63v/iouO5/XHhXntz
aKxf6HnlqC7fTbw3GvNdf9yXvfFf9SVe78l9MP4ocbWm4KSznTzYU9ywinKq
djP++bOz3vAIdJhAyzT/y2nF2TQodEDEwhY45FeCPjnglr1OnjRQnj3v4Yzf
dSATRpW2avUoJK9KQTLq430uxu9mMY9C+lUQh9OIyiAqpw3bSiomSwQvk0CF
ZYlR3svKq/b2sf24b//e/2ox/xvni4YRFMWQxID4IaQlgpKwGnkPOMv7RMEP
XnnazQFQThkABYcdCpc7Zn9q3RAXthiAcRIt0ggFPIXfTtgOYccxhlvCKvyR
K3+58LAzvOeidEHVrGoSHMlRZJRPWEEMk8yr3oEHqZPR6dOpaTsAeRkL+ZlL
L7sQhFQJXsNPfByc2uCErrC8Ny5h+auv+z/7W+XXn9elJI8mJgwnxPQ9uNMe
fac/LWGqNmt1otV1POG3r3PQAUPqZTo8YhmZMfzxCXJvPVCAxkiPwy0j2uj9
h3v8994S4LpZDm0HS0e7U17bnvjq5fnzxsO6x7pHWSuvmoKDXfSrZlv5o+3s
uJm0++Px14Zj/tl/6x9tsTf70h9MlaSvtzzzjQ/IJoeKMR8Umfzx2xUvIllY
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
CRiqEnYFtynglXQqpEPFbDIAalEQi4ybFcqqgt8TDsBWCbGIsFWFzApq4lAT
D5tkxKyEwG9sKmxRIBP4lAxYDFtkyAw+K5JWGbGrqEMbkwGBX9gjC5RDpLSZ
YuCvJTYkcpDMIAJPSB9VfUIbrQriiB9VCC2HnxK1Cl4c+4nlnwF/O8d34nPr
76Zt3EpajUueS0pfysxczc7eKMw7KSs67+/HzSb1wiYfXlB7h6H1LXfPiL20
ejm35Cy3WF9YYsgt0OcX7OXkbqdlHcUnbz2MWbt9a/a76yPfXhv88qv2zz5r
/vwfdTe/bfv28waAmKjem9dab3z9MiVh6lHWWsWjvaqK7bqnh8XF68XFG6Xl
e60v7C/aHS86HIO9npbn5+1tliEQWs/RK/PM3pqwucQszkDzU8HFSXh+PDTZ
HxjqcM2MYMvT3PB4aGaBmhrHJsex2VHi9TS3ssh0t9vLK3bTM2ZTYqce3B6I
ixrJT1utyDsoz9svqzwprTiprNY9rjktK9l7lL9ZVriXEDOZHD2bEb+UGj8Z
daPz9pctSfcH0mNnU2Omi7L1z2v8nT18/5AyOgE0V3sdnZTHJuXhMWHltWoH
NwOpVY0OT3/9+VzwD/KcmDfZTZG6lExIokMS6xMBfuND0qZK/ajbHYxkVkMu
KeQUgHRqAmoDrypi0ephAg1FLApslgGCBjVwqSDnKmHQfg8QNIqBSwE2KpBB
hi9JgIgLCxnBR8A/SwHtvarhQgmey0i4BDH4f2DTADCziphFAMzCAQB1xq08
bmPJsHHmg6pE/XwNiqsGri7iQymIlmhZCa9FBWEO6DA/7cqC6zMyt59WUHc3
Y+tWylpc5k7ao5Oi0v2KKl31s4u6JnN/l3N7TV1dE0bG/C9emmueHpZUWx5V
XmYUnaYX6gqKzzNzjwryNwGS804epu/eT1y983Dx5p2pL78Z+vvXff/5Zdff
/9l07XrHtX+03Pjy5b2bvV991nTjq5aHd/uykxeyEueLchY0Z5o3XVAwl5Qx
mV+ykluxV/xUV1N/Xv7kqPqJ7nmDcWoEBlhdpGcnoIFu20i/c6jLNdbne1Fn
eP74tL8zNDVM17RdDszibR2+5leenpfgN/xwD9RSbywu24tNmHgYNQT0NObW
SFnePvCzTx6dPWs01jy7aHt+XlOxnVuwmZ61Uly4HxszmRA1mhYznRw7+t3X
bd9+Vhsf1ZUSNwbwuMTQWu/v6eD7e+TBUXVkQpsCHh5XR8OYn1APt1QvpLlg
StDwSd/G79neSVP8PkdCy06MjBeBGJL5lePn9x4VjlMoSmAIC4CG2KCXCNi4
gJULAQE1K0GTGjJrLA4ZVP+FqBVX12tATwXiTMAMPEDwnA2eMdA5FdQTmB4D
AG8AAmd08JzR/v+UD+jFMLT3kF4DfM4iFxxk4EKXLGxgAEgDTRkZ2sKTJhax
8JhNxO0y5dImPcWQymOSFNZiDQwn0Mx761EDxoU8IRbnZFartkHTNIphPAp+
lD5k/pgTtMQWhpFwjA8GBYsVGZ40VD6dLq7UF5SelJYbKqrMFVXnlY8vH9dc
VNcZW5ssg72hvt7AixfWxtrzJ+UHJeXGotKLnLyT3DxdYcFpXs5xTtZaXu5G
eu5xStZBXPrWg6S1uw/mv/525Muv+r/4oveLL19+/U3X1581XP9H493rHTe+
aLnzZV3sd61pCeOZSZOpycOF+QuJ6dMpWfPRKdP3kyZTspfzSnaLivdy8kAM
sFVZetjeYnvVZOnvsna/MjbWHjbWHjTUHNZV7ZXlb5bmrjfWWbpeBhoarc2t
zmdPLqsrTqvLLjpbQt2dfkD/zLSFlMTp9ISZxJix5JixikfblUUnTysunteb
a2vOm6r1NaV7j8sOK4r3SrNX71/viL81lB03lxI3efdm983Pm+Ki+uJjJtOS
Fp9Uudpa8N4efmBAHhlVx8bVsRF1YuwNf8eG5clxZmNHODlTg5SK/TnHon+Q
e0wBF/pmdQALyUB/qYBIBX63BZORoyIIIhAIOCyY00p4DZKGSxUgeKn6zlSX
jnMcM/5DKnBEY0cUfkyjJyRA8IQII+A/8pHHMHEEBY79AL5jCCBwxPoPGW8Y
vmMaIHDC+Y5YSIfCp1jgHPfqUegMB2DOcPaCZC4Z+oIOmQQYKLIZaLTMmBXO
pvI+rXwQ0GKZVmWSEXDyvfWogbX3OX2R8pgAJIpB/oAYFFXqg/KfGUEkOZ4k
VL+XN5rEtQ3P0Ij3Zbuho9Xx8rn1ZaO/td5b/dRe9cQSZvFF9fd4XKmvKTqu
KtgvKTwHyM84LMw6Kco+BkhPfZ2TtZ6dcwSQnLMfl74dE7t8/cbYt58DC9z/
9dfdGv675tp/Vd/5qjXqWtv9zytjv65JfNibnjR878GrlLTh2/FT91Pmv4uf
+e8bPdGxE0AN01KWE+Lm0uLnc9NWn5QdVxbt1z7eqnuyXZS7mJc5k581mxo/
DCiZEjdRXHhY99Tc8tRVUaCryNwuTFpJi197Wm5pe+UuLNmJjRrISpp9lLWS
lTyXlTJRWbxeVXHyrNbQWmd5Vnn2rERXU3jY8uQMoDxl+vZ/1sR921+QsJga
Nxt9Z/i7L1/GRg09uDeTkbZVXQu1vRL6BvjBYWkcMHdUnRpSZ0be8Le3T2hu
hTu6aPDeBofzsj64bskfp/0ggqaoKxccyYWOPGP09z28SE0qOETBIRry8D47
5TbyjgvWrVfsJ5J1n7buU+49AiAAsE/4DzR49zH/IR44grwHgdBBMLgfCOyH
ggeQ7zDkPQz6DwnfAe7aR1wHqOdQQ/CACgAAmh9B/uNg4CSEHSPECUbqUADi
lMZ1FHRKwKcErmfxM469lDijLFgFxSnxAZHXHi7DSCFWxuXw6uAfPFleK3kV
QLR8JF4UOAH1QognJHtlFVcVTpRZAcF5X5B0uQWDETs8xo515PExfXCAA+zs
IDu7FMD2OrG6iExNoz19zsY229MGQ32d69lTR0Otq/aJvbzSXlZpL666KHl8
WVF1WVF58bjs4nH5xZOi07Lcg+L8o/IiXX7OUW7WQWHWaVGWPjttPTdzKz/7
BCA95zA5Yzcmaf1O9MKtG2PXgQv+ouOLz199/renf/9fVdf/UX3/RnPyreqU
2zVJ91pTo1/G3u9IetgT/XAs+uHorQejn1/vvHNr4GH0ZMLDsdgHw3F3B9Lj
J/MzX2vsS57MTpnKiJ9K18p6jCVGD8ffH0mOnSgu2H1WY6guOU2LX8hJWE2L
WQjz11z7+CwrZTE5ZiY/Y728YLu8YKc8d6uu7OR59eXLRltH7UXfc8t0l3u4
1TzRetpTs1US3Rv9n1WZ9yZKklfSYhdioyairg/E3ZtMiV8tLzpvfIZ1tktD
/dLYsDI2ooyNKlNDyuSgNDGqAPR2Mi9bkZ4uemRQXN7hD4AWBNQQrtJcpIb2
n6MO/A8W+4QLQzMExxAsjYgMKlGIRuHf+xj/NcCF47TfBzlNpPkMsRxLhn3O
sImbtgjbFgrgiGAb07AFe3Yx3wHi2g05d7wAgW04tIt69wOePb93H/bsQbZd
r33P59r3AwR3sNAuHvmrb8cZOvBSu0H2AMEOIfQgBB+S0AEB7wYA8H2MPCRY
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
8ze3eNpf+tta3M2tofZOor2H6uilB7vokR5urF8AfhkI92gftjjNbS6rO+uS
8UwNuVQGvtLl380vv8vft+piRZ5O8rsc1U83zUVilNcbRJ0c6ZU4p8Q4AEMl
AM7N8W5ecksAikfgHbTo5hSvoPgAPTnZxUiAxU5GclCym5VdrOLiFHeYs15J
8Yqim1d8YfIiigrLEibLhCIRvIhzIilo5TRZ8aPqKNI0rVXbBsyl6UtTcO/Q
MjBpr23eKq+6LCw5KSq5rH7qbmpFnrfAz5qhuuZQTQNS+xxreB5qfA7i50Bd
g6++3veszlNX52l8HnjW4K2pdVY8tZdVW4seWwsfW0qeWEqrrcWPzQXllzkl
FxmP9BkF++n5e/mFpyXlhsdl5vLCy9w8U2LSUUbCVlH2aX7BcV7eUVrefnL2
blr6QWr6QXLKZlr6dlrmbmrGDvgxIXn7YezGg+jVm/emv/x2+B/fNMaljTcX
zXQ9WZuvWV5u2NxrXT/rPdzt217vWJ1rXZ1qXBpuXhhtW+pvWOpvXBp6tj7c
sDnUsDpYvzLRtD/dejTVtjvVujPbtbsypNucMJ8s+y5XPYY17+WCw7TkNq46
zeuesxX73vSFbtZhXAmYdbTjQkCDEoNL2sIW4s1683CnjYcsPvOR4ahvvyu/
vTJh+knKXDYIxe/OPryzkBS9mpWhq37srW0KNrcT3b1cTx/f3Uf39DODg9zg
ANvVT7d3400N7qdPTM21wd6XLOBvUxtS3+x71uxtafE3NXkbm/zPmwP1bTDA
izaks53o6qJ7etneHrinKzQ0gEyMk7Pj7NqisLtKHu9Qx0e07pg+P2VNl9Kl
gTYYGYdDCgQkmpR4VvptnoT4zigWuOXePB0M5yiE/rX3/gkNHCSKkAE/jHk4
Ogg4KwKES1soXIBh/bToESSvqHh5TWG9gJKapCoeEahwBEB8VQ+vwafJtKDR
VgLQ3oQrQ2qVJbQiA1oteoEJl9v9Oal9bwPmlwqnWpEYPr1oautaf9ZoqarW
V5QaigpO8x+dPalxPW+FgbZWNweetoFXpKYFrW/0NzVDAODNswZP7TNXXY2z
4Zm35ZkPCEf1UydAfrU9u8r86LGlsNoKXvMqDJmlxtTC86T8k4eZe5k5F4+K
baVFJoD8Amti0nHc3bVHGefZuQcAGTkgYN5Jz9BnZp0nJm8kpWxlZO2mZ+5E
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
Ir201F8EIextex11k7Gsw7KEseFwdryettlEYkgC0cRxNGPQ5fT6JI4nCF1K
jyYtuoxZlzYRWaupYDHmrea8iUhZjBm3qeQykjZD3oSlDdoEpowQspBZEbUi
KQeW9dlrKz5qZblza4VaXaJXFjq3AvVPbtNrj+nDnW5ovxs7PW9URn3qV9HF
34nfi+7AzELo5hvVl/i/stfSfjDIV7+t6TGppVkr9euVwWQtaLM46FTOW7Vx
owrbEdUct1ujTue82xkNui9/hrz9N1br9R5tbhpte6hhixn2AUhSA3eLOqqW
HEuFMTE/whdEDETD7mhbbU2jNUtYMjpnFeJX7ywT7qrNXCT0GR2WMxKk3gCx
XMSNZcxAAgsDEDytQmA0yAAU6pxUmQHBK5TEBeIYiN951jGPH56AzT/iCI4F
/N3rU0/++8+LVz74jMtel4h2xEKmcdIMK3hzfvvGzeDVa+t//3D96uweT7Av
EB2K1XEAT5FkSWIWU/Lune7ep9njL0rFZ2e1rURvJzo+zY3D7XGEGifocXpw
TjIdnUat4cvO+aD7C2L1e9abtMMotRv5evTzw7vaRZT1qeLG7atX1uZmd0Sy
U3CFmcg5bGWno+n3dZ3uusNV8wRokLfLC/RSgHI6q0Yih6AVHK/bbOc+39gX
oIGIldooAIgb1eUma8gRIHEsZ8bSRjSpJ5IGYwq2uCEO32J4GhjZiucNWiaJ
Ypa3iU8RwQEmOjYqYnYt8y0wtd9fX5g8UPbWbgWqE6wu1O4t15/cGxYS437z
7evi1wKh32TaZPfafbr5O82fX7Nvfz9o929relCtQbvRbzV6zUa33Ri26kyB
3E5j1LoA1RrRnXOKGtL0sAc69+1pE6o/iCZTX2/mFleDejyEoceoNoIhUUwd
wzRxgFoekgmPJfxDifDUaqy47HWnrW62FYyWnN5WMjqrFlvJbCUtJtJoyINA
JoiS3lAgiKIBJ/W6Io6lASiW0SApvTaHa7JadUatTKkVSbk0xoMUWhhmCU45
ojBXdMwVnXCEu1zRHle0PzXz7B//+OLvf//8/Q8+m51bE3C2hJxtHveFgLcL
7Dw1u/XPG0/fm/56Zn6bLzqUquNybVKkSfHkMR0adbvKT1bJ/UdUcYOsBqvD
/dz4rDqO0eNkf5zvj0ujc6bXxssB0/x3OOj91LLWP2rMPdmBy9emch0yVHji
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
    "], {{0, 240}, {320, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "AbsoluteTime" -> 3.7232689209240528`17.323499394343038*^9, "Device" -> 
      "Integrated Webcam", "GeoLocation" -> {28.37, 75.60000000000001}]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{320, 240},
  PlotRange->{{0, 320}, {0, 240}}]], "Output",
 CellChangeTimes->{3.723249250577848*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1"}], " ", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723249291749063*^9, 3.723249320503053*^9}, {
  3.723250230486706*^9, 3.7232502310611115`*^9}}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{{3.723249316168976*^9, 3.7232493220601597`*^9}, 
   3.7232502317986293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", " ", ",", " ", "8", ",", "2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7232493419608994`*^9, 3.723249346272967*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.723249347295751*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", " ", ",", " ", "8", ",", "0.2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7232493703681507`*^9, 3.7232493729629917`*^9}, {
  3.723250258560243*^9, 3.7232502646045375`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.2`", ",", "1.4`", ",", "1.6`", ",", "1.8`", ",", "2.`", ",", 
   "2.2`", ",", "2.4000000000000004`", ",", "2.6`", ",", "2.8`", ",", "3.`", 
   ",", "3.2`", ",", "3.4000000000000004`", ",", "3.6`", ",", 
   "3.8000000000000003`", ",", "4.`", ",", "4.2`", ",", "4.4`", ",", "4.6`", 
   ",", "4.800000000000001`", ",", "5.`", ",", "5.2`", ",", "5.4`", ",", 
   "5.6000000000000005`", ",", "5.800000000000001`", ",", "6.`", ",", "6.2`", 
   ",", "6.4`", ",", "6.6000000000000005`", ",", "6.800000000000001`", ",", 
   "7.`", ",", "7.2`", ",", "7.4`", ",", "7.6000000000000005`", ",", 
   "7.800000000000001`", ",", "8.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7232493742138815`*^9, {3.72325026096395*^9, 3.723250265414116*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"dicerolls", " ", "=", " ", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", " ", "10"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7232493927956133`*^9, 3.723249436571666*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "5", ",", "6", ",", "2", ",", "1", ",", "5", ",", "5", 
   ",", "5", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.7232494055976973`*^9, 3.7232494444642677`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"1.0", " ", "*", " ", 
   RowBox[{"Mean", "[", "dicerolls", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7232494487112837`*^9, 3.7232495053402295`*^9}}],

Cell[BoxData["3.5000449`"], "Output",
 CellChangeTimes->{{3.723249473076242*^9, 3.723249505763528*^9}, {
  3.723249544910124*^9, 3.7232495613263702`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dicerolls", " ", "=", " ", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", " ", "10000000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7232495180965*^9, 3.723249532486307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"squares", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.723249578402697*^9, 3.7232496034630857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64"}], "}"}]], "Output",
 CellChangeTimes->{3.7232496069635696`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upto8", " ", "=", " ", 
  RowBox[{"Range", "[", "8", "]"}]}]], "Input",
 CellChangeTimes->{{3.7232496094193068`*^9, 3.7232496194714336`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellChangeTimes->{3.723249620149911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723249637173585*^9, 3.7232496557143054`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232496560875697`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], " ", "&"}], ",", "upto8"}], "]"}]], "Input",
 CellChangeTimes->{{3.723249686556589*^9, 3.7232497442282333`*^9}, {
  3.7232497771598005`*^9, 3.723249779492463*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", "#", "]"}], " ", "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
     "64"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232497902070713`*^9, 3.7232498118860364`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellChangeTimes->{3.7232498129487915`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"squares", ",", "upto8"}], "}"}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723249815393525*^9, 3.7232498667502985`*^9}, {
  3.7232502925281844`*^9, 3.723250363142001*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 36.}, {
      7., 49.}, {8., 64.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 6.}, {7.,
       7.}, {8., 8.}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8.}, {0, 64.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7232498442231627`*^9, 3.723249867326706*^9}, {
  3.723250295483286*^9, 3.7232503098589354`*^9}, {3.7232503434734364`*^9, 
  3.723250365263509*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "squares", "]"}]], "Input",
 CellChangeTimes->{{3.7232498703428493`*^9, 3.723249876090929*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.72324987638614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "a", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232498841662183`*^9, 3.723249904002495*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "a", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "a", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "a", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "a", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7232499044097886`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "*", "2"}], " ", "&"}], ",", " ", "1", ",", " ", "5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7232499106251984`*^9, 3.723249916333249*^9}, {
  3.723250444384102*^9, 3.723250456255169*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.723250456693452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhileList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "*", "2"}], " ", "&"}], ",", " ", "1", ",", " ", 
   RowBox[{
    RowBox[{"#", " ", "\[LessEqual]", " ", "129"}], " ", "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7232504585547743`*^9, 3.7232504959622436`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64", ",", 
   "128", ",", "256"}], "}"}]], "Output",
 CellChangeTimes->{3.7232504980687404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", "+", " ", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7232505612588367`*^9, 3.7232505787508397`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"2", "+", "b"}], ",", 
   RowBox[{"3", "+", "c"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232505804900675`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", "+", " ", "1"}]], "Input",
 CellChangeTimes->{{3.723250587761236*^9, 3.723250593062997*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7232505933912363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232506096659746`*^9, 3.7232506272341213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7232506285940886`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723250640845426*^9, 3.723250665460002*^9}}],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.723250665860278*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232506677596216`*^9, 3.723250681548064*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232506819443393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232506908456607`*^9, 3.7232507153908544`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "4", ",", "3", ",", "1", ",", "2", ",", "9", ",", "1"}],
   "}"}]], "Output",
 CellChangeTimes->{3.7232507167147927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72325071997169*^9, 3.72325073532259*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "a", ",", "2", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.7232507362962832`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.723250737847934*^9, 3.7232507425782924`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232507518038425`*^9, 3.7232507618333178`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7232507628090153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.723250776767926*^9, 3.7232507776675663`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7232507782626295`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"#", ",", "5"}], "]"}], ",", 
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", "5"}], "]"}]}], "]"}], " ", "&"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232508049911947`*^9, 3.7232508645932503`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "6", ",", "2", ",", "7", ",", "3", ",", "8", ",", "4", ",", "9",
      ",", "5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "8", ",", "6", ",", "4", ",", "2", ",", "9", ",", "7", ",", "5",
      ",", "3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3",
      ",", "2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "5", ",", "9", ",", "4", ",", "8", ",", "3", ",", "7", ",", "2",
      ",", "6", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "5", ",", "7", ",", "9", ",", "2", ",", "4", ",", "6",
      ",", "8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "6", ",", "2", ",", "7", ",", "3", ",", "8", ",", "4", ",", "9",
      ",", "5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "8", ",", "6", ",", "4", ",", "2", ",", "9", ",", "7", ",", "5",
      ",", "3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3",
      ",", "2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "5", ",", "9", ",", "4", ",", "8", ",", "3", ",", "7", ",", "2",
      ",", "6", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.723250865404827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Riffle", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "26"}], "]"}], ",", 
        RowBox[{"Drop", "[", 
         RowBox[{"#", ",", "26"}], "]"}]}], "]"}], " ", "&"}], ",", " ", 
     RowBox[{"Range", "[", "52", "]"}], ",", "52"}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723250882960868*^9, 3.723250953895846*^9}, {
  3.7232509844231606`*^9, 3.723250985223729*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2tlTFfYZxnG1qRpR65bquEWNSypD1EQF6/JWZioWRQ3GXan7pMYluLUl
aNVEjIqMuBtE65a4J7HGFkFxEBEFBBFkU/bDYTkUxYVoR639A74X3PXiuTgz
XHH1e7/Pgfl0n7vMf8EvGjRoMOjNZ+Cbz/9+fjQ6Zlike74N/r7yzK+zo63k
ddiJCQ8KzbPOf8WF43fNa0HxLb/EYjv0cWWcHXBayEifaUvOlNmM0l4hn8U4
bVLTVouqmt+1ls3jJ6/8lcuGrR/f5sc+6db6UtgXLyfGW45v5rzRQ+9Y+tzp
v4w4VmBurtql1RsrbM/6vrvbXy2xuoCnzw8nOW3mwuVJJ3bes6pRc0P9k132
aE1UQHFWnmWc6bloesdEO5JY1LH34VSrqChNOeKVbdWxPqu7tqy04J67PBo6
C231EB8btsRpXTqd6dt7Tp55TB1Xdi3LZcUresR4uYpsTOqYzmm/SbKDd153
6lmdaj0/P9LOvXuaLT7gP8+nvNyilnqszj95354GB/r1+q7M1q7c92DkN4U2
7XFJP4/KKjuXNn7d5yml1i65ctmMsyl2ufGz1oGudPthy7VeE8PjzPvvt39w
dSmz2bGhYa18sy1oyOykQ/Mc5v/x9VnbYkrsURvfFp3aVlrvSz3j/b8ps/V7
V81YOyzNjkW9Fzj/ca6V1i4+Om5bjAVsjuqyc0Sx/fwyon2fKxn2Ks//ydng
Epsz5khg9KkyGxzQeuJfdzhtpVeTzpM3Om1KeNDPeT7p1qhuZET33Crz2JLc
7HFyih2J7Of/Vf9r5rbqszNZTdLtn8/HN9mQVmgflHz4YlZpuW0ZPnXRnEul
ljTU1sQkOq3Hpe/bDJ2bafM/mv2nqFCXPTwVWbc7MtvWxjee2/9egj2O3TS8
YGSa3V2wMGLC5VxrXv6p1+iqCrvy9FxY/5wiK+p0ctb57U47HdL8sUd0jgXn
Ds9cc//N7/Es2NbscKF5z/LzOelxy7p+6bYs+USqJQd4hwflpdv+J+NmOmZX
2Lt26c8rpuTb2YHrWvrWlFm130+xMwcW2JqvuxWF+bpscju37EVVJRYf9aDH
poJkO7tv5/5PLt6xrgMqAvY4EmzfYNeNZ32dlu89c8TecznWKGXIrba5DnuZ
cfXglbPFduXinqIp8ZU2auqHx+92KLO9veY03vK3VJvcd+tx9+gsCx9csz/E
+7LltindkXmoxKLeckTvv5dp8f7XurQcUGrv/X56N88ohzmC8sZu/Eu5bQst
//F345w2vaMjJHnDHXtWFFtw+1iVVbd+8fBL3xs2eH3a+24t4mz4oYZPF2ak
21txtVsv3i4y/9zlG297l9sXzzfa6QsOO9Rhc4Os606raFE9LaV/huW/GzCq
m5/LnmSt3/6HeZnmfr98WuMd121XxMEl7v9Is5gi56evRj4w91ZbXgQmVtjr
hJs1f0wqtrGvmgW/f8Fpv61dHD3onWxLmukR71nksv/Uecb+63S+eVWNW75h
wE2LHNg+buX8VFvlV9zi1u5MSxg7ZtKXORUWt+nosK8aFdoCV1jqUk+nPTg/
JH7QwAd2uMusHQ9Puez1lIR+C94usRXfpWWeb51skX0HdPdal2ahWS335QxJ
sprktwsaeJXbzAT3f3dpm2dbZ7e9uWlCmX07Naag5mCRhU4v+WnXqipb+MxC
PtnrMPfOWZPah9y2phG1ObUbMmxEUOD2K3WXbdKBlk07NHRYkNsHs5vX3LPN
Nz/yWeooNceINqnnb5Ta7r3HR4UHVNi3hTd93Nu/6cbR8e9cvpxmlcnDewYv
q7Ij+/tktUu8ajfmB74Or7hq1DfqGPWKukT9oc5QT6gb1AfqAN073TXdL90p
3SPdHd0X3RHdC90FvX965/Se6d3S+6R3SLtJ+0g7SHtHu0b7RTtFe0S7Q/tC
O0J7QbtA/afOU8+p29Rn6jD1lrpK/aROUg+pe/XtG3WMekVdov5QZ6gn1A3q
A3WA7p3umu6X7pTuke6O7ovuiO6F7oLeP71zes/4fQDeJ71D2k3aR9pB2jva
Ndov2inaI9od2hfaEdoL2gXqP3Week7dpj5Th6m31FXqJ3WSekjdq2/fqGPU
K+oS9Yc6Qz2hblAfqAN073TXdL90p3SPdHd0X3RHdC90F/T+6Z3j36Hwbul9
0juk3aR9pB2kvaNdo/2inaI9ot2hfaEdob2gXaD+U+ep59Rt6jN1mHpLXaV+
Uieph9S9+vaNOka9oi5Rf6gz1BPqBvWBOkD3TndN90t3SvdId0f3RXdE90J3
Qe+f3jm9Z3q39D7pHdJu0j7SDtLe0a7RftFO0R7R7tC+0I7QXtAuUP+p89Rz
6jb1mTpMvcWuQj+pk9RD6l59+0Ydo15Rl6g/1BnqCXWD+kAdoHunu6b7pTul
e6S7o/uiO6J7obug90/vnN4zvVt6n/QOaTdpH2kHae9o12i/aKdoj2h3aF9o
R2gvaBeo/9R56jl1m/pMHabeUlepn9RJ6iF1r759o45Rr6hL1B/qDPWEukF9
oA7QvdNd0/3SneL3Urg7ui+6I7oXugt6//TO6T3Tu6X3Se+QdpP2kXaQ9o52
jfaLdor2iHaH9oV2hPaCdoH6T52nnlO3qc/UYeotdZX6SZ2kHlL36ts36hj1
irpE/aHOUE+oG9QH6gDdO9013S/dKf6/F+6O7ovuiO6F7oLeP71zes/0bul9
0juk3aR9pB2kvaNdo/2inaI9ot2hfaEdob2gXaD+U+ep59Rt6jN1mHpLXaV+
Uieph9S9+vZN/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/u3/07/9F4Vz
SVg=
   "], {{0, 0}, {52, 53}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.7232509570651264`*^9, 3.7232509863245106`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7232510148012924`*^9, 3.72325102709558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232510285295987`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232510401968813`*^9, 3.7232510475556707`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"1", "2", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7232510485253606`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232510500864687`*^9, 3.7232510905102887`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[{{2, 1, 0}, {4, 3, 2}}, {{0, 0}, {3, 2}}, {0, 5}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.723251058895754*^9, 3.7232510909556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.7232511200148115`*^9, 3.7232511228438206`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7232511248342347`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timestwoadd", "[", "varx_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"2", "*", "varx"}], " ", "+", " ", "1"}]}]], "Input",
 CellChangeTimes->{{3.7232511371668434`*^9, 3.7232511882885137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timestwoadd", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7232511947711115`*^9, 3.7232512022274055`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.723251203378228*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"fn", " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "*", "2"}], "+", "1"}], " ", "&"}]}]], "Input",
 CellChangeTimes->{{3.723251207790471*^9, 3.723251237037806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fn", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.723251241368885*^9, 3.7232512433532887`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.723251244119835*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testifinputis7", "[", "wat_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"wat", " ", "\[Equal]", " ", "7"}], ",", "1", ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.723251285971712*^9, 3.7232513443686314`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testifinputis7", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.72325135202063*^9, 3.723251354989741*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7232513558793697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testifinputis7", "[", "6.99999", "]"}]], "Input",
 CellChangeTimes->{{3.7232513626832085`*^9, 3.723251368874596*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.723251369775236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"testifinputis7", ",", " ", 
   RowBox[{"Range", "[", "9", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723251371880332*^9, 3.7232513890575275`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7232513899371476`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", " ", 
  RowBox[{
   RowBox[{"4", " ", ">", "2"}], ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.723251392012212*^9, 3.7232514024556284`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7232514032211723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"Mod", "[", 
       RowBox[{"#", ",", "5"}], "]"}]}], "}"}], " ", "&"}], ",", " ", 
   RowBox[{"Range", "[", "30", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232514065065093`*^9, 3.7232514954817514`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7232514716019254`*^9, 3.7232514961962605`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"21", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.723251500460309*^9, 3.7232515047053027`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.723251505390789*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"collatz", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", "==", " ", 
      RowBox[{"3", "*", "y"}]}], " ", "||", " ", 
     RowBox[{"x", " ", "==", " ", 
      RowBox[{
       RowBox[{"2", "*", "y"}], " ", "+", "1"}]}], "||", " ", 
     RowBox[{"y", " ", "==", " ", 
      RowBox[{"3", "*", "x"}]}], " ", "||", " ", 
     RowBox[{"y", "==", " ", 
      RowBox[{
       RowBox[{"2", "*", "x"}], "+", "1"}]}]}], ",", "1", ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.723251507880556*^9, 3.7232515688311977`*^9}, {
  3.7232517089861*^9, 3.723251711366791*^9}, {3.723251933269061*^9, 
  3.723251943750116*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"collatz", "[", 
  RowBox[{"3", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.723251577206433*^9, 3.723251584396532*^9}, {
  3.723251676091958*^9, 3.723251693972231*^9}, {3.7232517266081843`*^9, 
  3.7232517275848775`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.7232516949779415`*^9, 3.7232517284264708`*^9}, 
   3.723251948157241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"#", "&"}], ",", " ", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232517551084833`*^9, 3.7232517760357075`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.723251776391937*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], " ", "&"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.723251778381375*^9, 3.723251789369712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.723251790515525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], " ", "&"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723251793585734*^9, 3.72325180890073*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "9", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "16", ",", "16", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7232518116536565`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", " ", "+", " ", 
     RowBox[{"2", "#2"}]}], " ", "&"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232518133098307`*^9, 3.7232518485870895`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "9", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "10", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.723251850561493*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"collatz", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723251873831932*^9, 3.7232519028638496`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7232519056638412`*^9, 3.723251952393249*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"AdjacencyGraph", "[", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"collatz", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232519659682956`*^9, 3.7232519989162827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}, {Null, 
       SparseArray[
       Automatic, {50, 50}, 0, {
        1, {{0, 1, 3, 6, 8, 11, 14, 17, 19, 23, 25, 28, 31, 34, 36, 40, 42, 
          44, 46, 48, 49, 52, 53, 55, 57, 58, 58, 60, 60, 61, 62, 63, 63, 65, 
          65, 66, 67, 68, 68, 70, 70, 71, 72, 73, 73, 75, 75, 76, 77, 78, 
          78}, {{3}, {5}, {6}, {1}, {7}, {9}, {9}, {12}, {2}, {11}, {15}, {
          2}, {13}, {18}, {3}, {15}, {21}, {17}, {24}, {3}, {4}, {19}, {27}, {
          21}, {30}, {5}, {23}, {33}, {4}, {25}, {36}, {6}, {27}, {39}, {
          29}, {42}, {5}, {7}, {31}, {45}, {33}, {48}, {8}, {35}, {6}, {37}, {
          9}, {39}, {41}, {7}, {10}, {43}, {45}, {11}, {47}, {8}, {49}, {
          12}, {9}, {13}, {14}, {10}, {15}, {11}, {16}, {17}, {12}, {18}, {
          13}, {19}, {20}, {14}, {21}, {15}, {22}, {23}, {16}, {24}}}, 
         Pattern}]}, {
      FormatType -> TraditionalForm, GraphStyle -> "SmallNetwork"}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        Hue[0.625, 0.5, 0.7], 
        Thickness[Large], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$24", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$27", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$30", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$23", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$25", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$36", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$27", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$39", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$14", Automatic, Center], 
         DynamicLocation["VertexID$29", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$14", Automatic, Center], 
         DynamicLocation["VertexID$42", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$31", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$45", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$16", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$16", Automatic, Center], 
         DynamicLocation["VertexID$48", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$17", Automatic, Center], 
         DynamicLocation["VertexID$35", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$18", Automatic, Center], 
         DynamicLocation["VertexID$37", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$19", Automatic, Center], 
         DynamicLocation["VertexID$39", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$20", Automatic, Center], 
         DynamicLocation["VertexID$41", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$21", Automatic, Center], 
         DynamicLocation["VertexID$43", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$22", Automatic, Center], 
         DynamicLocation["VertexID$45", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$23", Automatic, Center], 
         DynamicLocation["VertexID$47", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$24", Automatic, Center], 
         DynamicLocation["VertexID$49", Automatic, Center]}]}, {
       Directive[
        Hue[0.125, 0.7, 0.9], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.3784945533268917`, -3.760928966982116}, {
           3.708575768015434, -3.760928966982116}, {
           3.8736163753597057`, -3.760928966982116}, {
           3.8736163753597057`, -3.5958883596378444`}, {
           3.8736163753597057`, -3.265807144949302}, {
           3.8736163753597057`, -3.1007665376050304`}, {
           3.708575768015434, -3.1007665376050304`}, {
           3.3784945533268917`, -3.1007665376050304`}, {
           3.21345394598262, -3.1007665376050304`}, {
           3.21345394598262, -3.265807144949302}, {
           3.21345394598262, -3.5958883596378444`}, {
           3.21345394598262, -3.760928966982116}, {
           3.3784945533268917`, -3.760928966982116}}}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.612267940709185, -5.666220014069352}, {
           6.942349155397728, -5.666220014069352}, {
           7.107389762741999, -5.666220014069352}, {
           7.107389762741999, -5.501179406725081}, {
           7.107389762741999, -5.171098192036538}, {
           7.107389762741999, -5.006057584692267}, {
           6.942349155397728, -5.006057584692267}, {
           6.612267940709185, -5.006057584692267}, {
           6.447227333364914, -5.006057584692267}, {
           6.447227333364914, -5.171098192036538}, {
           6.447227333364914, -5.501179406725081}, {
           6.447227333364914, -5.666220014069352}, {
           6.612267940709185, -5.666220014069352}}}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.907400552998566, -4.135455590796605}, {
           4.237481767687108, -4.135455590796605}, {
           4.4025223750313796`, -4.135455590796605}, {
           4.4025223750313796`, -3.9704149834523332`}, {
           4.4025223750313796`, -3.640333768763791}, {
           4.4025223750313796`, -3.4752931614195193`}, {
           4.237481767687108, -3.4752931614195193`}, {
           3.907400552998566, -3.4752931614195193`}, {
           3.7423599456542944`, -3.4752931614195193`}, {
           3.7423599456542944`, -3.640333768763791}, {
           3.7423599456542944`, -3.9704149834523332`}, {
           3.7423599456542944`, -4.135455590796605}, {
           3.907400552998566, -4.135455590796605}}}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           1.8709468479076528`, -5.412482185203566}, {
           2.2010280625961953`, -5.412482185203566}, {
           2.366068669940467, -5.412482185203566}, {
           2.366068669940467, -5.247441577859295}, {
           2.366068669940467, -4.9173603631707525`}, {
           2.366068669940467, -4.752319755826481}, {
           2.2010280625961953`, -4.752319755826481}, {
           1.8709468479076528`, -4.752319755826481}, {
           1.7059062405633814`, -4.752319755826481}, {
           1.7059062405633814`, -4.9173603631707525`}, {
           1.7059062405633814`, -5.247441577859295}, {
           1.7059062405633814`, -5.412482185203566}, {
           1.8709468479076528`, -5.412482185203566}}}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.349523331498585, -4.738448340478673}, {
           7.679604546187127, -4.738448340478673}, {
           7.844645153531398, -4.738448340478673}, {
           7.844645153531398, -4.573407733134402}, {
           7.844645153531398, -4.243326518445859}, {
           7.844645153531398, -4.078285911101588}, {
           7.679604546187127, -4.078285911101588}, {
           7.349523331498585, -4.078285911101588}, {
           7.184482724154313, -4.078285911101588}, {
           7.184482724154313, -4.243326518445859}, {
           7.184482724154313, -4.573407733134402}, {
           7.184482724154313, -4.738448340478673}, {
           7.349523331498585, -4.738448340478673}}}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.734325434059686, -6.456475741533412}, {
           6.064406648748228, -6.456475741533412}, {
           6.2294472560925, -6.456475741533412}, {
           6.2294472560925, -6.291435134189141}, {
           6.2294472560925, -5.961353919500598}, {
           6.2294472560925, -5.796313312156327}, {
           6.064406648748228, -5.796313312156327}, {
           5.734325434059686, -5.796313312156327}, {
           5.569284826715415, -5.796313312156327}, {
           5.569284826715415, -5.961353919500598}, {
           5.569284826715415, -6.291435134189141}, {
           5.569284826715415, -6.456475741533412}, {
           5.734325434059686, -6.456475741533412}}}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.01686974730581, -3.3420319526864923`}, {
           5.346950961994352, -3.3420319526864923`}, {
           5.511991569338623, -3.3420319526864923`}, {
           5.511991569338623, -3.1769913453422207`}, {
           5.511991569338623, -2.8469101306536784`}, {
           5.511991569338623, -2.6818695233094068`}, {
           5.346950961994352, -2.6818695233094068`}, {
           5.01686974730581, -2.6818695233094068`}, {
           4.851829139961539, -2.6818695233094068`}, {
           4.851829139961539, -2.8469101306536784`}, {
           4.851829139961539, -3.1769913453422207`}, {
           4.851829139961539, -3.3420319526864923`}, {
           5.01686974730581, -3.3420319526864923`}}}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           2.0758869256701664`, -8.580828711940589}, {
           2.4059681403587088`, -8.580828711940589}, {
           2.5710087477029804`, -8.580828711940589}, {
           2.5710087477029804`, -8.415788104596318}, {
           2.5710087477029804`, -8.085706889907774}, {
           2.5710087477029804`, -7.920666282563504}, {
           2.4059681403587088`, -7.920666282563504}, {
           2.0758869256701664`, -7.920666282563504}, {
           1.9108463183258948`, -7.920666282563504}, {
           1.9108463183258948`, -8.085706889907774}, {
           1.9108463183258948`, -8.415788104596318}, {
           1.9108463183258948`, -8.580828711940589}, {
           2.0758869256701664`, -8.580828711940589}}}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.0979113458780327`, -5.185579576066442}, {
           3.427992560566575, -5.185579576066442}, {
           3.5930331679108467`, -5.185579576066442}, {
           3.5930331679108467`, -5.020538968722171}, {
           3.5930331679108467`, -4.690457754033629}, {
           3.5930331679108467`, -4.525417146689358}, {
           3.427992560566575, -4.525417146689358}, {
           3.0979113458780327`, -4.525417146689358}, {
           2.932870738533761, -4.525417146689358}, {
           2.932870738533761, -4.690457754033629}, {
           2.932870738533761, -5.020538968722171}, {
           2.932870738533761, -5.185579576066442}, {
           3.0979113458780327`, -5.185579576066442}}}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.221318743160892, -1.2620091176991477`}, {
           4.551399957849434, -1.2620091176991477`}, {
           4.716440565193706, -1.2620091176991477`}, {
           4.716440565193706, -1.0969685103548763`}, {
           4.716440565193706, -0.7668872956663335}, {
           4.716440565193706, -0.6018466883220621}, {
           4.551399957849434, -0.6018466883220621}, {
           4.221318743160892, -0.6018466883220621}, {
           4.056278135816621, -0.6018466883220621}, {
           4.056278135816621, -0.7668872956663335}, {
           4.056278135816621, -1.0969685103548763`}, {
           4.056278135816621, -1.2620091176991477`}, {
           4.221318743160892, -1.2620091176991477`}}}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           8.740666563812825, -4.939456543988207}, {
           9.070747778501369, -4.939456543988207}, {
           9.23578838584564, -4.939456543988207}, {
           9.23578838584564, -4.774415936643936}, {
           9.23578838584564, -4.444334721955394}, {
           9.23578838584564, -4.2792941146111225`}, {
           9.070747778501369, -4.2792941146111225`}, {
           8.740666563812825, -4.2792941146111225`}, {
           8.575625956468555, -4.2792941146111225`}, {
           8.575625956468555, -4.444334721955394}, {
           8.575625956468555, -4.774415936643936}, {
           8.575625956468555, -4.939456543988207}, {
           8.740666563812825, -4.939456543988207}}}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.7923134272889205, -5.635188211554045}, {
           1.1223946419774633`, -5.635188211554045}, {
           1.2874352493217347`, -5.635188211554045}, {
           1.2874352493217347`, -5.470147604209774}, {
           1.2874352493217347`, -5.140066389521231}, {
           1.2874352493217347`, -4.97502578217696}, {
           1.1223946419774633`, -4.97502578217696}, {
           0.7923134272889205, -4.97502578217696}, {
           0.6272728199446491, -4.97502578217696}, {
           0.6272728199446491, -5.140066389521231}, {
           0.6272728199446491, -5.470147604209774}, {
           0.6272728199446491, -5.635188211554045}, {
           0.7923134272889205, -5.635188211554045}}}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.596623567710757, -6.321722117822097}, {
           4.926704782399299, -6.321722117822097}, {
           5.09174538974357, -6.321722117822097}, {
           5.09174538974357, -6.156681510477826}, {
           5.09174538974357, -5.826600295789284}, {
           5.09174538974357, -5.661559688445013}, {
           4.926704782399299, -5.661559688445013}, {
           4.596623567710757, -5.661559688445013}, {
           4.431582960366486, -5.661559688445013}, {
           4.431582960366486, -5.826600295789284}, {
           4.431582960366486, -6.156681510477826}, {
           4.431582960366486, -6.321722117822097}, {
           4.596623567710757, -6.321722117822097}}}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.590403440384798, -8.580828566522818}, {
           5.9204846550733405`, -8.580828566522818}, {
           6.085525262417612, -8.580828566522818}, {
           6.085525262417612, -8.415787959178548}, {
           6.085525262417612, -8.085706744490004}, {
           6.085525262417612, -7.920666137145734}, {
           5.9204846550733405`, -7.920666137145734}, {
           5.590403440384798, -7.920666137145734}, {
           5.425362833040527, -7.920666137145734}, {
           5.425362833040527, -8.085706744490004}, {
           5.425362833040527, -8.415787959178548}, {
           5.425362833040527, -8.580828566522818}, {
           5.590403440384798, -8.580828566522818}}}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.413972924380216, -3.708661048617451}, {
           6.7440541390687585`, -3.708661048617451}, {
           6.90909474641303, -3.708661048617451}, {
           6.90909474641303, -3.5436204412731795`}, {
           6.90909474641303, -3.213539226584637}, {
           6.90909474641303, -3.0484986192403656`}, {
           6.7440541390687585`, -3.0484986192403656`}, {
           6.413972924380216, -3.0484986192403656`}, {
           6.248932317035945, -3.0484986192403656`}, {
           6.248932317035945, -3.213539226584637}, {
           6.248932317035945, -3.5436204412731795`}, {
           6.248932317035945, -3.708661048617451}, {
           6.413972924380216, -3.708661048617451}}}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.579580548311322`, -5.791821637489416}, {
           10.909661762999866`, -5.791821637489416}, {
           11.074702370344136`, -5.791821637489416}, {
           11.074702370344136`, -5.626781030145144}, {
           11.074702370344136`, -5.296699815456602}, {
           11.074702370344136`, -5.131659208112331}, {
           10.909661762999866`, -5.131659208112331}, {
           10.579580548311322`, -5.131659208112331}, {
           10.414539940967051`, -5.131659208112331}, {
           10.414539940967051`, -5.296699815456602}, {
           10.414539940967051`, -5.626781030145144}, {
           10.414539940967051`, -5.791821637489416}, {
           10.579580548311322`, -5.791821637489416}}}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.1413262376171396`, -8.58082858683299}, {
           3.471407452305682, -8.58082858683299}, {
           3.6364480596499535`, -8.58082858683299}, {
           3.6364480596499535`, -8.41578797948872}, {
           3.6364480596499535`, -8.085706764800175}, {
           3.6364480596499535`, -7.920666157455905}, {
           3.471407452305682, -7.920666157455905}, {
           3.1413262376171396`, -7.920666157455905}, {
           2.976285630272868, -7.920666157455905}, {
           2.976285630272868, -8.085706764800175}, {
           2.976285630272868, -8.41578797948872}, {
           2.976285630272868, -8.58082858683299}, {
           3.1413262376171396`, -8.58082858683299}}}], "DynamicName", BoxID -> 
          "VertexID$17"], 
         InsetBox[
          FormBox["17", TraditionalForm], 
          DynamicLocation["VertexID$17", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.923004084791883, -7.378335360728108}, {
           6.253085299480425, -7.378335360728108}, {
           6.418125906824696, -7.378335360728108}, {
           6.418125906824696, -7.2132947533838365`}, {
           6.418125906824696, -6.883213538695294}, {
           6.418125906824696, -6.718172931351023}, {
           6.253085299480425, -6.718172931351023}, {
           5.923004084791883, -6.718172931351023}, {
           5.757963477447611, -6.718172931351023}, {
           5.757963477447611, -6.883213538695294}, {
           5.757963477447611, -7.2132947533838365`}, {
           5.757963477447611, -7.378335360728108}, {
           5.923004084791883, -7.378335360728108}}}], "DynamicName", BoxID -> 
          "VertexID$18"], 
         InsetBox[
          FormBox["18", TraditionalForm], 
          DynamicLocation["VertexID$18", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.2070721165862435`, -5.966655069864619}, {
           3.537153331274786, -5.966655069864619}, {
           3.7021939386190574`, -5.966655069864619}, {
           3.7021939386190574`, -5.801614462520348}, {
           3.7021939386190574`, -5.471533247831806}, {
           3.7021939386190574`, -5.3064926404875346`}, {
           3.537153331274786, -5.3064926404875346`}, {
           3.2070721165862435`, -5.3064926404875346`}, {
           3.042031509241972, -5.3064926404875346`}, {
           3.042031509241972, -5.471533247831806}, {
           3.042031509241972, -5.801614462520348}, {
           3.042031509241972, -5.966655069864619}, {
           3.2070721165862435`, -5.966655069864619}}}], "DynamicName", BoxID -> 
          "VertexID$19"], 
         InsetBox[
          FormBox["19", TraditionalForm], 
          DynamicLocation["VertexID$19", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           8.109363353646154, -8.58082856652282}, {
           8.439444568334698, -8.58082856652282}, {
           8.604485175678969, -8.58082856652282}, {
           8.604485175678969, -8.41578795917855}, {
           8.604485175678969, -8.085706744490006}, {
           8.604485175678969, -7.920666137145735}, {
           8.439444568334698, -7.920666137145735}, {
           8.109363353646154, -7.920666137145735}, {
           7.944322746301884, -7.920666137145735}, {
           7.944322746301884, -8.085706744490006}, {
           7.944322746301884, -8.41578795917855}, {
           7.944322746301884, -8.58082856652282}, {
           8.109363353646154, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$20"], 
         InsetBox[
          FormBox["20", TraditionalForm], 
          DynamicLocation["VertexID$20", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$20"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.643785628889918, -2.1589201183633278`}, {
           4.9738668435784605`, -2.1589201183633278`}, {
           5.138907450922732, -2.1589201183633278`}, {
           5.138907450922732, -1.9938795110190564`}, {
           5.138907450922732, -1.6637982963305136`}, {
           5.138907450922732, -1.4987576889862422`}, {
           4.9738668435784605`, -1.4987576889862422`}, {
           4.643785628889918, -1.4987576889862422`}, {
           4.478745021545647, -1.4987576889862422`}, {
           4.478745021545647, -1.6637982963305136`}, {
           4.478745021545647, -1.9938795110190564`}, {
           4.478745021545647, -2.1589201183633278`}, {
           4.643785628889918, -2.1589201183633278`}}}], "DynamicName", BoxID -> 
          "VertexID$21"], 
         InsetBox[
          FormBox["21", TraditionalForm], 
          DynamicLocation["VertexID$21", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$21"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.514666332108913, -2.4652130357510935`}, {
           7.844747546797455, -2.4652130357510935`}, {
           8.009788154141727, -2.4652130357510935`}, {
           8.009788154141727, -2.300172428406822}, {
           8.009788154141727, -1.9700912137182793`}, {
           8.009788154141727, -1.805050606374008}, {
           7.844747546797455, -1.805050606374008}, {
           7.514666332108913, -1.805050606374008}, {
           7.349625724764642, -1.805050606374008}, {
           7.349625724764642, -1.9700912137182793`}, {
           7.349625724764642, -2.300172428406822}, {
           7.349625724764642, -2.4652130357510935`}, {
           7.514666332108913, -2.4652130357510935`}}}], "DynamicName", BoxID -> 
          "VertexID$22"], 
         InsetBox[
          FormBox["22", TraditionalForm], 
          DynamicLocation["VertexID$22", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$22"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.554953938046548, -4.5896839731307715`}, {
           9.885035152735092, -4.5896839731307715`}, {
           10.050075760079363`, -4.5896839731307715`}, {
           10.050075760079363`, -4.4246433657865}, {
           10.050075760079363`, -4.094562151097958}, {
           10.050075760079363`, -3.9295215437536863`}, {
           9.885035152735092, -3.9295215437536863`}, {
           9.554953938046548, -3.9295215437536863`}, {
           9.389913330702278, -3.9295215437536863`}, {
           9.389913330702278, -4.094562151097958}, {
           9.389913330702278, -4.4246433657865}, {
           9.389913330702278, -4.5896839731307715`}, {
           9.554953938046548, -4.5896839731307715`}}}], "DynamicName", BoxID -> 
          "VertexID$23"], 
         InsetBox[
          FormBox["23", TraditionalForm], 
          DynamicLocation["VertexID$23", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$23"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           1.0123570127375332`, -8.58082858721117}, {
           1.342438227426076, -8.58082858721117}, {
           1.5074788347703474`, -8.58082858721117}, {
           1.5074788347703474`, -8.4157879798669}, {
           1.5074788347703474`, -8.085706765178356}, {
           1.5074788347703474`, -7.920666157834086}, {
           1.342438227426076, -7.920666157834086}, {
           1.0123570127375332`, -7.920666157834086}, {
           0.8473164053932618, -7.920666157834086}, {
           0.8473164053932618, -8.085706765178356}, {
           0.8473164053932618, -8.4157879798669}, {
           0.8473164053932618, -8.58082858721117}, {
           1.0123570127375332`, -8.58082858721117}}}], "DynamicName", BoxID -> 
          "VertexID$24"], 
         InsetBox[
          FormBox["24", TraditionalForm], 
          DynamicLocation["VertexID$24", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$24"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.1969071488052936, -6.045377501539034}, {
           0.5269883634938364, -6.045377501539034}, {
           0.6920289708381078, -6.045377501539034}, {
           0.6920289708381078, -5.8803368941947625`}, {
           0.6920289708381078, -5.55025567950622}, {
           0.6920289708381078, -5.385215072161949}, {
           0.5269883634938364, -5.385215072161949}, {
           0.1969071488052936, -5.385215072161949}, {
           0.031866541461022246`, -5.385215072161949}, {
           0.031866541461022246`, -5.55025567950622}, {
           0.031866541461022246`, -5.8803368941947625`}, {
           0.031866541461022246`, -6.045377501539034}, {
           0.1969071488052936, -6.045377501539034}}}], "DynamicName", BoxID -> 
          "VertexID$25"], 
         InsetBox[
          FormBox["25", TraditionalForm], 
          DynamicLocation["VertexID$25", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$25"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           8.62763449809494, -8.58082856652282}, {
           8.957715712783484, -8.58082856652282}, {
           9.122756320127754, -8.58082856652282}, {
           9.122756320127754, -8.41578795917855}, {
           9.122756320127754, -8.085706744490006}, {
           9.122756320127754, -7.920666137145735}, {
           8.957715712783484, -7.920666137145735}, {
           8.62763449809494, -7.920666137145735}, {
           8.46259389075067, -7.920666137145735}, {
           8.46259389075067, -8.085706744490006}, {
           8.46259389075067, -8.41578795917855}, {
           8.46259389075067, -8.58082856652282}, {
           8.62763449809494, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$26"], 
         InsetBox[
          FormBox["26", TraditionalForm], 
          DynamicLocation["VertexID$26", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$26"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.8246028238201824`, -5.774939933686808}, {
           4.154684038508725, -5.774939933686808}, {
           4.319724645852996, -5.774939933686808}, {
           4.319724645852996, -5.6098993263425365`}, {
           4.319724645852996, -5.279818111653994}, {
           4.319724645852996, -5.114777504309723}, {
           4.154684038508725, -5.114777504309723}, {
           3.8246028238201824`, -5.114777504309723}, {
           3.6595622164759107`, -5.114777504309723}, {
           3.6595622164759107`, -5.279818111653994}, {
           3.6595622164759107`, -5.6098993263425365`}, {
           3.6595622164759107`, -5.774939933686808}, {
           3.8246028238201824`, -5.774939933686808}}}], "DynamicName", BoxID -> 
          "VertexID$27"], 
         InsetBox[
          FormBox["27", TraditionalForm], 
          DynamicLocation["VertexID$27", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$27"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.145905642543726, -8.58082856652282}, {
           9.47598685723227, -8.58082856652282}, {
           9.64102746457654, -8.58082856652282}, {
           9.64102746457654, -8.41578795917855}, {
           9.64102746457654, -8.085706744490006}, {
           9.64102746457654, -7.920666137145735}, {
           9.47598685723227, -7.920666137145735}, {
           9.145905642543726, -7.920666137145735}, {
           8.980865035199455, -7.920666137145735}, {
           8.980865035199455, -8.085706744490006}, {
           8.980865035199455, -8.41578795917855}, {
           8.980865035199455, -8.58082856652282}, {
           9.145905642543726, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$28"], 
         InsetBox[
          FormBox["28", TraditionalForm], 
          DynamicLocation["VertexID$28", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$28"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.5910922091973685`, -8.580828566522822}, {
           6.921173423885911, -8.580828566522822}, {
           7.086214031230182, -8.580828566522822}, {
           7.086214031230182, -8.415787959178552}, {
           7.086214031230182, -8.085706744490007}, {
           7.086214031230182, -7.920666137145737}, {
           6.921173423885911, -7.920666137145737}, {
           6.5910922091973685`, -7.920666137145737}, {
           6.426051601853097, -7.920666137145737}, {
           6.426051601853097, -8.085706744490007}, {
           6.426051601853097, -8.415787959178552}, {
           6.426051601853097, -8.580828566522822}, {
           6.5910922091973685`, -8.580828566522822}}}], "DynamicName", BoxID -> 
          "VertexID$29"], 
         InsetBox[
          FormBox["29", TraditionalForm], 
          DynamicLocation["VertexID$29", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$29"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.963038440932584, -0.5768555492964418}, {
           4.293119655621126, -0.5768555492964418}, {
           4.458160262965397, -0.5768555492964418}, {
           4.458160262965397, -0.4118149419521704}, {
           4.458160262965397, -0.08173372726362763}, {4.458160262965397, 
           0.08330688008064374}, {4.293119655621126, 0.08330688008064374}, {
           3.963038440932584, 0.08330688008064374}, {3.797997833588312, 
           0.08330688008064374}, {3.797997833588312, -0.08173372726362763}, {
           3.797997833588312, -0.4118149419521704}, {
           3.797997833588312, -0.5768555492964418}, {
           3.963038440932584, -0.5768555492964418}}}], "DynamicName", BoxID -> 
          "VertexID$30"], 
         InsetBox[
          FormBox["30", TraditionalForm], 
          DynamicLocation["VertexID$30", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$30"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.4791862073826625`, -3.167965647004682}, {
           6.809267422071205, -3.167965647004682}, {
           6.974308029415476, -3.167965647004682}, {
           6.974308029415476, -3.0029250396604104`}, {
           6.974308029415476, -2.672843824971868}, {
           6.974308029415476, -2.5078032176275964`}, {
           6.809267422071205, -2.5078032176275964`}, {
           6.4791862073826625`, -2.5078032176275964`}, {
           6.314145600038391, -2.5078032176275964`}, {
           6.314145600038391, -2.672843824971868}, {
           6.314145600038391, -3.0029250396604104`}, {
           6.314145600038391, -3.167965647004682}, {
           6.4791862073826625`, -3.167965647004682}}}], "DynamicName", BoxID -> 
          "VertexID$31"], 
         InsetBox[
          FormBox["31", TraditionalForm], 
          DynamicLocation["VertexID$31", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$31"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.664176786992511, -8.58082856652282}, {
           9.994258001681056, -8.58082856652282}, {
           10.159298609025326`, -8.58082856652282}, {
           10.159298609025326`, -8.41578795917855}, {
           10.159298609025326`, -8.085706744490006}, {
           10.159298609025326`, -7.920666137145735}, {
           9.994258001681056, -7.920666137145735}, {
           9.664176786992511, -7.920666137145735}, {
           9.499136179648241, -7.920666137145735}, {
           9.499136179648241, -8.085706744490006}, {
           9.499136179648241, -8.41578795917855}, {
           9.499136179648241, -8.58082856652282}, {
           9.664176786992511, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$32"], 
         InsetBox[
          FormBox["32", TraditionalForm], 
          DynamicLocation["VertexID$32", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$32"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.719579870856647, -5.428646319714593}, {
           10.04966108554519, -5.428646319714593}, {
           10.214701692889461`, -5.428646319714593}, {
           10.214701692889461`, -5.263605712370322}, {
           10.214701692889461`, -4.93352449768178}, {
           10.214701692889461`, -4.768483890337508}, {
           10.04966108554519, -4.768483890337508}, {
           9.719579870856647, -4.768483890337508}, {
           9.554539263512376, -4.768483890337508}, {
           9.554539263512376, -4.93352449768178}, {
           9.554539263512376, -5.263605712370322}, {
           9.554539263512376, -5.428646319714593}, {
           9.719579870856647, -5.428646319714593}}}], "DynamicName", BoxID -> 
          "VertexID$33"], 
         InsetBox[
          FormBox["33", TraditionalForm], 
          DynamicLocation["VertexID$33", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$33"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.182447931441297`, -8.58082856652282}, {
           10.512529146129841`, -8.58082856652282}, {
           10.677569753474112`, -8.58082856652282}, {
           10.677569753474112`, -8.41578795917855}, {
           10.677569753474112`, -8.085706744490006}, {
           10.677569753474112`, -7.920666137145735}, {
           10.512529146129841`, -7.920666137145735}, {
           10.182447931441297`, -7.920666137145735}, {
           10.017407324097027`, -7.920666137145735}, {
           10.017407324097027`, -8.085706744490006}, {
           10.017407324097027`, -8.41578795917855}, {
           10.017407324097027`, -8.58082856652282}, {
           10.182447931441297`, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$34"], 
         InsetBox[
          FormBox["34", TraditionalForm], 
          DynamicLocation["VertexID$34", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$34"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.07282153947815, -8.580828421440687}, {
           4.402902754166693, -8.580828421440687}, {
           4.567943361510964, -8.580828421440687}, {
           4.567943361510964, -8.415787814096417}, {
           4.567943361510964, -8.085706599407873}, {
           4.567943361510964, -7.9206659920636024`}, {
           4.402902754166693, -7.9206659920636024`}, {
           4.07282153947815, -7.9206659920636024`}, {
           3.907780932133879, -7.9206659920636024`}, {
           3.907780932133879, -8.085706599407873}, {
           3.907780932133879, -8.415787814096417}, {
           3.907780932133879, -8.580828421440687}, {
           4.07282153947815, -8.580828421440687}}}], "DynamicName", BoxID -> 
          "VertexID$35"], 
         InsetBox[
          FormBox["35", TraditionalForm], 
          DynamicLocation["VertexID$35", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$35"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.08173372726362763, -5.504687374829551}, {
           0.4118149419521704, -5.504687374829551}, {
           0.5768555492964418, -5.504687374829551}, {
           0.5768555492964418, -5.33964676748528}, {
           0.5768555492964418, -5.0095655527967375`}, {
           0.5768555492964418, -4.844524945452466}, {
           0.4118149419521704, -4.844524945452466}, {
           0.08173372726362763, -4.844524945452466}, {-0.08330688008064374, \
-4.844524945452466}, {-0.08330688008064374, -5.0095655527967375`}, \
{-0.08330688008064374, -5.33964676748528}, {-0.08330688008064374, \
-5.504687374829551}, {0.08173372726362763, -5.504687374829551}}}], 
          "DynamicName", BoxID -> "VertexID$36"], 
         InsetBox[
          FormBox["36", TraditionalForm], 
          DynamicLocation["VertexID$36", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$36"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.054072020803765, -8.087279751889252}, {
           6.384153235492307, -8.087279751889252}, {
           6.549193842836578, -8.087279751889252}, {
           6.549193842836578, -7.922239144544981}, {
           6.549193842836578, -7.592157929856438}, {
           6.549193842836578, -7.427117322512167}, {
           6.384153235492307, -7.427117322512167}, {
           6.054072020803765, -7.427117322512167}, {
           5.889031413459493, -7.427117322512167}, {
           5.889031413459493, -7.592157929856438}, {
           5.889031413459493, -7.922239144544981}, {
           5.889031413459493, -8.087279751889252}, {
           6.054072020803765, -8.087279751889252}}}], "DynamicName", BoxID -> 
          "VertexID$37"], 
         InsetBox[
          FormBox["37", TraditionalForm], 
          DynamicLocation["VertexID$37", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$37"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.700719075890083`, -8.58082856652282}, {
           11.030800290578627`, -8.58082856652282}, {
           11.195840897922897`, -8.58082856652282}, {
           11.195840897922897`, -8.41578795917855}, {
           11.195840897922897`, -8.085706744490006}, {
           11.195840897922897`, -7.920666137145735}, {
           11.030800290578627`, -7.920666137145735}, {
           10.700719075890083`, -7.920666137145735}, {
           10.535678468545813`, -7.920666137145735}, {
           10.535678468545813`, -8.085706744490006}, {
           10.535678468545813`, -8.41578795917855}, {
           10.535678468545813`, -8.58082856652282}, {
           10.700719075890083`, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$38"], 
         InsetBox[
          FormBox["38", TraditionalForm], 
          DynamicLocation["VertexID$38", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$38"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.814367358459575, -6.438484356728294}, {
           4.144448573148118, -6.438484356728294}, {
           4.309489180492389, -6.438484356728294}, {
           4.309489180492389, -6.273443749384023}, {
           4.309489180492389, -5.94336253469548}, {
           4.309489180492389, -5.778321927351209}, {
           4.144448573148118, -5.778321927351209}, {
           3.814367358459575, -5.778321927351209}, {
           3.6493267511153036`, -5.778321927351209}, {
           3.6493267511153036`, -5.94336253469548}, {
           3.6493267511153036`, -6.273443749384023}, {
           3.6493267511153036`, -6.438484356728294}, {
           3.814367358459575, -6.438484356728294}}}], "DynamicName", BoxID -> 
          "VertexID$39"], 
         InsetBox[
          FormBox["39", TraditionalForm], 
          DynamicLocation["VertexID$39", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$39"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           11.218990220338869`, -8.58082856652282}, {
           11.549071435027413`, -8.58082856652282}, {
           11.714112042371683`, -8.58082856652282}, {
           11.714112042371683`, -8.41578795917855}, {
           11.714112042371683`, -8.085706744490006}, {
           11.714112042371683`, -7.920666137145735}, {
           11.549071435027413`, -7.920666137145735}, {
           11.218990220338869`, -7.920666137145735}, {
           11.053949612994598`, -7.920666137145735}, {
           11.053949612994598`, -8.085706744490006}, {
           11.053949612994598`, -8.41578795917855}, {
           11.053949612994598`, -8.58082856652282}, {
           11.218990220338869`, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$40"], 
         InsetBox[
          FormBox["40", TraditionalForm], 
          DynamicLocation["VertexID$40", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$40"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.109363353646155, -8.58082856652282}, {
           7.4394445683346975`, -8.58082856652282}, {
           7.604485175678969, -8.58082856652282}, {
           7.604485175678969, -8.41578795917855}, {
           7.604485175678969, -8.085706744490006}, {
           7.604485175678969, -7.920666137145735}, {
           7.4394445683346975`, -7.920666137145735}, {
           7.109363353646155, -7.920666137145735}, {
           6.944322746301884, -7.920666137145735}, {
           6.944322746301884, -8.085706744490006}, {
           6.944322746301884, -8.41578795917855}, {
           6.944322746301884, -8.58082856652282}, {
           7.109363353646155, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$41"], 
         InsetBox[
          FormBox["41", TraditionalForm], 
          DynamicLocation["VertexID$41", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$41"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.591092683926937, -8.580828566522822}, {
           4.921173898615479, -8.580828566522822}, {
           5.0862145059597506`, -8.580828566522822}, {
           5.0862145059597506`, -8.415787959178552}, {
           5.0862145059597506`, -8.085706744490007}, {
           5.0862145059597506`, -7.920666137145737}, {
           4.921173898615479, -7.920666137145737}, {
           4.591092683926937, -7.920666137145737}, {
           4.426052076582666, -7.920666137145737}, {
           4.426052076582666, -8.085706744490007}, {
           4.426052076582666, -8.415787959178552}, {
           4.426052076582666, -8.580828566522822}, {
           4.591092683926937, -8.580828566522822}}}], "DynamicName", BoxID -> 
          "VertexID$42"], 
         InsetBox[
          FormBox["42", TraditionalForm], 
          DynamicLocation["VertexID$42", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$42"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.741209041310491, -1.5352304755193846`}, {
           5.071290255999033, -1.5352304755193846`}, {
           5.236330863343304, -1.5352304755193846`}, {
           5.236330863343304, -1.3701898681751132`}, {
           5.236330863343304, -1.0401086534865704`}, {
           5.236330863343304, -0.875068046142299}, {
           5.071290255999033, -0.875068046142299}, {
           4.741209041310491, -0.875068046142299}, {
           4.576168433966219, -0.875068046142299}, {
           4.576168433966219, -1.0401086534865704`}, {
           4.576168433966219, -1.3701898681751132`}, {
           4.576168433966219, -1.5352304755193846`}, {
           4.741209041310491, -1.5352304755193846`}}}], "DynamicName", BoxID -> 
          "VertexID$43"], 
         InsetBox[
          FormBox["43", TraditionalForm], 
          DynamicLocation["VertexID$43", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$43"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.08173372726362801, -9.074377381156387}, {
           0.4118149419521707, -9.074377381156387}, {
           0.5768555492964421, -9.074377381156387}, {
           0.5768555492964421, -8.909336773812116}, {
           0.5768555492964421, -8.579255559123572}, {
           0.5768555492964421, -8.414214951779302}, {
           0.4118149419521707, -8.414214951779302}, {
           0.08173372726362801, -8.414214951779302}, {-0.08330688008064335, \
-8.414214951779302}, {-0.08330688008064335, -8.579255559123572}, \
{-0.08330688008064335, -8.909336773812116}, {-0.08330688008064335, \
-9.074377381156387}, {0.08173372726362801, -9.074377381156387}}}], 
          "DynamicName", BoxID -> "VertexID$44"], 
         InsetBox[
          FormBox["44", TraditionalForm], 
          DynamicLocation["VertexID$44", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$44"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.066305092716173, -3.02553834992664}, {
           7.396386307404716, -3.02553834992664}, {
           7.561426914748987, -3.02553834992664}, {
           7.561426914748987, -2.8604977425823686`}, {
           7.561426914748987, -2.530416527893826}, {
           7.561426914748987, -2.3653759205495546`}, {
           7.396386307404716, -2.3653759205495546`}, {
           7.066305092716173, -2.3653759205495546`}, {
           6.901264485371902, -2.3653759205495546`}, {
           6.901264485371902, -2.530416527893826}, {
           6.901264485371902, -2.8604977425823686`}, {
           6.901264485371902, -3.02553834992664}, {
           7.066305092716173, -3.02553834992664}}}], "DynamicName", BoxID -> 
          "VertexID$45"], 
         InsetBox[
          FormBox["45", TraditionalForm], 
          DynamicLocation["VertexID$45", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$45"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.9669096064383034`, -9.074377381156387}, {
           4.296990821126846, -9.074377381156387}, {
           4.462031428471117, -9.074377381156387}, {
           4.462031428471117, -8.909336773812116}, {
           4.462031428471117, -8.579255559123572}, {
           4.462031428471117, -8.414214951779302}, {
           4.296990821126846, -8.414214951779302}, {
           3.9669096064383034`, -8.414214951779302}, {
           3.8018689990940318`, -8.414214951779302}, {
           3.8018689990940318`, -8.579255559123572}, {
           3.8018689990940318`, -8.909336773812116}, {
           3.8018689990940318`, -9.074377381156387}, {
           3.9669096064383034`, -9.074377381156387}}}], "DynamicName", BoxID -> 
          "VertexID$46"], 
         InsetBox[
          FormBox["46", TraditionalForm], 
          DynamicLocation["VertexID$46", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$46"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.203629107313517`, -4.307858066428533}, {
           10.533710322002062`, -4.307858066428533}, {
           10.698750929346332`, -4.307858066428533}, {
           10.698750929346332`, -4.142817459084262}, {
           10.698750929346332`, -3.81273624439572}, {
           10.698750929346332`, -3.647695637051448}, {
           10.533710322002062`, -3.647695637051448}, {
           10.203629107313517`, -3.647695637051448}, {
           10.038588499969247`, -3.647695637051448}, {
           10.038588499969247`, -3.81273624439572}, {
           10.038588499969247`, -4.142817459084262}, {
           10.038588499969247`, -4.307858066428533}, {
           10.203629107313517`, -4.307858066428533}}}], "DynamicName", BoxID -> 
          "VertexID$47"], 
         InsetBox[
          FormBox["47", TraditionalForm], 
          DynamicLocation["VertexID$47", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$47"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           11.243712695571855`, -6.049389619821914}, {
           11.573793910260399`, -6.049389619821914}, {
           11.73883451760467, -6.049389619821914}, {
           11.73883451760467, -5.884349012477643}, {
           11.73883451760467, -5.554267797789101}, {
           11.73883451760467, -5.38922719044483}, {
           11.573793910260399`, -5.38922719044483}, {
           11.243712695571855`, -5.38922719044483}, {
           11.078672088227584`, -5.38922719044483}, {
           11.078672088227584`, -5.554267797789101}, {
           11.078672088227584`, -5.884349012477643}, {
           11.078672088227584`, -6.049389619821914}, {
           11.243712695571855`, -6.049389619821914}}}], "DynamicName", BoxID -> 
          "VertexID$48"], 
         InsetBox[
          FormBox["48", TraditionalForm], 
          DynamicLocation["VertexID$48", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$48"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.08173372726362763, -8.58082842110505}, {
           0.4118149419521704, -8.58082842110505}, {
           0.5768555492964418, -8.58082842110505}, {
           0.5768555492964418, -8.41578781376078}, {
           0.5768555492964418, -8.085706599072235}, {
           0.5768555492964418, -7.920665991727965}, {
           0.4118149419521704, -7.920665991727965}, {
           0.08173372726362763, -7.920665991727965}, {-0.08330688008064374, \
-7.920665991727965}, {-0.08330688008064374, -8.085706599072235}, \
{-0.08330688008064374, -8.41578781376078}, {-0.08330688008064374, \
-8.58082842110505}, {0.08173372726362763, -8.58082842110505}}}], 
          "DynamicName", BoxID -> "VertexID$49"], 
         InsetBox[
          FormBox["49", TraditionalForm], 
          DynamicLocation["VertexID$49", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$49"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.852085485612979, -9.074377381156387}, {
           8.182166700301522, -9.074377381156387}, {
           8.347207307645792, -9.074377381156387}, {
           8.347207307645792, -8.909336773812116}, {
           8.347207307645792, -8.579255559123572}, {
           8.347207307645792, -8.414214951779302}, {
           8.182166700301522, -8.414214951779302}, {
           7.852085485612979, -8.414214951779302}, {
           7.687044878268708, -8.414214951779302}, {
           7.687044878268708, -8.579255559123572}, {
           7.687044878268708, -8.909336773812116}, {
           7.687044878268708, -9.074377381156387}, {
           7.852085485612979, -9.074377381156387}}}], "DynamicName", BoxID -> 
          "VertexID$50"], 
         InsetBox[
          FormBox["50", TraditionalForm], 
          DynamicLocation["VertexID$50", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$50"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{2.760693309010094, 
       320.2393066909899}, {-126.2393066909899, 121.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.7232520169211826`*^9, 3.723252017068282*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Inherited\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Inherited\\\", \\\"[\\\", \\\"\\\\\\\"State\\\\\\\"\\\", \
\\\"]\\\"}]\\) is Protected.\"",2,97,34,17818900057202025421,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.723252016159642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot3D", "[", 
  RowBox[{"AdjacencyGraph", "[", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"collatz", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "50"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.723252099836915*^9, 3.7232521077716527`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxlkmtME1YYhmsZiEg7oLRF6NaWO+MiNKVWRjmnNDIIlwWcW10UUEALOJkW
hSGSABGVi9wnULygG8EBAyECC2gPyE1paHRAYRDXGIReKCHFQlgFhpOQxZ7k
+/PkzZM333foJ1OiErAYDIaxNUZb84IX0VDNpUGKaeFjM8+9KNv/6PVVwgIo
pJVU7PW2hhrAW8etE1GPAF/+Q7ECBBW1rtFyPoes5ms44k94dLHWKRWfqwYH
XMueyXMdYBP3Xfg7KQHtVpRPlQoWwO+bGBZeYwFrU/8KFyZZocKvfhYdWlIA
H0VRpamWDDtQh+j8sg1ak2yMsE4rQM1jUWjn+D4YgCfHaCZMUXnW9DIvSA1a
H84c8tHugo+qQyyuIhrSS6xnbYyNAkS2fiZPzOiwzF0FhN4ENGAssxUkqsGZ
AGa2/K4dHDbenFTPLorDiC6+waFqUHphcATXaAKjvs2RM9gE1L7gcJwPVCAy
YqXh14dO0PZN4/B8qjXyXz2mHIjQAPWl5abYTApUfjNwmU+1QTdjjZ94RCjB
xYKhU65EMiy55eL2vk/yqF7lkbaHw0tdNNEkW8N83jROd9IcZbrkeEEzBXDt
5VzpbtWAHor+/JzAGnVJB0d3bawC/j1nKSndDEqq8p3ee3JFeS9rhnUcqriu
ZSyNDDO5wpYHv1HQs4JAdsnZedB5KYN7TUeD2UEvxnSRJOQ1eoIX0awCXV9g
6nxENFi83Qez/WLwePNImS30GBhMSGrcEHvVm4+PtS6C9OI8qWTEAtprl7Bx
m1iEDhu9OsBuAbG+FW1xdzDQ77XTvSA+AR2tYsqRhwycrWLsd5NrQSy15r+e
2Lngsp4eHedW31DuPpwLzM8SzDSQrZEyq5dHYWlB79XgzKhGukEf/oCWeCWR
CvOZnElmHxGlsZc8K0JU4PlsyXfCbnuDfLQopYBOsoNFH/G3UXmCP/ZTIC05
Ou/p31KxviG9stRSBaSFwQnOWAL0H/9ENiHbg+iO9507ArXgT+4Uo2LEwcDf
RGqmykzWASukW9i/QEAkK+UdTvwymLlNxz+adjTs311gKddZwKQ648D/80/j
HM4dXHGGGYHqePFtIiqMktjFh86DXyRpkxlMMuwM81RY5lIR+jp+bah9DrzR
JyrH1U4G/qHn3vORD6iw6x+7lvYYG3RCJUxwlyjBIr+tf0XvbJD/8QgmMI71
2Q7vbT79ZSijwT/pAmWYTiLAG9v8buipAqOXlf6zcsey2hQ7mLlh2T/VuCI+
oqlP6KrXAfsPewRPK9jRV8T0Hf8ZXIdb9XErmKQYOpzjvhu5142dU6dOAN9B
4WV8mwX8OP9WGbt+8/4qKI7vC38dQtjhcNvPVjKzDvZu/f8Yv6J8Vz3Yvh+Q
jmI/7HP2VQz+GJdzPez7lGIGzcD/L/yYCWA=
    "], {
     {RGBColor[0.5, 0., 0.], 
      Line3DBox[{{1, 3}, {2, 5}, {2, 6}, {3, 7}, {3, 9}, {4, 9}, {4, 12}, {5, 
       11}, {5, 15}, {6, 13}, {6, 18}, {7, 15}, {7, 21}, {8, 17}, {8, 24}, {9,
        19}, {9, 27}, {10, 21}, {10, 30}, {11, 23}, {11, 33}, {12, 25}, {12, 
       36}, {13, 27}, {13, 39}, {14, 29}, {14, 42}, {15, 31}, {15, 45}, {16, 
       33}, {16, 48}, {17, 35}, {18, 37}, {19, 39}, {20, 41}, {21, 43}, {22, 
       45}, {23, 47}, {24, 49}}]}, 
     {RGBColor[0, 0, 0.7], 
      TagBox[
       TooltipBox[Point3DBox[1],
        "1"],
       Annotation[#, 1, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[2],
        "2"],
       Annotation[#, 2, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[3],
        "3"],
       Annotation[#, 3, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[4],
        "4"],
       Annotation[#, 4, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[5],
        "5"],
       Annotation[#, 5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[6],
        "6"],
       Annotation[#, 6, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[7],
        "7"],
       Annotation[#, 7, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[8],
        "8"],
       Annotation[#, 8, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[9],
        "9"],
       Annotation[#, 9, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[10],
        "10"],
       Annotation[#, 10, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[11],
        "11"],
       Annotation[#, 11, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[12],
        "12"],
       Annotation[#, 12, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[13],
        "13"],
       Annotation[#, 13, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[14],
        "14"],
       Annotation[#, 14, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[15],
        "15"],
       Annotation[#, 15, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[16],
        "16"],
       Annotation[#, 16, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[17],
        "17"],
       Annotation[#, 17, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[18],
        "18"],
       Annotation[#, 18, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[19],
        "19"],
       Annotation[#, 19, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[20],
        "20"],
       Annotation[#, 20, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[21],
        "21"],
       Annotation[#, 21, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[22],
        "22"],
       Annotation[#, 22, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[23],
        "23"],
       Annotation[#, 23, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[24],
        "24"],
       Annotation[#, 24, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[25],
        "25"],
       Annotation[#, 25, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[26],
        "26"],
       Annotation[#, 26, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[27],
        "27"],
       Annotation[#, 27, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[28],
        "28"],
       Annotation[#, 28, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[29],
        "29"],
       Annotation[#, 29, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[30],
        "30"],
       Annotation[#, 30, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[31],
        "31"],
       Annotation[#, 31, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[32],
        "32"],
       Annotation[#, 32, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[33],
        "33"],
       Annotation[#, 33, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[34],
        "34"],
       Annotation[#, 34, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[35],
        "35"],
       Annotation[#, 35, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[36],
        "36"],
       Annotation[#, 36, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[37],
        "37"],
       Annotation[#, 37, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[38],
        "38"],
       Annotation[#, 38, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[39],
        "39"],
       Annotation[#, 39, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[40],
        "40"],
       Annotation[#, 40, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[41],
        "41"],
       Annotation[#, 41, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[42],
        "42"],
       Annotation[#, 42, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[43],
        "43"],
       Annotation[#, 43, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[44],
        "44"],
       Annotation[#, 44, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[45],
        "45"],
       Annotation[#, 45, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[46],
        "46"],
       Annotation[#, 46, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[47],
        "47"],
       Annotation[#, 47, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[48],
        "48"],
       Annotation[#, 48, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[49],
        "49"],
       Annotation[#, 49, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[50],
        "50"],
       Annotation[#, 50, "Tooltip"]& ]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxlkmtME1YYhmsZiEg7oLRF6NaWO+MiNKVWRjmnNDIIlwWcW10UUEALOJkW
hSGSABGVi9wnULygG8EBAyECC2gPyE1paHRAYRDXGIReKCHFQlgFhpOQxZ7k
+/PkzZM333foJ1OiErAYDIaxNUZb84IX0VDNpUGKaeFjM8+9KNv/6PVVwgIo
pJVU7PW2hhrAW8etE1GPAF/+Q7ECBBW1rtFyPoes5ms44k94dLHWKRWfqwYH
XMueyXMdYBP3Xfg7KQHtVpRPlQoWwO+bGBZeYwFrU/8KFyZZocKvfhYdWlIA
H0VRpamWDDtQh+j8sg1ak2yMsE4rQM1jUWjn+D4YgCfHaCZMUXnW9DIvSA1a
H84c8tHugo+qQyyuIhrSS6xnbYyNAkS2fiZPzOiwzF0FhN4ENGAssxUkqsGZ
AGa2/K4dHDbenFTPLorDiC6+waFqUHphcATXaAKjvs2RM9gE1L7gcJwPVCAy
YqXh14dO0PZN4/B8qjXyXz2mHIjQAPWl5abYTApUfjNwmU+1QTdjjZ94RCjB
xYKhU65EMiy55eL2vk/yqF7lkbaHw0tdNNEkW8N83jROd9IcZbrkeEEzBXDt
5VzpbtWAHor+/JzAGnVJB0d3bawC/j1nKSndDEqq8p3ee3JFeS9rhnUcqriu
ZSyNDDO5wpYHv1HQs4JAdsnZedB5KYN7TUeD2UEvxnSRJOQ1eoIX0awCXV9g
6nxENFi83Qez/WLwePNImS30GBhMSGrcEHvVm4+PtS6C9OI8qWTEAtprl7Bx
m1iEDhu9OsBuAbG+FW1xdzDQ77XTvSA+AR2tYsqRhwycrWLsd5NrQSy15r+e
2Lngsp4eHedW31DuPpwLzM8SzDSQrZEyq5dHYWlB79XgzKhGukEf/oCWeCWR
CvOZnElmHxGlsZc8K0JU4PlsyXfCbnuDfLQopYBOsoNFH/G3UXmCP/ZTIC05
Ou/p31KxviG9stRSBaSFwQnOWAL0H/9ENiHbg+iO9507ArXgT+4Uo2LEwcDf
RGqmykzWASukW9i/QEAkK+UdTvwymLlNxz+adjTs311gKddZwKQ648D/80/j
HM4dXHGGGYHqePFtIiqMktjFh86DXyRpkxlMMuwM81RY5lIR+jp+bah9DrzR
JyrH1U4G/qHn3vORD6iw6x+7lvYYG3RCJUxwlyjBIr+tf0XvbJD/8QgmMI71
2Q7vbT79ZSijwT/pAmWYTiLAG9v8buipAqOXlf6zcsey2hQ7mLlh2T/VuCI+
oqlP6KrXAfsPewRPK9jRV8T0Hf8ZXIdb9XErmKQYOpzjvhu5142dU6dOAN9B
4WV8mwX8OP9WGbt+8/4qKI7vC38dQtjhcNvPVjKzDvZu/f8Yv6J8Vz3Yvh+Q
jmI/7HP2VQz+GJdzPez7lGIGzcD/L/yYCWA=
     "]]& ],
  AspectRatio->Automatic,
  ImageSize->{339.6379470404637, 210.9969398775243},
  ImageSizeRaw->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{0.6344763892625361, -2.672295672512146, 1.976430001325934},
  ViewVertical->{-0.032146334051465886`, -0.022149010264725037`, 
   6.639057842892529}]], "Output",
 CellChangeTimes->{3.723252110932603*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7232516726314945`*^9, 3.7232516726405306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"#", ",", "7"}], "]"}], " ", "&"}], ",", 
   RowBox[{"Range", "[", "100", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723252138576202*^9, 3.7232521658096905`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "0", ",", "1", 
   ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "0", ",", "1", ",", 
   "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "0", ",", "1", ",", "2", 
   ",", "3", ",", "4", ",", "5", ",", "6", ",", "0", ",", "1", ",", "2", ",", 
   "3", ",", "4", ",", "5", ",", "6", ",", "0", ",", "1", ",", "2", ",", "3", 
   ",", "4", ",", "5", ",", "6", ",", "0", ",", "1", ",", "2", ",", "3", ",", 
   "4", ",", "5", ",", "6", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", 
   ",", "5", ",", "6", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
   "5", ",", "6", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
   ",", "6", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", 
   "6", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", 
   ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
   "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "0", 
   ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.7232521666352715`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"#", ",", "7"}], "]"}], " ", "&"}], ",", 
     RowBox[{"Range", "[", "100", "]"}]}], "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.723252169304161*^9, 3.72325219755857*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "13", "}"}], ",", 
   RowBox[{"{", "20", "}"}], ",", 
   RowBox[{"{", "27", "}"}], ",", 
   RowBox[{"{", "34", "}"}], ",", 
   RowBox[{"{", "41", "}"}], ",", 
   RowBox[{"{", "48", "}"}], ",", 
   RowBox[{"{", "55", "}"}], ",", 
   RowBox[{"{", "62", "}"}], ",", 
   RowBox[{"{", "69", "}"}], ",", 
   RowBox[{"{", "76", "}"}], ",", 
   RowBox[{"{", "83", "}"}], ",", 
   RowBox[{"{", "90", "}"}], ",", 
   RowBox[{"{", "97", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.723252198306101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "&"}], ",", " ", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "7"}], "]"}], " ", "&"}], ",", 
       RowBox[{"Range", "[", "100", "]"}]}], "]"}], ",", "6"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723252233969328*^9, 3.7232522505076118`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "13", ",", "20", ",", "27", ",", "34", ",", "41", ",", "48", ",", 
   "55", ",", "62", ",", "69", ",", "76", ",", "83", ",", "90", ",", "97"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7232522516924534`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5", ",", "6"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232522910910606`*^9, 3.7232523157084885`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "2", ",", "3", ",", "4", ",", "2", ",", "5", 
   ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.7232523172786036`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", "3"}], "]"}], " ", "\[Equal]", "0"}], " ", "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7232523191099033`*^9, 3.7232523641910324`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.723252364711402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomReal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.723252374900276*^9, 3.7232523934924755`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.24560826578287576`", ",", "0.9544767893329484`", ",", 
   "0.7172958494912356`", ",", "0.8700739355445786`", ",", 
   "0.34704028261714415`", ",", "0.9510856876110299`", ",", 
   "0.6152354112531597`"}], "}"}]], "Output",
 CellChangeTimes->{3.723252394091016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#1", "\[GreaterEqual]", " ", "#2"}], " ", "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723252395633117*^9, 3.723252436327095*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9766080583170469`", ",", "0.7089647249447808`", ",", 
   "0.6614683509205426`", ",", "0.5229913490854776`", ",", 
   "0.2540653516912157`", ",", "0.1638816714637974`", ",", 
   "0.06626201237165463`"}], "}"}]], "Output",
 CellChangeTimes->{3.7232524371286917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<mystring\>\""], "Input",
 CellChangeTimes->{{3.723252447578082*^9, 3.72325245986838*^9}}],

Cell[BoxData["\<\"mystring\"\>"], "Output",
 CellChangeTimes->{3.7232524607720203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<dog\>\"", ",", " ", "\"\<cat\>\"", ",", " ", "\"\<Fish\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723252497143527*^9, 3.7232525168205423`*^9}}],

Cell[BoxData["\<\"dogcatFish\"\>"], "Output",
 CellChangeTimes->{3.723252517560068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Stra", " ", "=", " ", 
  RowBox[{"ToString", "[", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "13", ",", "20", ",", "27", ",", "34", ",", "41", ",", "48", 
     ",", "55", ",", "62", ",", "69", ",", "76", ",", "83", ",", "90", ",", 
     "97"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7232525373657417`*^9, 3.7232525433499913`*^9}, {
  3.72325257369862*^9, 3.7232525765466356`*^9}}],

Cell[BoxData["\<\"{6, 13, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, \
97}\"\>"], "Output",
 CellChangeTimes->{3.7232525441195383`*^9, 3.72325257865755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"Stra", ",", " ", "\"\<dog\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7232525837881937`*^9, 3.72325259560659*^9}}],

Cell[BoxData["\<\"{6, 13, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, \
97}dog\"\>"], "Output",
 CellChangeTimes->{3.7232525961539793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{"{", 
   RowBox[{
   "6", ",", "13", ",", "20", ",", "27", ",", "34", ",", "41", ",", "48", ",",
     "55", ",", "62", ",", "69", ",", "76", ",", "83", ",", "90", ",", "97"}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7232526043219347`*^9, 3.7232526097548003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "13", ",", "20", ",", "27", ",", "34", ",", "41", ",", "48", ",", 
   "55", ",", "62", ",", "69", ",", "76", ",", "83", ",", "90", ",", "97"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7232526140138226`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringSplit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "6", ",", "13", ",", "20", ",", "27", ",", "34", ",", "41", ",", "48", 
     ",", "55", ",", "62", ",", "69", ",", "76", ",", "83", ",", "90", ",", 
     "97"}], "}"}], ",", "\"\<1\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7232526257055283`*^9, 3.72325263843157*^9}}],

Cell[BoxData[
 TemplateBox[{
  "StringSplit","strse",
   "\"String or list of strings expected at position \\!\\(\\*RowBox[{\\\"1\\\
\"}]\\) in \\!\\(\\*RowBox[{\\\"StringSplit\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"13\\\", \
\\\",\\\", \\\"20\\\", \\\",\\\", \\\"27\\\", \\\",\\\", \\\"34\\\", \
\\\",\\\", \\\"41\\\", \\\",\\\", \\\"48\\\", \\\",\\\", \\\"55\\\", \
\\\",\\\", \\\"62\\\", \\\",\\\", \\\"69\\\", \\\",\\\", \\\"76\\\", \
\\\",\\\", \\\"83\\\", \\\",\\\", \\\"90\\\", \\\",\\\", \\\"97\\\"}], \
\\\"}\\\"}], \\\",\\\", \\\"\\\\\\\"1\\\\\\\"\\\"}], \\\"]\\\"}]\\).\"",2,112,
   36,17818900057202025421,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.723252639921262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringSplit", "[", 
  RowBox[{
  "\"\<{6,13,20,27,34,41,48,55,62,69,76,83,90,97}\>\"", ",", "\"\<1\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723252645309088*^9, 3.723252651715644*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{6,\"\>", ",", "\<\"3,20,27,34,4\"\>", 
   ",", "\<\",48,55,62,69,76,83,90,97}\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7232526521449413`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<{6,13,20,27,34,41,48,55,62,69,76,83,90,97}\>\"", ",", 
   RowBox[{"\"\<1\>\"", "\[Rule]", " ", "\"\<10\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232524530289526`*^9, 3.723252453778486*^9}, {
  3.723252667278795*^9, 3.7232526941384373`*^9}}],

Cell[BoxData["\<\"{6,103,20,27,34,410,48,55,62,69,76,83,90,97}\"\>"], "Output",
 CellChangeTimes->{3.723252694914982*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Characters", "[", "\"\<Catfish\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.723252710158222*^9, 3.723252717705576*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C\"\>", ",", "\<\"a\"\>", ",", "\<\"t\"\>", ",", "\<\"f\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"s\"\>", ",", "\<\"h\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.723252718572197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringReplace", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"\"\<110\>\"", " ", "\[Rule]", "\"\<100011101\>\""}]}], "]"}], 
    " ", "&"}], ",", " ", "\"\<110110110\>\"", ",", " ", "5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.723252728008975*^9, 3.7232527986027174`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"110110110\"\>", ",", "\<\"100011101100011101100011101\"\>", 
   ",", "\<\"100011000111011000111010011000111011000111010011000111011\"\>", 
   ",", "\<\"\
100010001110100110001110110001110100110001110110010001110100110001110110001110\
100110001110110010001110100110001110111\"\>", 
   ",", "\<\"\
100010001100011101100100011101001100011101100011101001100011101100100011101001\
100011101100011101010001100011101100100011101001100011101100011101001100011101\
100100011101001100011101100011101010001100011101100100011101001100011101111\"\
\>", ",", \
"\<\"1000100010001110100110001110110001110101000110001110110010001110100110001\
110110001110100110001110110010001110100110001110110001110101000110001110110010\
001110100110001110110001110100110001110110100010001110100110001110110001110101\
000110001110110010001110100110001110110001110100110001110110010001110100110001\
110110001110101000110001110110010001110100110001110110001110100110001110110100\
01000111010011000111011000111010100011000111011001000111010011000111011111\"\>\
"}], "}"}]], "Output",
 CellChangeTimes->{{3.7232527905299854`*^9, 3.7232527991220865`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"conv", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", " ", "==", " ", "\"\<0\>\""}], ",", "1", ",", "2"}], 
      "]"}], "&"}], ",", 
    RowBox[{"Characters", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72325280291439*^9, 3.7232528594563985`*^9}, 
   3.7232529016266165`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conv", "[", "\"\<11010101\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7232528825243664`*^9, 3.7232528893458977`*^9}, {
  3.723252931736682*^9, 3.723252947196246*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2"}],
   "}"}]], "Output",
 CellChangeTimes->{3.723252947578524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"conv", "[", "#", "]"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"100", ",", 
          RowBox[{"StringLength", "[", "#", "]"}]}], "]"}]}], "]"}], " ", 
      "&"}], ",", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"\"\<110\>\"", " ", "\[Rule]", "\"\<100011101\>\""}]}], 
         "]"}], " ", "&"}], ",", " ", "\"\<110110110\>\"", ",", " ", "15"}], 
      "]"}]}], "]"}], ",", " ", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723252950668713*^9, 3.7232530853560333`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztmTFKA2EQhRf0ABZiLwQs0lspf2spHkFiHew9g2BpYWNlIXiAWKQzhX3S
KEIqY6MniItgaxBd5r1/vsBi8cA3882byUK2j4dHJ2tN02y0z6B91ttn8bjf
Oxu+levLnenmZFweBqfLi9dxab4+7+Xj4H7vqv9cdu8Wt1uzUZkvz28On17+
Tccff/x1/f+qR/ffdf3R9XXNHz7a+Wa+3vmHP/dfmX/0fKL5449/Zn/3+riP
dfOP7i87f/iQT2X+6vN193fnr84Xf/wz+9d+X+APH35/8K3PPf/w5/4r86+d
j3p/+OOvvF/q9bnfR/jzfqDMHz7kU5m/+nzd/d35R++X+nzxx5/74ntf3PnD
RzvfzNc7//Dn/ivzh0/u/cc/t797fe73Ef68Hyjzhw/5VOavPl93f3f+2fdL
vT/8c/tzX3Lzh492vpmvd/7hz/1X5g+fuvOpPl/8tfdLvT73+wj/uu+vO3/4
kE9l/urzdfd3589+sV/46/q754/7Ah9+f2C+qnzgz/1X5g8f8tklf/X+svu7
1+d+H+HP/VXmDx/yqcxffb7u/u782S/4KNef3T8639H9ZecPH+18M1/v/MOf
+6/MHz7kU5m/+nzd/d3rU89f7flQ38/o+brzhw/5VOYfPZ/s/KP7y84fPt75
jp5PtL96PthP7hf5zMs/ej7Z+Uf3l50/fMinMv/o+dTOP7p+9frc8+3OJ7q/
7PzhQz6V+a/Sf/77/UFHR0dH/63O9xPf3/Dpjs+q/UNHR0dHR0dHz6ZHv5+p
///o+aCjo6Ojo6Ojo6PXpH8CaltoUw==
   "], {{0, 0}, {100, 16}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.723252998047698*^9, 3.723253059619146*^9, {3.723253092324545*^9, 
   3.7232530984869165`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7232529281091127`*^9, 3.723252928127119*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cat", " ", "=", " ", "7"}]], "Input",
 CellChangeTimes->{{3.723253214131629*^9, 3.7232532160529933`*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.723253216531333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["cat"], "Input",
 CellChangeTimes->{{3.7232532181514835`*^9, 3.7232532217810616`*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.7232532228758364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dog", " ", "=", " ", "9"}], ",", 
     RowBox[{"cat", "=", "5"}]}], "}"}], ",", " ", 
   RowBox[{"dog", "+", "cat"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723253239613723*^9, 3.723253299899273*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.7232532714723454`*^9, 3.7232533004616737`*^9}}]
}, Open  ]],

Cell[BoxData["dog"], "Input",
 CellChangeTimes->{{3.723253280866022*^9, 3.7232532820318513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"dog", "\[IndentingNewLine]", "cat"}], "Input",
 CellChangeTimes->{{3.723253306367868*^9, 3.723253307799883*^9}}],

Cell[BoxData["dog"], "Output",
 CellChangeTimes->{3.723253308746561*^9}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.723253308755562*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["cat"], "Input",
 CellChangeTimes->{{3.7232533129715624`*^9, 3.723253313159692*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.723253313572991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sqrt", "=", "9"}], "}"}], ",", 
   RowBox[{"Sqrt", "+", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7232533191729608`*^9, 3.723253357846421*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.7232533592904453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723253422090036*^9, 3.7232534335491724`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11586#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 3.9999998367346956`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7232534346289387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "^", "3"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723253437634081*^9, 3.7232534686130776`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11639#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11639#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDndHJ5emEtJ6QO+nqtG6T
PMR1OynPDyntGNlcl4lj547zEONGN5tmp7F5KrNGtuqF7+/F5z6UhHvUJAMc
Dhf6z/+DkhSj3fNJZ7Yn+FmlSjF/3+2PVpWWt2ERcPCQ6GMFlghHJmo6X2IZ
8LTbM79CjAFX772ck4exYLpx26HnWD18NaqGs7LKhU309OgAmy7YIWxJ0Zsv
gDOHvX1L1/phSy5JgsePwO0yv8GRU2NwD63COko1DqsPnjZtuiOCDbRsM2uH
b7CXPr49vFkMDzI8h/ucpLBtsVLbuDQDKzVSyYS7DK5f6BggvpiFieR3y3K5
HC64yUuutp+D18+y5SnZP+AMDwF3X68CljYL8kcpC/AmbbzM8aESdj5npEvu
UMEBtZQbrZZLcCY5zu579DLsorpiIgpdgS1MV4wFG2hCVxnnQPkqfMuzY2pn
8E+YfTGh+ss6Wq20Mpsr+QXzwgMMWf5rcHYgs4o7h6ZMB03WMdXwyeMMFuax
DkfbjGjxQrR6oFCWStfApYTYDKr9b9hCwqs1EKB3PKZHeKdpYVxjLEdmvgGn
v+EUmvegO51zjUl3N2FSULrLU+IfWOz6VZjFR7dU+trLY7fgGI4XiaxDP2HW
0MUfdHCTglxGDNHDuRXMeMkldCJ10aE5DL2fz28JjUTnFV3rK0hAp3i9Xt2V
hbZj7Ak0akDrTjzaLXqPnlqcHWtgo4sj22IutKL1TtT7TD5aPFpUaShEf8rR
XBdOoFk+cY51k+jgt0e45yXozw+G+unz6BLXY0VhKnSarDyCsow+HHJb2r2G
JuDH64s16BmeDy1+A82n1bm5b6Ff2Zqo9Xr0X7rRg+M=
       "]]},
     Annotation[#, "Charting`Private`Tag$11639#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 7.999999510204092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7232534691094246`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "^", "3"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<the x coordinates\>\"", ",", "\"\<the y coordinates\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.723253509609238*^9, 3.72325353466503*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11687#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11687#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDndHJ5emEtJ6QO+nqtG6T
PMR1OynPDyntGNlcl4lj547zEONGN5tmp7F5KrNGtuqF7+/F5z6UhHvUJAMc
Dhf6z/+DkhSj3fNJZ7Yn+FmlSjF/3+2PVpWWt2ERcPCQ6GMFlghHJmo6X2IZ
8LTbM79CjAFX772ck4exYLpx26HnWD18NaqGs7LKhU309OgAmy7YIWxJ0Zsv
gDOHvX1L1/phSy5JgsePwO0yv8GRU2NwD63COko1DqsPnjZtuiOCDbRsM2uH
b7CXPr49vFkMDzI8h/ucpLBtsVLbuDQDKzVSyYS7DK5f6BggvpiFieR3y3K5
HC64yUuutp+D18+y5SnZP+AMDwF3X68CljYL8kcpC/AmbbzM8aESdj5npEvu
UMEBtZQbrZZLcCY5zu579DLsorpiIgpdgS1MV4wFG2hCVxnnQPkqfMuzY2pn
8E+YfTGh+ss6Wq20Mpsr+QXzwgMMWf5rcHYgs4o7h6ZMB03WMdXwyeMMFuax
DkfbjGjxQrR6oFCWStfApYTYDKr9b9hCwqs1EKB3PKZHeKdpYVxjLEdmvgGn
v+EUmvegO51zjUl3N2FSULrLU+IfWOz6VZjFR7dU+trLY7fgGI4XiaxDP2HW
0MUfdHCTglxGDNHDuRXMeMkldCJ10aE5DL2fz28JjUTnFV3rK0hAp3i9Xt2V
hbZj7Ak0akDrTjzaLXqPnlqcHWtgo4sj22IutKL1TtT7TD5aPFpUaShEf8rR
XBdOoFk+cY51k+jgt0e45yXozw+G+unz6BLXY0VhKnSarDyCsow+HHJb2r2G
JuDH64s16BmeDy1+A82n1bm5b6Ff2Zqo9Xr0X7rRg+M=
       "]]},
     Annotation[#, "Charting`Private`Tag$11687#3"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"the x coordinates\"", TraditionalForm], 
    FormBox["\"the y coordinates\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 7.999999510204092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.723253535406555*^9}]
}, Open  ]]
},
WindowSize->{624, 373},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 3, 27, "Input"],
Cell[741, 27, 127, 3, 27, "Output"]
}, Open  ]],
Cell[883, 33, 214, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[1122, 41, 55236, 911, 69, InheritFromParent],
Cell[56361, 954, 55132, 909, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111530, 1868, 130, 2, 27, "Input"],
Cell[111663, 1872, 55217, 912, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166917, 2789, 126, 2, 27, "Input"],
Cell[167046, 2793, 183, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167266, 2803, 147, 3, 27, "Input"],
Cell[167416, 2808, 160, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167613, 2817, 306, 7, 27, "Input"],
Cell[167922, 2826, 143, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168102, 2834, 145, 3, 27, InheritFromParent],
Cell[168250, 2839, 96, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168383, 2846, 148, 3, 27, "Input"],
Cell[168534, 2851, 55037, 907, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223608, 3763, 267, 6, 27, "Input"],
Cell[223878, 3771, 146, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224061, 3779, 246, 6, 27, "Input"],
Cell[224310, 3787, 135, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224482, 3795, 301, 7, 27, "Input"],
Cell[224786, 3804, 786, 13, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225609, 3822, 278, 7, 27, "Input"],
Cell[225890, 3831, 230, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226157, 3841, 189, 4, 27, "Input"],
Cell[226349, 3847, 154, 2, 27, "Output"]
}, Open  ]],
Cell[226518, 3852, 283, 8, 27, "Input"],
Cell[CellGroupData[{
Cell[226826, 3864, 275, 7, 27, "Input"],
Cell[227104, 3873, 189, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227330, 3883, 165, 3, 27, "Input"],
Cell[227498, 3888, 181, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227716, 3898, 211, 5, 27, "Input"],
Cell[227930, 3905, 214, 6, 27, "Output"]
}, Open  ]],
Cell[228159, 3914, 251, 6, 27, "Input"],
Cell[CellGroupData[{
Cell[228435, 3924, 331, 9, 27, InheritFromParent],
Cell[228769, 3935, 183, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228989, 3945, 305, 7, 27, "Input"],
Cell[229297, 3954, 1778, 41, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231112, 4000, 133, 2, 27, "Input"],
Cell[231248, 4004, 69, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231354, 4010, 162, 3, 27, "Input"],
Cell[231519, 4015, 615, 19, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232171, 4039, 273, 7, 27, "Input"],
Cell[232447, 4048, 160, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232644, 4057, 303, 8, 27, "Input"],
Cell[232950, 4067, 201, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233188, 4077, 243, 6, 27, "Input"],
Cell[233434, 4085, 199, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233670, 4096, 182, 4, 27, "Input"],
Cell[233855, 4102, 127, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234019, 4110, 259, 7, 27, "Input"],
Cell[234281, 4119, 137, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234455, 4127, 282, 7, 27, "Input"],
Cell[234740, 4136, 92, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234869, 4143, 195, 4, 27, "Input"],
Cell[235067, 4149, 971, 30, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236075, 4184, 288, 7, 27, "Input"],
Cell[236366, 4193, 183, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236586, 4203, 244, 7, 27, "Input"],
Cell[236833, 4212, 137, 3, 27, "Output"]
}, Open  ]],
Cell[236985, 4218, 127, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[237137, 4224, 296, 7, 27, InheritFromParent],
Cell[237436, 4233, 127, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237600, 4241, 294, 7, 27, "Input"],
Cell[237897, 4250, 171, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238105, 4259, 522, 14, 27, "Input"],
Cell[238630, 4275, 1756, 47, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240423, 4327, 598, 15, 45, "Input"],
Cell[241024, 4344, 3832, 68, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244893, 4417, 257, 7, 27, "Input"],
Cell[245153, 4426, 235, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245425, 4438, 302, 8, 27, "Input"],
Cell[245730, 4448, 639, 18, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246406, 4471, 301, 8, 27, "Input"],
Cell[246710, 4481, 399, 10, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247146, 4496, 127, 2, 27, "Input"],
Cell[247276, 4500, 72, 1, 27, "Output"]
}, Open  ]],
Cell[247363, 4504, 227, 5, 27, "Input"],
Cell[CellGroupData[{
Cell[247615, 4513, 134, 2, 27, "Input"],
Cell[247752, 4517, 70, 1, 27, "Output"]
}, Open  ]],
Cell[247837, 4521, 199, 5, 27, "Input"],
Cell[CellGroupData[{
Cell[248061, 4530, 123, 2, 27, "Input"],
Cell[248187, 4534, 70, 1, 27, "Output"]
}, Open  ]],
Cell[248272, 4538, 283, 7, 27, "Input"],
Cell[CellGroupData[{
Cell[248580, 4549, 132, 2, 27, "Input"],
Cell[248715, 4553, 72, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248824, 4559, 141, 2, 27, "Input"],
Cell[248968, 4563, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249075, 4569, 198, 4, 27, "Input"],
Cell[249276, 4575, 194, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249507, 4585, 190, 4, 27, "Input"],
Cell[249700, 4591, 72, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249809, 4597, 325, 9, 27, "Input"],
Cell[250137, 4608, 1914, 63, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252088, 4676, 148, 3, 27, "Input"],
Cell[252239, 4681, 70, 1, 27, "Output"]
}, Open  ]],
Cell[252324, 4685, 736, 20, 27, "Input"],
Cell[CellGroupData[{
Cell[253085, 4709, 251, 5, 27, "Input"],
Cell[253339, 4716, 124, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253500, 4723, 176, 4, 27, "Input"],
Cell[253679, 4729, 203, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253919, 4739, 197, 5, 27, "Input"],
Cell[254119, 4746, 210, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254366, 4756, 249, 7, 27, "Input"],
Cell[254618, 4765, 417, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255072, 4781, 287, 8, 27, "Input"],
Cell[255362, 4791, 415, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255814, 4807, 288, 8, 27, "Input"],
Cell[256105, 4817, 5242, 104, 370, "Output"]
}, Open  ]],
Cell[261362, 4924, 337, 9, 27, "Input"],
Cell[CellGroupData[{
Cell[261724, 4937, 64135, 1303, 267, InheritFromParent],
Cell[325862, 6242, 334, 7, 19, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326233, 6254, 380, 10, 27, "Input"],
Cell[326616, 6266, 9077, 270, 203, "Output"]
}, Open  ]],
Cell[335708, 6539, 96, 1, 27, InheritFromParent],
Cell[CellGroupData[{
Cell[335829, 6544, 264, 7, 27, "Input"],
Cell[336096, 6553, 1152, 17, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337285, 6575, 330, 9, 27, "Input"],
Cell[337618, 6586, 584, 17, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338239, 6608, 489, 15, 27, "Input"],
Cell[338731, 6625, 260, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339028, 6636, 370, 10, 27, "Input"],
Cell[339401, 6648, 194, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339632, 6658, 403, 12, 27, "Input"],
Cell[340038, 6672, 125, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340200, 6680, 203, 5, 27, "Input"],
Cell[340406, 6687, 308, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340751, 6699, 335, 10, 27, "Input"],
Cell[341089, 6711, 309, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341435, 6723, 107, 1, 27, "Input"],
Cell[341545, 6726, 87, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341669, 6732, 208, 4, 27, "Input"],
Cell[341880, 6738, 87, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342004, 6744, 416, 9, 27, "Input"],
Cell[342423, 6755, 157, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342617, 6762, 171, 3, 27, "Input"],
Cell[342791, 6767, 139, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342967, 6774, 328, 7, 27, "Input"],
Cell[343298, 6783, 260, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343595, 6794, 361, 8, 27, "Input"],
Cell[343959, 6804, 750, 13, 19, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344746, 6822, 216, 5, 27, InheritFromParent],
Cell[344965, 6829, 192, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345194, 6838, 309, 5, 27, "Input"],
Cell[345506, 6845, 121, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345664, 6851, 143, 2, 27, "Input"],
Cell[345810, 6855, 225, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346072, 6864, 357, 9, 27, "Input"],
Cell[346432, 6875, 1163, 19, 244, "Output"]
}, Open  ]],
Cell[347610, 6897, 423, 12, 27, "Input"],
Cell[CellGroupData[{
Cell[348058, 6913, 191, 3, 27, "Input"],
Cell[348252, 6918, 181, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348470, 6928, 814, 22, 64, "Input"],
Cell[349287, 6952, 1287, 27, 77, "Output"]
}, Open  ]],
Cell[350589, 6982, 94, 1, 27, InheritFromParent],
Cell[CellGroupData[{
Cell[350708, 6987, 129, 2, 27, "Input"],
Cell[350840, 6991, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350947, 6997, 99, 1, 27, "Input"],
Cell[351049, 7000, 72, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351158, 7006, 296, 8, 27, "Input"],
Cell[351457, 7016, 99, 1, 27, "Output"]
}, Open  ]],
Cell[351571, 7020, 97, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[351693, 7025, 127, 1, 46, InheritFromParent],
Cell[351823, 7028, 72, 1, 27, "Output"],
Cell[351898, 7031, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352005, 7037, 97, 1, 27, "Input"],
Cell[352105, 7040, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352212, 7046, 229, 6, 27, "Input"],
Cell[352444, 7054, 73, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352554, 7060, 231, 6, 27, "Input"],
Cell[352788, 7068, 4877, 94, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357702, 7167, 318, 9, 27, "Input"],
Cell[358023, 7178, 11404, 205, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369464, 7388, 473, 13, 46, "Input"],
Cell[369940, 7403, 11502, 207, 170, "Output"]
}, Open  ]]
}
]
*)

